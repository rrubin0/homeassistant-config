- id: pool_light_menu_reset
  alias: Pool Light Menu Reset
  trigger:
  - platform: state
    entity_id: switch.pool_light
    to: 'off'
    for:
      seconds: 15
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.pool_scene
      option: Select an option...
  - service: input_select.select_option
    data:
      entity_id: input_select.pool_color
      option: Select an option...
- id: pool_scene
  alias: Pool Scene
  trigger:
  - platform: state
    entity_id: input_select.pool_scene
  action:
  - service: script.turn_on
    data_template:
      entity_id: "{% if is_state('input_select.pool_scene', 'Cycle') %}\n  script.pool_cycle\n{%
        elif is_state('input_select.pool_scene', 'Party') %}\n  script.pool_party\n{%
        elif is_state('input_select.pool_scene', 'Romance') %}\n  script.pool_romance\n{%
        elif is_state('input_select.pool_scene', 'Caribbean') %}\n  script.pool_caribbean\n{%
        elif is_state('input_select.pool_scene', 'Patriotic') %}\n  script.pool_patriotic\n{%
        elif is_state('input_select.pool_scene', 'Sunset') %}\n  script.pool_sunset\n{%
        elif is_state('input_select.pool_scene', 'Royal') %}\n  script.pool_royal\n{%
        else %}\n  unknown\n{% endif %}"
  - service: input_select.select_option
    data:
      entity_id: input_select.pool_color
      option: Select an option...
- id: pool_color
  alias: Pool Color
  trigger:
  - platform: state
    entity_id: input_select.pool_color
  action:
  - service: script.turn_on
    data_template:
      entity_id: "{% if is_state('input_select.pool_color', 'Blue') %}\n  script.pool_blue\n{%
        elif is_state('input_select.pool_color', 'Green') %}\n  script.pool_green\n{%
        elif is_state('input_select.pool_color', 'Red') %}\n  script.pool_red\n{%
        elif is_state('input_select.pool_color', 'White') %}\n  script.pool_white\n{%
        elif is_state('input_select.pool_color', 'Magenta') %}\n  script.pool_magenta\n{%
        else %}\n  unknown\n{% endif %}"
  - service: input_select.select_option
    data:
      entity_id: input_select.pool_scene
      option: Select an option...
- id: porch_lights_on
  alias: 'Auto On: Porch Lights'
  trigger:
  - platform: sun
    event: sunset
    offset: 00:05:00
    id: sunset
  - platform: sun
    event: sunrise
    offset: -00:15:00
    id: sunrise
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: sunset
      sequence:
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id:
          - group.porch_lights
    - conditions:
      - condition: trigger
        id: sunrise
      sequence:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: group.porch_lights
    default: []
- id: bbq_alert_high
  alias: 'BBQ: Grill Alarm High Temp'
  trigger:
  - platform: state
    entity_id: sensor.grill_temperature
  condition:
  - condition: state
    entity_id: binary_sensor.bbq_grill_high
    state: 'on'
  - condition: state
    entity_id: input_boolean.bbq_alert_high
    state: 'on'
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Grill Temp
      message: The grill is {{ states('sensor.grill_temperature') }} degrees. That's
        too hot!
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 1
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  mode: queued
- id: bbq_alert_low
  alias: 'BBQ: Grill Alarm Low Temp'
  trigger:
  - platform: state
    entity_id: sensor.grill_temperature
  condition:
  - condition: state
    entity_id: binary_sensor.bbq_grill_low
    state: 'on'
  - condition: state
    entity_id: input_boolean.bbq_alert_low
    state: 'on'
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Grill Temp
      message: The grill is {{ states('sensor.grill_temperature') }} degrees. That's
        too low!
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 1
  - delay:
      hours: 0
      minutes: 0
      seconds: 30
      milliseconds: 0
  mode: queued
- id: bbq_food_ready
  alias: 'BBQ: Food Target Temp'
  trigger:
  - platform: state
    entity_id: sensor.food_temperature
  condition:
  - condition: state
    entity_id: input_boolean.bbq_alert_food
    state: 'on'
  - condition: state
    entity_id: binary_sensor.bbq_food_ready
    state: 'on'
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Food Target Temp
      message: Food is at {{ states('sensor.food_temperature') }} degrees. Go check
        it!
      data:
        push:
          sound:
            name: default
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  mode: queued
- id: fountains_on
  alias: 'Auto On: Fountains'
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: 01:30:00
  - platform: state
    entity_id: group.all_devices
    from: not_home
    to: home
  condition:
  - condition: numeric_state
    entity_id: sensor.dark_sky_wind_speed
    below: 10
  - condition: state
    entity_id: binary_sensor.weatherflow_is_raining
    state: 'off'
  - condition: sun
    before: sunset
  - condition: state
    entity_id: group.all_devices
    state: home
  action:
  - service: switch.turn_on
    data:
      entity_id: switch.fountains_switch
- id: ring_doorbell_motion
  alias: Ring Doorbell Motion Triggered
  trigger:
  - platform: state
    entity_id: binary_sensor.ring_front_door_motion
    from: 'off'
    to: 'on'
  action:
  - service: shell_command.driveway_ptz_preset_3
  - delay:
      seconds: 60
  - service: shell_command.driveway_ptz_preset_2
  mode: single
- id: downstairs_bath_lights_on
  alias: 'Auto On: Downstairs Bathroom Lights'
  trigger:
  - type: motion
    platform: device
    device_id: 23a51a06fdce76f6eb8c7ea085f93c06
    entity_id: binary_sensor.downstairs_bath_motion
    domain: binary_sensor
  - type: opened
    platform: device
    device_id: 025bbb083829461a71ba66e52736892c
    entity_id: binary_sensor.bathroom_door_state
    domain: binary_sensor
    id: door
  condition:
  - condition: or
    conditions:
    - condition: numeric_state
      entity_id: sun.sun
      below: '26'
      attribute: elevation
    - condition: state
      entity_id: binary_sensor.weatherflow_is_raining
      state: 'on'
  action:
  - type: turn_on
    device_id: ebf25db50d9b7ba1b32f5cdcb6430878
    entity_id: switch.downstairs_bathroom_light
    domain: switch
  - wait_for_trigger:
    - type: no_motion
      platform: device
      device_id: 23a51a06fdce76f6eb8c7ea085f93c06
      entity_id: binary_sensor.downstairs_bath_motion
      domain: binary_sensor
      for:
        hours: 0
        minutes: 10
        seconds: 0
  - condition: device
    type: is_on
    device_id: ebf25db50d9b7ba1b32f5cdcb6430878
    entity_id: switch.downstairs_bathroom_light
    domain: switch
  - type: turn_off
    device_id: ebf25db50d9b7ba1b32f5cdcb6430878
    entity_id: switch.downstairs_bathroom_light
    domain: switch
  mode: restart
- id: game_room_lights_on
  alias: 'Auto On: Game Room Lights'
  trigger:
  - platform: state
    entity_id: binary_sensor.game_room_motion
    to: 'on'
  condition:
  - condition: numeric_state
    entity_id: sensor.illuminance_game_room
    below: '22'
  action:
  - service: light.turn_on
    data:
      entity_id: light.billiards
      brightness: 185
      transition: 5
- id: game_room_lights_off
  alias: 'Auto Off: Game Room Lights'
  trigger:
  - platform: state
    entity_id: binary_sensor.game_room_motion
    to: 'off'
    for:
      minutes: 7
  condition:
  - condition: state
    entity_id: group.game_room_lights
    state: 'on'
  action:
  - service: homeassistant.turn_off
    entity_id: group.game_room_lights
- id: kegerator_held_open
  alias: Kegerator Door Held Open
  trigger:
  - platform: state
    entity_id: binary_sensor.keg_door_held_open
    to: 'on'
  action:
  - service: notify.alexa_media
    data:
      data:
        type: announce
      target:
      - media_player.kitchen_dot
      - media_player.living_room_echo
      message: Attention, Please close the Kegerator door!
  - service: notify.mobile_app_rcom
    data:
      title: Kegerator Door Alarm!
      message: The Kegerator door is held open!
      data:
        push:
          sound:
            name: default
- id: kegerator_door_restored
  alias: Kegerator Door Restored
  trigger:
  - platform: state
    entity_id: binary_sensor.keg_door_held_open
    from: 'on'
    to: 'off'
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_dot
    data_template:
      volume_level: '{{ states(''sensor.alexa_volume'') }}'
  - service: notify.mobile_app_rcom
    data:
      title: Kegerator Restored
      message: Thanks for closing the door.
      data:
        push:
          sound:
            name: default
- id: kitchen_night_light_off
  alias: 'Auto Off: Kitchen Night Light'
  trigger:
  - platform: sun
    event: sunrise
    offset: 00:10:00
  condition:
  - condition: state
    entity_id: light.kitchen_night_light
    state: 'on'
  action:
  - service: light.turn_off
    data:
      entity_id: light.kitchen_night_light
- id: kitchen_night_light_on_lights_off
  alias: 'Auto On: Kitchen Night Light'
  description: turn on the night light if lights are off
  trigger:
  - platform: state
    entity_id: light.kitchen_lights
    to: 'off'
  - platform: sun
    event: sunset
    offset: '5'
  condition:
  - condition: state
    entity_id: light.kitchen_night_light
    state: 'off'
  - condition: sun
    after: sunset
  action:
  - service: light.turn_on
    data:
      hs_color:
      - 225
      - 15
      brightness_pct: 100
    target:
      entity_id: light.kitchen_night_light
- id: kitchen_shades_up
  alias: Kitchen Shade Up
  trigger:
  - platform: sun
    event: sunrise
    offset: -00:15:00
  action:
  - service: cover.open_cover
    entity_id: cover.kitchen_shade
- id: kitchen_shades_down
  alias: Kitchen Shade Down
  trigger:
  - platform: sun
    event: sunset
    offset: 00:15:00
  action:
  - service: script.turn_on
    target:
      entity_id: script.kitchen_shade_to_50
  mode: single
- id: pantry_light_on
  alias: 'Auto On: Pantry Light'
  trigger:
  - platform: state
    entity_id: binary_sensor.pantry_door_state
    to: 'on'
    id: pantry_open
  - platform: state
    entity_id:
    - binary_sensor.pantry_door_state
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
    id: pantry_closed
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: pantry_open
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 100
          transition: 1
        target:
          entity_id: light.pantry
    - conditions:
      - condition: trigger
        id: pantry_closed
      sequence:
      - type: turn_off
        device_id: 015dd1413d53d2b7bc14d1b8bbb9980f
        entity_id: light.pantry
        domain: light
    - conditions:
      - type: is_not_open
        condition: device
        device_id: f8fcf1657dd9655fd64729e18a3dad4f
        entity_id: binary_sensor.pantry_door_state
        domain: binary_sensor
        for:
          hours: 0
          minutes: 0
          seconds: 5
      - condition: device
        type: is_on
        device_id: 015dd1413d53d2b7bc14d1b8bbb9980f
        entity_id: light.pantry
        domain: light
      sequence:
      - type: turn_off
        device_id: 015dd1413d53d2b7bc14d1b8bbb9980f
        entity_id: light.pantry
        domain: light
    default: []
- id: living_room_fan_speed_select
  alias: 'Dropdown: Living Room Ceiling Fan Speed'
  trigger:
  - platform: state
    entity_id: input_select.living_room_fan_speed
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != ''Select an option...'' }}'
  action:
  - service: switch.turn_on
    entity_id: switch.living_room_fan
  - delay:
      seconds: 2
  - service: switch.turn_on
    data_template:
      entity_id: switch.living_room_fan_{{ trigger.to_state.state|lower|replace('
        ', '_') }}
  - service: input_select.select_option
    data_template:
      entity_id: '{{ trigger.to_state.entity_id }}'
      option: Select an option...
- id: living_room_fan_default_speed
  alias: Living Room Ceiling Fan Default Speed
  trigger:
  - platform: state
    entity_id: switch.living_room_fan
    from: 'off'
    to: 'on'
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.living_room_fan_speed
      option: High
- id: living_room_lamp_on
  alias: 'Schedule On: Living Room Lamp'
  trigger:
  - platform: sun
    event: sunset
    offset: -00:20:00
  condition:
  - condition: time
    before: '20:00:00'
  action:
  - service: light.turn_on
    data:
      entity_id: light.living_room_lamp
      brightness: 255
      transition: 60
- id: living_room_tv_input
  alias: 'Dropdown: Living Room TV Input'
  trigger:
  - platform: state
    entity_id: input_select.living_room_tv_input
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != ''Select an option...'' }}'
  action:
  - service: switch.turn_on
    data_template:
      entity_id: switch.{{ trigger.to_state.state|lower }}
  - service: input_select.select_option
    data_template:
      entity_id: '{{ trigger.to_state.entity_id }}'
      option: Select an option...
- id: living_room_amp_input
  alias: 'Dropdown: Onkyo Amp Input'
  trigger:
  - platform: state
    entity_id: input_select.onkyo_amp_input
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != ''Select an option...'' }}'
  action:
  - service: switch.turn_on
    data_template:
      entity_id: switch.amp_input_{{ trigger.to_state.state|lower }}
  - service: input_select.select_option
    data_template:
      entity_id: '{{ trigger.to_state.entity_id }}'
      option: Select an option...
- id: humidor_low
  alias: Humidor Low
  trigger:
  - platform: state
    entity_id: binary_sensor.humidor_low
    to: 'on'
  action:
  - service: light.turn_on
    entity_id: light.sn1_led
    data:
      brightness: 255
      color_name: red
- id: humidor_ok
  alias: Humidor OK
  trigger:
  - platform: state
    entity_id: binary_sensor.humidor_low
    to: 'off'
  action:
  - service: light.turn_on
    entity_id: light.sn1_led
    data:
      brightness: 255
      color_name: green
- id: master_bathroom_lights_on
  alias: 'Auto On: Master Bathroom Lights'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.master_bedroom_entry_motion
    to: 'on'
  condition:
  - condition: or
    conditions:
    - condition: time
      after: '17:00:00'
      before: 08:45:00
    - condition: state
      entity_id: binary_sensor.weatherflow_is_raining
      state: 'on'
  - condition: numeric_state
    entity_id: sensor.illuminance_master_bedroom_entry
    below: '45'
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.master_bathroom_morning
  mode: single
- id: master_bathroom_lights_off
  alias: 'Auto Off: Master Bathroom Lights'
  trigger:
  - platform: state
    entity_id: binary_sensor.master_bedroom_entry_motion
    to: 'off'
    for:
      minutes: 30
  condition:
  - condition: state
    entity_id: light.master_bathroom_ceiling
    state: 'on'
  action:
  - service: light.turn_off
    data: {}
    target:
      area_id: 69a3968c0130497e862157a750090907
- id: master_bath_shade_up_weekday
  alias: Master Bath Shade Up Weekday
  trigger:
  - platform: time
    at: '11:00:00'
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: cover.open_cover
    entity_id: cover.master_bath_shades
  mode: single
- id: master_bath_shade_up_weekend
  alias: Master Bath Shade Up Weekend
  trigger:
  - platform: time
    at: '12:00:00'
  condition:
  - condition: time
    weekday:
    - sat
    - sun
  action:
  - service: cover.open_cover
    entity_id: cover.master_bath_shades
- id: master_bath_shade_down
  alias: Master Bath Shade Down
  trigger:
  - platform: sun
    event: sunset
    offset: 00:10:00
  action:
  - service: cover.close_cover
    entity_id: cover.master_bath_shades
- id: master_bedroom_fan_on
  alias: Master Bedroom Fan On
  trigger:
  - platform: state
    entity_id: binary_sensor.master_bedroom_presence
    to: 'on'
  condition:
  - condition: state
    entity_id: switch.master_bedroom_fan
    state: 'off'
  - condition: template
    value_template: '{{ states(''sensor.master_bedroom_fan_speed'') != ''Off'' }}'
  action:
  - service: switch.turn_on
    entity_id: switch.master_bedroom_fan
- id: master_bedroom_fan_auto
  alias: Master Bedroom Fan Auto
  trigger:
  - platform: time_pattern
    minutes: /15
  condition:
  - condition: state
    entity_id: switch.master_bedroom_fan
    state: 'on'
  - condition: state
    entity_id: input_boolean.master_fan_hold
    state: 'off'
  action:
  - service: input_select.select_option
    data_template:
      entity_id: input_select.master_bedroom_fan_speed
      option: '{{ states(''sensor.master_bedroom_fan_speed'') }}'
- id: master_bedroom_fan_speed
  alias: 'Dropdown: Master Bedroom Fan Speed Select'
  trigger:
  - platform: state
    entity_id: input_select.master_bedroom_fan_speed
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != ''Select an option...'' }}'
  - condition: template
    value_template: '{{ trigger.to_state.state != ''Off'' }}'
  action:
  - service: homeassistant.turn_off
    entity_id: group.master_bedroom_fan
  - delay:
      seconds: 1
  - service: switch.turn_on
    data_template:
      entity_id: switch.master_bedroom_fan_{{ trigger.to_state.state|lower|replace('
        ', '_') }}
  - service: input_select.select_option
    data_template:
      entity_id: input_select.master_bedroom_fan_speed
      option: '{{ states(''trigger.to_state'') }}'
- id: master_bedroom_fan_off_selected
  alias: 'Dropdown Option: Master Bedroom Fan - Off'
  trigger:
  - platform: state
    entity_id: input_select.master_bedroom_fan_speed
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state == ''Off'' }}'
  - condition: state
    entity_id: switch.master_bedroom_fan
    state: 'on'
  action:
  - service: switch.turn_off
    entity_id: switch.master_bedroom_fan
- id: master_bedroom_fan_off_triggered
  alias: Master Bedroom Fan Off Triggered
  trigger:
  - platform: state
    entity_id: binary_sensor.master_bedroom_presence
    to: 'off'
    for:
      minutes: 15
  condition:
  - condition: state
    entity_id: switch.master_bedroom_fan
    state: 'on'
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  action:
  - service: switch.turn_off
    entity_id: switch.master_bedroom_fan
- id: master_bedroom_fan_reset_speed
  alias: Master Bedroom Fan Reset Speed
  trigger:
  - platform: state
    entity_id: switch.master_bedroom_fan
    to: 'off'
  action:
  - service: homeassistant.turn_off
    entity_id: group.master_bedroom_fan
  - delay:
      seconds: 1
  - service: input_select.select_option
    data_template:
      entity_id: '{{ trigger.to_state.entity_id }}'
      option: Select an option...
- id: bedframe_default_crystal
  alias: Under Bed Default Crystal
  trigger:
  - platform: state
    entity_id:
    - light.bedframe_light
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  condition:
  - condition: state
    entity_id: input_select.mbr_under_bed_color
    state: Select an option...
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.mbr_under_bed_color
      option: Crystal
  - service: input_select.select_option
    data_template:
      entity_id: '{{ trigger.to_state.entity_id }}'
      option: Select an option...
- id: bedframe_select_crystal
  alias: 'Dropdown: Master Bedroom Bedframe LED Strip'
  trigger:
  - platform: state
    entity_id:
    - input_select.mbr_under_bed_color
    to: Blue
    id: blue
  - platform: state
    entity_id: input_select.mbr_under_bed_color
    to: Crystal
    id: crystal
  - platform: state
    entity_id:
    - input_select.mbr_under_bed_color
    to: Cyan
    id: cyan
  - platform: state
    entity_id:
    - input_select.mbr_under_bed_color
    to: Green
    id: green
  - platform: state
    entity_id:
    - input_select.mbr_under_bed_color
    to: Pink
    id: pink
  - platform: state
    entity_id:
    - input_select.mbr_under_bed_color
    to: Red
    id: red
  - platform: state
    entity_id:
    - input_select.mbr_under_bed_color
    to: Violet
    id: violet
  - platform: state
    entity_id:
    - input_select.mbr_under_bed_color
    to: Yellow
    id: yellow
  - platform: state
    entity_id:
    - input_select.mbr_under_bed_color
    to: White
    id: white
  - platform: state
    entity_id:
    - input_select.mbr_under_bed_color
    to: 'Off'
    id: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: blue
      sequence:
      - service: light.turn_on
        data:
          transition: 3
          rgb_color:
          - 0
          - 0
          - 255
          brightness_pct: 100
        target:
          entity_id: light.bedframe_light
    - conditions:
      - condition: trigger
        id: crystal
      sequence:
      - service: light.turn_on
        data:
          rgb_color:
          - 0
          - 55
          - 55
          brightness_pct: 75
          transition: 3
        target:
          entity_id: light.bedframe_light
    - conditions:
      - condition: trigger
        id: green
      sequence:
      - service: light.turn_on
        data:
          transition: 3
          rgb_color:
          - 0
          - 255
          - 0
          brightness_pct: 100
        target:
          entity_id: light.bedframe_light
    - conditions:
      - condition: trigger
        id: pink
      sequence:
      - service: light.turn_on
        data:
          transition: 3
          rgb_color:
          - 255
          - 0
          - 255
          brightness_pct: 100
        target:
          entity_id: light.bedframe_light
    - conditions:
      - condition: trigger
        id: red
      sequence:
      - service: light.turn_on
        data:
          transition: 3
          rgb_color:
          - 255
          - 0
          - 0
          brightness_pct: 100
        target:
          entity_id: light.bedframe_light
    - conditions:
      - condition: trigger
        id: violet
      sequence:
      - service: light.turn_on
        data:
          transition: 3
          rgb_color:
          - 100
          - 0
          - 255
          brightness_pct: 100
        target:
          entity_id: light.bedframe_light
    - conditions:
      - condition: trigger
        id: yellow
      sequence:
      - service: light.turn_on
        data:
          transition: 3
          rgb_color:
          - 255
          - 255
          - 0
          brightness_pct: 100
        target:
          entity_id: light.bedframe_light
    - conditions:
      - condition: trigger
        id: cyan
      sequence:
      - service: light.turn_on
        data:
          transition: 3
          rgb_color:
          - 0
          - 225
          - 255
          brightness_pct: 100
        target:
          entity_id: light.bedframe_light
    - conditions:
      - condition: trigger
        id: white
      sequence:
      - service: light.turn_on
        data:
          transition: 3
          color_temp: 320
          brightness_pct: 100
        target:
          entity_id: light.bedframe_light
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - type: turn_off
        device_id: e64f90065ecd6183db3257294614cff1
        entity_id: light.bedframe_light
        domain: light
    default: []
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: input_select.select_option
    data_template:
      entity_id: '{{ trigger.to_state.entity_id }}'
      option: Select an option...
- id: nursery_fan_on
  alias: Nursery Fan On
  trigger:
  - platform: state
    entity_id: binary_sensor.nursery_presence
    to: 'on'
  condition:
  - condition: state
    entity_id: fan.nursery_fan
    state: 'off'
  - condition: template
    value_template: '{{ states(''sensor.nursery_fan_speed'') != ''0'' }}'
  action:
  - service: fan.turn_on
    entity_id: fan.nursery_fan
  - service: fan.set_percentage
    entity_id: fan.nursery_fan
    data_template:
      percentage: '{{ states(''sensor.nursery_fan_speed'') | int}}'
- id: nursery_fan_auto
  alias: 'Fan: Nursery Fan Auto Speed Select'
  trigger:
  - platform: time_pattern
    minutes: /10
  condition:
  - condition: state
    entity_id: input_boolean.nursery_fan_hold
    state: 'off'
  - condition: or
    conditions:
    - condition: state
      entity_id: binary_sensor.nursery_presence
      state: 'on'
    - condition: time
      after: '19:30:00'
      before: 08:30:00
  action:
  - service: fan.set_percentage
    entity_id: fan.nursery_fan
    data_template:
      percentage: '{{ states(''sensor.nursery_fan_speed'') | int }}'
- id: nursery_vacant
  alias: 'Auto Off: Nursery Vacant'
  trigger:
  - platform: state
    entity_id: binary_sensor.nursery_presence
    to: 'off'
    for:
      minutes: 5
  condition:
  - condition: time
    before: '19:00:00'
    after: 00:00:00
  action:
  - service: fan.turn_off
    entity_id: fan.nursery_fan
  - service: homeassistant.turn_off
    data: {}
    target:
      area_id: ade76688dbb34b8d84635f8458b99cda
- id: alexa_volume_reset_living_room
  alias: 'Alexa: Reset Living Room Volume '
  trigger:
  - platform: state
    entity_id: media_player.living_room_echo
    to: idle
    for:
      minutes: 2
  action:
  - service: media_player.volume_set
    entity_id: media_player.living_room_echo
    data_template:
      volume_level: '{{ states(''sensor.alexa_volume'') }}'
- id: alexa_volume_reset_game_room
  alias: Reset Alexa Volume Game Room
  trigger:
  - platform: state
    entity_id: media_player.game_room_echo
    to: idle
    for:
      minutes: 2
  action:
  - service: media_player.volume_set
    entity_id: media_player.game_room_echo
    data_template:
      volume_level: '{{ states(''sensor.alexa_volume'') }}'
- id: alexa_volume_reset_nursery
  alias: Reset Alexa Volume Nursery
  trigger:
  - platform: state
    entity_id: media_player.nursery_dot
    to: idle
    for:
      minutes: 1
  action:
  - service: media_player.volume_set
    entity_id: media_player.nursery_dot
    data_template:
      volume_level: '{{ states(''sensor.alexa_volume'') }}'
- id: alexa_volume_reset_wine_room
  alias: Reset Alexa Volume Wine Room
  trigger:
  - platform: state
    entity_id: media_player.bar_dot
    to: idle
    for:
      minutes: 1
  action:
  - service: media_player.volume_set
    entity_id: media_player.bar_dot
    data_template:
      volume_level: '{{ states(''sensor.alexa_volume'') }}'
- id: alexa_volume_reset_kitchen
  alias: Reset Alexa Volume Kitchen
  trigger:
  - platform: state
    entity_id: media_player.kitchen_dot
    to: idle
    for:
      minutes: 1
  action:
  - service: media_player.volume_set
    entity_id: media_player.kitchen_dot
    data_template:
      volume_level: '{{ states(''sensor.alexa_volume'') }}'
- id: alexa_volume_reset_master_bath_room
  alias: Reset Alexa Volume Master Bathroom
  trigger:
  - platform: state
    entity_id: media_player.master_bathroom_dot
    to: idle
    for:
      minutes: 1
  action:
  - service: media_player.volume_set
    entity_id: media_player.master_bathroom_dot
    data_template:
      volume_level: '{{ states(''sensor.alexa_volume'') }}'
- id: alexa_volume_reset_master_bedroom
  alias: Reset Alexa Volume Master Bedroom
  trigger:
  - platform: state
    entity_id: media_player.master_bedroom_dot
    to: idle
    for:
      minutes: 1
  action:
  - service: media_player.volume_set
    entity_id: media_player.master_bedroom_dot
    data_template:
      volume_level: '{{ states(''sensor.alexa_volume'') }}'
- id: apple_tv_script_select
  alias: 'Scene Control: Home Theater Lighting'
  description: Automatically handles the scripts to change home theater lighting
  trigger:
  - platform: state
    entity_id: media_player.home_theater
    to: playing
  - platform: state
    entity_id: media_player.home_theater
    to: paused
  - platform: state
    entity_id: media_player.home_theater
    to: stopped
  - platform: state
    entity_id: media_player.home_theater
    to: idle
  condition:
  - condition: state
    entity_id: input_boolean.movie_night
    state: 'on'
  action:
  - service: script.turn_on
    data_template:
      entity_id: "{% if trigger.to_state.state == \"playing\" or trigger.to_state.state
        == \"resumed\" %}\n  script.movie_time\n{% elif trigger.to_state.state ==
        \"paused\" or trigger.to_state.state == \"stopped\" %}\n  script.movie_paused\n{%
        elif trigger.to_state.state == \"idle\" and now().strftime('%H%M')|int > 1800
        %}\n  script.tv_time\n{% else %}\n  script.evening\n{% endif %}"
- id: directv_channel_select
  alias: DirecTV Channel Selection
  description: Change the channel based on selection.
  trigger:
  - platform: state
    entity_id: input_select.directv_channel
  condition:
  - condition: template
    value_template: '{{ trigger.to_state.state != ''Select an option...'' }}'
  action:
  - service: script.turn_on
    data_template:
      entity_id: script.directv_media_living_room_{{ trigger.to_state.state|lower|replace('
        ', '_') }}
  - service: input_select.select_option
    data_template:
      entity_id: '{{ trigger.to_state.entity_id }}'
      option: Select an option...
  mode: single
- id: climate_resume_on_peak
  alias: 'Arrival: Climate Resume'
  trigger:
  - platform: state
    entity_id: group.all_devices
    from: not_home
    to: home
    for:
      minutes: 2
  condition:
  - condition: template
    value_template: '{{ states.climate.downstairs.attributes.current_temperature >=
      79 }}'
  action:
  - service: script.turn_on
    data: {}
    target:
      entity_id:
      - script.climate_downstairs_cooldown
      - script.ecobee_upstairs_cooldown
- id: climate_sleep_mode
  alias: 'Climate: Sleep Mode'
  trigger:
  - platform: state
    entity_id: script.bedtime
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: input_boolean.after_hours
    from: 'off'
    to: 'on'
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: Sleep
    target:
      entity_id:
      - climate.ecobee_downstairs
  - service: climate.set_preset_mode
    data:
      preset_mode: Sleep
    target:
      entity_id:
      - climate.ecobee_upstairs
- id: climate_door_held_open
  alias: 'Climate: Door Held Open Eco Mode On'
  description: Turn on Eco mode if a door is detected held open for too long.
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.door_held_open
    to: 'on'
    for:
      hours: 0
      minutes: 4
      seconds: 0
  condition:
  - condition: state
    entity_id: binary_sensor.hvac_running
    state: 'on'
  - condition: state
    entity_id: input_boolean.hvac_maintenance
    state: 'off'
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: Eco
    target:
      entity_id:
      - climate.ecobee_downstairs
  - service: climate.set_preset_mode
    data:
      preset_mode: Eco
    target:
      entity_id:
      - climate.ecobee_upstairs
  - service: script.tts_door_held_open
    data: {}
- id: climate_resume_door_restored
  alias: 'Climate: Resume on Door Restoral'
  trigger:
  - platform: state
    entity_id: binary_sensor.door_held_open
    to: 'off'
    for:
      minutes: 1
  condition: []
  action:
  - service: ecobee.resume_program
    data:
      entity_id: climate.ecobee_upstairs
      resume_all: 'true'
  - service: ecobee.resume_program
    data:
      entity_id: climate.ecobee_downstairs
      resume_all: 'true'
- id: climate_hvac_fan_summer
  alias: Set HVAC fan runtime summer
  trigger:
  - platform: state
    entity_id: sensor.season
    to: Summer
  action:
  - service: ecobee.set_fan_min_on_time
    data:
      entity_id: climate.downstairs
      fan_min_on_time: 15
  - service: ecobee.set_fan_min_on_time
    data:
      entity_id: climate.upstairs
      fan_min_on_time: 30
- id: climate_hvac_fan_winter
  alias: Set HVAC fan runtime winter
  trigger:
  - platform: state
    entity_id: sensor.season
    to: Winter
  - platform: state
    entity_id: sensor.season
    to: Awesome
  action:
  - service: ecobee.set_fan_min_on_time
    data:
      entity_id: climate.downstairs
      fan_min_on_time: 5
  - service: ecobee.set_fan_min_on_time
    data:
      fan_min_on_time: 5
- id: climate_eco_awesome
  alias: Set Eco Mode if weather is nice
  trigger:
  - platform: state
    entity_id: sensor.season
    to: Awesome
  condition:
  - condition: template
    value_template: '{{ states.climate.downstairs.attributes.current_temperature <=
      80 }}'
  - condition: template
    value_template: '{{ states.climate.upstairs.attributes.current_temperature <=
      82 }}'
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: Eco
    target:
      entity_id:
      - climate.ecobee_downstairs
  - service: climate.set_preset_mode
    data:
      preset_mode: Eco
    target:
      entity_id:
      - climate.ecobee_upstairs
- id: climate_precool_downstairs
  alias: 'Climate: Downstairs Precool '
  trigger:
  - platform: time
    at: '14:00:00'
  condition:
  - condition: state
    entity_id: sensor.season
    state: Summer
  - condition: or
    conditions:
    - condition: state
      entity_id: group.all_devices
      state: home
    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    before: 00:00:00
    after: 00:00:00
  - condition: template
    value_template: '{{ state_attr(''climate.ecobee_downstairs'',''preset_mode'')
      != ''Away'' }}'
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: Precool
    target:
      entity_id:
      - climate.ecobee_downstairs
- id: climate_precool_upstairs
  alias: 'Climate: Upstairs Precool '
  trigger:
  - platform: time
    at: '18:05:00'
  condition:
  - condition: state
    entity_id: sensor.season
    state: Summer
  - condition: or
    conditions:
    - condition: state
      entity_id: group.all_devices
      state: home
    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'on'
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: Precool
    target:
      entity_id:
      - climate.ecobee_upstairs
- id: accent_lights_on
  alias: 'Schedule On: Accent Lights'
  description: Turn the accent lights on at sunset
  trigger:
  - platform: sun
    event: sunset
    offset: -00:05:00
  action:
  - service: light.turn_on
    data:
      rgb_color:
      - 255
      - 173
      - 252
      brightness_pct: 100
      transition: 5
    target:
      entity_id: light.large_staircase_lamp
  - service: light.turn_on
    data:
      rgb_color:
      - 133
      - 218
      - 255
      brightness_pct: 100
      transition: 5
    target:
      entity_id: light.small_staircase_lamp
  - service: light.turn_on
    data:
      rgb_color:
      - 246
      - 193
      - 139
      brightness_pct: 100
      transition: 5
    target:
      entity_id: light.wine_room_lamp
- id: evening_scene_schedule
  alias: Evening Scene Schedule
  trigger:
  - platform: sun
    event: sunset
    offset: -00:17:00
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: group.all_devices
      state: home
    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'on'
  action:
  - service: script.turn_on
    entity_id: script.evening
- id: living_room_lights_on_cloudy
  alias: 'Auto On: Cloudy Scene'
  description: Turn on Cloudy Scene if raining
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.weatherflow_is_raining
    from: 'off'
    to: 'on'
    for:
      hours: 0
      minutes: 3
      seconds: 0
  - platform: template
    value_template: "{% if is_state('sensor.dark_sky_summary', 'Rain') %}\n  'true'\n{%
      elif is_state('sensor.dark_sky_summary', 'Thunderstorm') %}\n  'true'\n{% elif
      is_state('sensor.dark_sky_summary', 'Showers') %}\n  'true'\n{% elif is_state('sensor.dark_sky_summary',
      'Drizzle') %}\n  'true'\n{% elif is_state('sensor.dark_sky_summary', 'Mostly
      Cloudy') %}\n  'true'\n{% else %}\n  'false'\n{% endif %}"
  - platform: numeric_state
    entity_id: sensor.dark_sky_precip_intensity
    above: '1'
  condition:
  - condition: time
    after: 08:00:00
    before: '17:00:00'
  - condition: state
    entity_id: group.all_devices
    state: home
  - condition: numeric_state
    entity_id: sensor.dark_sky_cloud_coverage
    above: '69'
  - condition: numeric_state
    entity_id: sensor.front_entry_multisensor_illuminance
    below: '125'
  - condition: template
    value_template: '{{ states.media_player.home_theater.state != ''playing'' }}'
  action:
  - service: script.turn_on
    entity_id: script.cloudy
- id: enable_automations_on_arrival
  alias: 'Arrival: Enable Evening Scene Automation'
  trigger:
  - platform: state
    entity_id: group.all_devices
    from: not_home
    to: home
    for:
      minutes: 5
  action:
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.evening_scene_schedule
- id: lights_on_arrival
  alias: 'Arrival: Lights On After Dark'
  trigger:
  - platform: state
    entity_id: group.all_devices
    from: not_home
    to: home
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - condition: state
    entity_id: input_boolean.visitor_mode
    state: 'off'
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Welcome Home
      message: Turning on some lights
      data:
        push:
          sound: US-EN-Alexa-Welcome-Home.wav
  - service: script.turn_on
    entity_id: script.bright
  - service: homeassistant.turn_on
    entity_id: group.accent_lights
  - delay:
      minutes: 5
  - service: script.turn_on
    entity_id: script.evening
- id: away_mode_countdown
  alias: Away Mode Countdown
  trigger:
  - platform: state
    entity_id: group.all_devices
    from: home
    to: not_home
    for:
      minutes: 5
  condition:
  - condition: state
    entity_id: input_boolean.visitor_mode
    state: 'off'
  action:
  - service: timer.start
    entity_id: timer.away_mode
  - service: notify.mobile_app_rcom
    data:
      title: Away Detected
      message: Counting down...
      data:
        actions:
        - action: CANCEL_AWAY
          title: Cancel Away
          destructive: true
        - action: PAUSE_AWAY
          title: Pause Away
        - action: VISITOR
          title: Visitor Mode
- id: away_mode_on
  alias: Away Mode On
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.away_mode
  action:
  - service: script.away
- id: away_mode_cancel
  alias: Away Mode Cancel
  trigger:
  - platform: state
    entity_id: group.all_devices
    from: not_home
    to: home
  condition:
  - condition: template
    value_template: '{{ states(''timer.away_mode'') != ''idle''}}'
  action:
  - service: timer.cancel
    entity_id: timer.away_mode
  - service: notify.mobile_app_rcom
    data:
      title: Away Mode Canceled
      message: Away mode canceled.
- id: visitor_mode_via_code
  alias: Turn On Visitor Mode via Code
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.lock_south_door_status'') == ''Unlocked by
      Dog Sitter'' }}'
  condition:
  - condition: state
    entity_id: group.all_devices
    state: not_home
  - condition: state
    entity_id: input_boolean.visitor_mode
    state: 'off'
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.visitor_mode
- id: visitor_mode_cancel
  alias: Cancel Visitor Mode
  trigger:
  - platform: state
    entity_id: group.all_devices
    from: not_home
    to: home
    for:
      minutes: 7
  condition:
  - condition: state
    entity_id: input_boolean.visitor_mode
    state: 'on'
  action:
  - service: input_boolean.turn_off
    entity_id: input_boolean.visitor_mode
- id: visitor_mode_away
  alias: Visitor Away
  trigger:
  - platform: state
    entity_id: input_boolean.visitor_mode
    to: 'off'
    for:
      minutes: 5
  condition:
  - condition: state
    entity_id: group.all_devices
    state: not_home
  action:
  - service: timer.start
    entity_id: timer.away_mode
- id: visitor_mode_cancel_away
  alias: Disable away_mode when visitor_mode is on
  trigger:
  - platform: state
    entity_id: input_boolean.visitor_mode
    to: 'on'
  action:
  - service: automation.turn_off
    entity_id: automation.away_mode_countdown
  - service: automation.turn_off
    entity_id: automation.away_mode_on
- id: visitor_mode_off_away_mode_on
  alias: 'Automation Control: Away Mode On if Visitor Mode Off'
  description: Only enable away mode automation when visitor mode is turned off.
  trigger:
  - platform: state
    entity_id:
    - input_boolean.visitor_mode
    to: 'off'
    from: 'on'
  action:
  - service: automation.turn_on
    data: {}
    target:
      entity_id: automation.away_mode_countdown
  - service: automation.turn_on
    entity_id: automation.away_mode_on
- id: after_hours_shutdown
  alias: 'Auto Off: After Hours Shutdown'
  trigger:
  - platform: state
    entity_id: input_boolean.after_hours
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.party_mode
    state: 'off'
  action:
  - service: homeassistant.turn_off
    target:
      entity_id:
      - fan.patio_fan
      - group.exterior_lights
      - group.interior_lights
      - switch.outdoor_speakers
    data: {}
- id: alarm_clock_weekday
  alias: 'Alarm Clock: Wake Up (weekday)'
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'') == states(''input_datetime.alarm_clock_time'')[0:5]
      }}'
  condition:
  - condition: state
    entity_id: input_boolean.alarm_clock_weekday
    state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    before: 00:00:00
  action:
  - service: script.morning_sequence
    data: {}
  mode: single
- id: alarm_clock_weekend
  alias: 'Alarm Clock: Wake Up (weekend)'
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.time'') == states(''input_datetime.alarm_clock_time'')[0:5]
      }}'
  condition:
  - condition: state
    entity_id: input_boolean.alarm_clock_weekend
    state: 'on'
  - condition: time
    weekday:
    - sat
    - sun
    before: 00:00:00
  action:
  - service: script.morning_sequence
    data: {}
  mode: single
- id: after_hours_on
  alias: 'Schedule On: After Hours Sensor'
  trigger:
  - platform: time
    at: 03:00:00
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.after_hours
  mode: single
- id: after_hours_off
  alias: 'Schedule Off: After Hours Sensor'
  trigger:
  - platform: time
    at: 05:00:00
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.after_hours
- id: peak_hours_on
  alias: 'Auto On: Peak Hours'
  trigger:
  - platform: time
    at: '15:00:00'
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: input_boolean.holiday
    state: 'off'
  action:
  - service: input_boolean.turn_on
    data:
      entity_id: input_boolean.peak_hours
- id: peak_hours_off
  alias: 'Auto Off: Peak Hours'
  trigger:
  - platform: time
    at: '18:00:00'
  - platform: state
    entity_id: input_boolean.holiday
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.peak_hours
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.peak_hours
- id: sleeping_off_weekday
  alias: Sleeping Off Weekday
  trigger:
  - platform: time
    at: '10:30:00'
  condition:
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sleeping
- id: sleeping_off_weekend
  alias: Sleeping Off Weekend
  trigger:
  - platform: time
    at: '11:45:00'
  condition:
  - condition: time
    weekday:
    - sat
    - sun
  action:
  - service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sleeping
- id: alexa_tts
  alias: 'Dropdown: Alexa Text to Speech - TTS'
  trigger:
  - platform: state
    entity_id: input_select.alexa
  action:
  - service: media_player.volume_set
    data_template:
      entity_id: "{% if is_state('input_select.alexa', 'Living Room') %}\n  media_player.living_room_echo\n{%
        elif is_state('input_select.alexa', 'Master Bedroom') %}\n  media_player.master_bedroom\n{%
        elif is_state('input_select.alexa', 'Master Bathroom') %}\n  media_player.master_bathroom_dot\n{%
        elif is_state('input_select.alexa', 'Kitchen') %}\n  media_player.kitchen_dot\n{%
        elif is_state('input_select.alexa', 'Bar') %}\n  media_player.bar_echo_show\n{%
        elif is_state('input_select.alexa', 'Game Room') %}\n  media_player.game_room_echo\n{%
        elif is_state('input_select.alexa', 'Nursery') %}\n  media_player.nursery_dot\n{%
        elif is_state('input_select.alexa', 'Office') %}\n  media_player.office_dot\n{%
        elif is_state('input_select.alexa', 'Guest Room') %}\n  media_player.guest_room_dot\n{%
        elif is_state('input_select.alexa', 'None') %}\n  false\n{% endif %}\n"
      volume_level: '{{ states.input_number.alexa_volume.state | float /10 }}'
  - service: notify.alexa_media
    data_template:
      target: "{% if is_state('input_select.alexa', 'Living Room') %}\n  media_player.living_room_echo\n{%
        elif is_state('input_select.alexa', 'Master Bedroom') %}\n  media_player.master_bedroom_dot\n{%
        elif is_state('input_select.alexa', 'Master Bathroom') %}\n  media_player.master_bathroom_dot\n{%
        elif is_state('input_select.alexa', 'Kitchen') %}\n  media_player.kitchen_dot\n{%
        elif is_state('input_select.alexa', 'Bar') %}\n  media_player.bar_dot\n{%
        elif is_state('input_select.alexa', 'Game Room') %}\n  media_player.game_room_echo\n{%
        elif is_state('input_select.alexa', 'Nursery') %}\n  media_player.nursery_dot\n{%
        elif is_state('input_select.alexa', 'Office') %}\n  media_player.office_dot\n{%
        elif is_state('input_select.alexa', 'None') %}\n  false\n{% endif %}\n"
      message: '{{  states(''input_text.alexa_tts'') }}'
      data:
        type: tts
  - service: input_select.select_option
    data:
      entity_id: input_select.alexa
      option: None
- id: alexa_announce_rick
  alias: 'Announce: Rick Is Almost Home'
  trigger:
  - platform: numeric_state
    entity_id: proximity.rick
    below: 5
  condition:
  - condition: state
    entity_id: binary_sensor.workday_sensor
    state: 'on'
  - condition: state
    entity_id: input_boolean.holiday
    state: 'off'
  - condition: time
    before: '19:00:00'
    after: '14:00:00'
  action:
  - service: media_player.volume_set
    entity_id: media_player.living_room_echo
    data_template:
      volume_level: '{{ states(''sensor.alexa_volume'') }}'
  - service: notify.alexa_media_living_room
    data:
      message: Good news, Rick is less than 10 minutes away and will be home soon.
      data:
        type: announce
- id: alexa_announcements_on
  alias: 'Auto On: Alexa Announcements'
  trigger:
  - platform: time
    at: 08:00:00
  condition:
  - condition: state
    entity_id: input_boolean.announce
    state: 'off'
  action:
  - service: homeassistant.turn_on
    entity_id: input_boolean.announce
- id: alexa_announcements_off
  alias: 'Auto Off: Alexa Announcements'
  trigger:
  - platform: time
    at: '21:30:00'
  condition:
  - condition: state
    entity_id: input_boolean.announce
    state: 'on'
  action:
  - service: homeassistant.turn_off
    entity_id: input_boolean.announce
- id: alexa_announcements_startup
  alias: 'HA Start: Alexa Announcements'
  description: Sets input_boolean for alexa announcements to be enabled/disabled at
    Startup
  trigger:
  - platform: homeassistant
    event: start
  condition:
  - condition: time
    after: 08:00:00
    before: '21:30:00'
  action:
  - service: homeassistant.turn_on
    entity_id: input_boolean.announce
- id: notify_warm_weather
  alias: Reminder Close Doors When Weather is Warm
  trigger:
  - platform: numeric_state
    entity_id: sensor.dark_sky_temperature
    above: 84.5
  condition:
  - condition: state
    entity_id: binary_sensor.door_held_open
    state: 'on'
  - condition: state
    entity_id: group.all_devices
    state: home
  action:
  - service: script.tts_warm_weather
- id: notify_awesome_weather
  alias: 'Notify: Awesome Weather'
  trigger:
  - platform: state
    entity_id: sensor.season
    to: Awesome
    for:
      hours: 0
      minutes: 30
      seconds: 0
  condition:
  - condition: time
    after: 08:00:00
    before: '22:00:00'
  - condition: state
    entity_id: binary_sensor.all_doors
    state: 'off'
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Awesome Weather
      message: It's {{ states('sensor.dark_sky_temperature')|round }} degrees outside.
        Time to open up the house!
      data:
        push:
          sound:
            name: default
- id: notify_ios_cancel_away
  alias: iOS Cancel Away
  trigger:
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: CANCEL_AWAY
  action:
    service: timer.cancel
    entity_id: timer.away_mode
- id: notify_ios_pause_away
  alias: iOS Pause Away
  trigger:
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: PAUSE_AWAY
  action:
    service: timer.pause
    entity_id: timer.away_mode
- id: notify_ios_visitor_mode
  alias: iOS Visitor Mode
  trigger:
    platform: event
    event_type: mobile_app_notification_action
    event_data:
      action: VISITOR
  action:
  - service: input_boolean.turn_on
    entity_id: input_boolean.visitor_mode
  - service: timer.cancel
    entity_id: timer.away_mode
- id: notify_ha_startup
  alias: Startup Notification
  trigger:
    platform: homeassistant
    event: start
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Home Assistant Startup
      message: Home Assistant is up and running.
      data:
        push:
          sound:
            name: default
- id: notify_watchdog_master_bedroom
  alias: 'Notify: Bedroom Lights On While Away'
  trigger:
  - platform: state
    entity_id: group.master_bedroom_lights
    to: 'on'
  condition:
  - condition: state
    entity_id: group.all_devices
    state: not_home
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Home Assistant Alert
      message: Master Bedroom Lights On
      data:
        push:
          sound:
            name: default
- id: notify_watchdog_door_opened
  alias: 'Notify: Door Opened While Away'
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door_state, binary_sensor.south_door_state, binary_sensor.kitchen_door_state,
      binary_sensor.bathroom_door_state, binary_sensor.office_entry_door_state, binary_sensor.guest_room_balcony_door_state,
      binary_sensor.office_interior_door_state
    from: 'off'
    to: 'on'
  condition:
  - condition: state
    entity_id: group.all_devices
    state: not_home
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Exterior Door Opened
      message: Someone opened the {{ trigger.to_state.attributes.friendly_name }}.
      data:
        push:
          sound:
            name: default
- id: notify_leak_downstairs_hvac
  alias: Downstairs AC Leak Detector Alarm
  trigger:
  - platform: state
    entity_id: binary_sensor.downstairs_ac_leak_detector_state
    to: 'on'
  action:
  - service: climate.set_hvac_mode
    data:
      entity_id: climate.downstairs
      hvac_mode: 'off'
  - service: notify.mobile_app_rcom
    data:
      title: Leak Detected
      message: HVAC overflow detected downstairs! - AC turned off
      data:
        push:
          sound:
            name: default
            critical: 1
            volume: 1
- id: unlock_south_door_megs_arrival
  alias: 'Arrival: Unlock South Door'
  trigger:
  - platform: state
    entity_id: person.megs
    from: not_home
    to: home
  condition:
  - condition: template
    value_template: '{{ is_state(''lock.south_entry'', ''locked'') or false }}'
  action:
  - service: script.unlock_megs
    data: {}
- id: notify_unlock_south_door
  alias: South Door Unlock By User
  trigger:
  - platform: state
    entity_id: sensor.south_entry_lock_alarm_type
    to: '19'
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Door Unlocked
      message: South Door {{ states('sensor.lock_south_door_status') }}
      data:
        push:
          sound:
            name: default
  - service: notify.mobile_app_mip12
    data:
      title: Door Unlocked
      message: South Door {{ states('sensor.lock_south_door_status') }}
      data:
        push:
          sound:
            name: default
- id: button_living_room_single_press
  alias: 'Button: Living Room Smart Button'
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Living Room/action
    payload: single
    id: single
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Living Room/action
    payload: double
    id: double
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Living Room/action
    payload: triple
    id: triple
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Living Room/action
    payload: quadruple
    id: quadruple
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Living Room/action
    payload: hold
    id: hold
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Living Room/action
    payload: many
    id: many
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: single
      - condition: time
        before: 00:00:00
        after: '21:30:00'
      sequence:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.bedtime
      - service: media_player.volume_set
        entity_id: media_player.living_room_echo
        data_template:
          volume_level: '{{ states(''sensor.alexa_volume'') }}'
      - service: notify.alexa_media
        data:
          message: Goodnight. See you in the morning.
          target: media_player.living_room_echo
          data:
            type: tts
    - conditions:
      - condition: trigger
        id: double
      - condition: time
        before: 00:00:00
        after: '20:00:00'
      sequence:
      - service: script.master_bedroom_night_time
        data: {}
    - conditions:
      - condition: trigger
        id: triple
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bedtime
    - conditions:
      - condition: trigger
        id: quadruple
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.cozy
        metadata: {}
    default: []
- id: button_office_single_press
  alias: 'Button: Office Smart Button'
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: single
    id: single
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: double
    id: double
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: triple
    id: triple
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: quadruple
    id: quadruple
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: hold
    id: hold
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: many
    id: many
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: single
      sequence:
      - service: script.master_bedroom_night_time
        data: {}
    - conditions:
      - condition: trigger
        id: double
      - condition: time
        before: 00:00:00
        after: '21:30:00'
      sequence:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.bedtime
    - conditions:
      - condition: trigger
        id: triple
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bedtime
    - conditions:
      - condition: trigger
        id: quadruple
      sequence:
      - service: script.bright
        data: {}
    default: []
- id: state_master_bedroom_fan_speed
  alias: Master Bedroom Fan Speed State Save
  trigger:
    platform: state
    entity_id: switch.master_bedroom_fan, switch.master_bedroom_fan_1, switch.master_bedroom_fan_2,
      switch.master_bedroom_fan_3, switch.master_bedroom_fan_4, switch.master_bedroom_fan_5,
      switch.master_bedroom_fan_6, switch.master_bedroom_fan_7, switch.master_bedroom_fan_8,
      switch.master_bedroom_fan_9, switch.master_bedroom_fan_10, switch.master_bedroom_fan_11,
      switch.master_bedroom_fan_12
  action:
    service: mqtt.publish
    data_template:
      topic: /home/mbrfanspeed/{{ trigger.entity_id.split('.')[1] }}
      retain: true
      qos: 1
      payload: '{{ trigger.to_state.state }}'
- id: timer_bedtime_finish
  alias: 'Timer: Bedtime Timer Finished'
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.bedtime
  action:
  - service: script.bedtime
    data: {}
- id: timer_sun_up_finish
  alias: Sun Up Timer Finish
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.sun_up
  action:
  - service: script.sun_up
- id: minimote_1_b1_short
  alias: 'Minimote 1: Downstairs'
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 30
      value: 1
    id: b1_short
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 30
      value: 2
    id: b1_long
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 30
      value: 3
    id: b2_short
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 30
      value: 4
    id: b2_long
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 30
      value: 5
    id: b3_short
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 30
      value: 6
    id: b3_long
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 30
      value: 7
    id: b4_short
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 30
      value: 8
    id: b4_long
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: b1_short
      sequence:
      - service: light.turn_on
        data:
          brightness: 255
          color_temp: 200
        target:
          entity_id: light.office_desk_lamp
    - conditions:
      - condition: trigger
        id: b1_long
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.office_desk_lamp
    - conditions:
      - condition: trigger
        id: b2_short
      sequence:
      - service: light.turn_on
        data:
          brightness: 255
          rgb_color:
          - 255
          - 183
          - 255
        target:
          entity_id: light.office_desk_lamp
    - conditions:
      - condition: trigger
        id: b2_long
      sequence:
      - type: turn_off
        device_id: 031d7d7a52294ea15545c0f18087742c
        entity_id: light.kitchen_lights
        domain: light
    - conditions:
      - condition: trigger
        id: b3_short
      sequence:
      - service: script.evening
        data: {}
    - conditions:
      - condition: trigger
        id: b3_long
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.daybreak
    - conditions:
      - condition: trigger
        id: b4_short
      sequence:
      - service: script.tv_time
        data: {}
    - conditions:
      - condition: trigger
        id: b4_long
      sequence:
      - service: light.turn_off
        data: {}
        target:
          area_id:
          - e404ae11317c4432a90e1c144fea2e63
          - dc0c7510c5bc42509ea83f9d5c9c03f9
          - fcaa981e07fc4b0d867cd8b6f5801fc9
    default: []
- id: minimote_3_b1_short
  alias: 'Minimote 3: Upstairs'
  trigger:
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 48
      value: 1
    id: b1_short
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 48
      value: 2
    id: b1_long
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 48
      value: 5
    id: b3_short
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 48
      value: 6
    id: b3_long
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 48
      value:
    id: b4_short
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 48
      value: 8
    id: b4_long
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 48
      value: 3
    id: b2_short
  - platform: event
    event_type: zwave_js_value_notification
    event_data:
      node_id: 48
      value: 4
    id: b2_long
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: b1_short
      sequence:
      - service: script.master_bedroom_night_time
        data: {}
    - conditions:
      - condition: trigger
        id: b1_long
      sequence:
      - service: light.turn_off
        data:
          transition: 5
        target:
          area_id:
          - c422351f189a42449abb2a5bf0152863
          - 69a3968c0130497e862157a750090907
    - conditions:
      - condition: trigger
        id: b2_short
      sequence:
      - service: input_select.select_option
        data:
          option: '4'
        target:
          entity_id: input_select.master_bedroom_fan_speed
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.master_fan_hold
    - conditions:
      - condition: trigger
        id: b2_long
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.master_fan_hold
    - conditions:
      - condition: trigger
        id: b4_short
      sequence:
      - service: script.climate_upstairs_cooldown
        data: {}
    - conditions:
      - condition: trigger
        id: b4_long
      sequence:
      - service: script.ecobee_us_resume
        data: {}
    - conditions:
      - condition: trigger
        id: b3_long
      sequence:
      - service: script.start_bedtime_timer
        data: {}
    - conditions:
      - condition: trigger
        id: b3_short
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bedtime
    default: []
- id: test_ios_notifications
  alias: 'TEST: Notifications'
  trigger:
  - platform: state
    entity_id: input_boolean.state_change
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Testing
      message: iOS Test Notification Successful!
      data:
        push:
          thread-id: test
          sound:
            name: default
        apns_headers:
          apns-collapse-id: test
  - service: script.activate_alexa_actionable_notification
    data_template:
      text: I see that the office desk lamp is off, would you like it on?
      event_id: actionable_notification_test
      alexa_device: media_player.office_dot
- id: '1615340631232'
  alias: 'Auto On: Master Bedroom Night Light'
  description: Turn on the Bedframe LED Strip if motion is detected in Master Bedroom
    after sundown.
  use_blueprint:
    path: networkingcat/yet_another_motion_automation.yaml
    input:
      time_scene_night: 00:00:00
      motion_entity: binary_sensor.master_bedroom_entry_motion
      light_target:
        entity_id: light.bedframe_light
      no_motion_wait: 120
      elevation_check: 2
      time_scene_evening: 0:00:00
      time_scene_day: 0:00:00
- id: '1619709385856'
  alias: 'Auto On: AJ Night Time Scene'
  description: ''
  trigger:
  - platform: time
    at: '19:55:00'
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: group.all_devices
      state: home
    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'on'
  action:
  - scene: scene.aj_night_time
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.nursery_wall_light
  mode: single
- id: '1619991785170'
  alias: 'Notify: Smoke Alarm'
  description: ''
  trigger:
  - platform: state
    entity_id: sensor.smoke_upstairs_south
    to: Smoke
  - platform: state
    entity_id: sensor.smoke_downstairs_north
    to: Smoke
  condition:
  - condition: state
    entity_id: group.all_devices
    state: not_home
  action:
  - service: notify.mobile_app_rcom
    data:
      title: Smoke Alarm!
      message: '{{ trigger.to_state.state }} alarm detected on {{ trigger.entity_id
        }}'
      data:
        push:
          sound:
            name: default
  mode: single
- id: '1620358929402'
  alias: 'Climate: Upstairs Post-Cool'
  description: ''
  trigger:
  - platform: time
    at: '17:30:00'
  condition:
  - condition: state
    entity_id: sensor.season
    state: Summer
  - condition: or
    conditions:
    - condition: state
      entity_id: group.all_devices
      state: home
    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'on'
  - condition: template
    value_template: '{{ state_attr(''climate.upstairs'',''preset_mode'') != ''Away''
      }}'
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: Precool
    target:
      entity_id:
      - climate.ecobee_upstairs
  mode: single
- id: '1622171964857'
  alias: Nursery Vacant Daytime
  description: additional automation to handle the nightlight lamps so they don't
    get turned off at night
  trigger:
  - platform: state
    entity_id: binary_sensor.nursery_presence
    to: 'off'
    for: 00:05:00
  condition:
  - condition: time
    after: '11:30:00'
  action:
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id:
      - switch.nursery_lamp
  mode: single
- id: '1622870457071'
  alias: Door Held Open Restoral
  description: Place the HVAC back after door held open is clear.
  trigger:
  - platform: state
    entity_id: binary_sensor.door_held_open
    from: 'on'
    to: 'off'
    for: 00:00:05
  condition: []
  action:
  - service: ecobee.resume_program
    data:
      resume_all: true
  - service: notify.mobile_app_rcom
    data:
      message: All doors closed. Thank you!
  mode: single
- id: '1624029858566'
  alias: 'Notify: Ring Doorbell Low Battery'
  description: Low battery alert for side door Ring Doorbell
  trigger:
  - platform: template
    value_template: '{{ states(''sensor.ring_side_door_battery_level'') <= ''40''
      }}'
  condition: []
  action:
  - service: notify.mobile_app_rcom
    data:
      message: Please recharge the side door Ring Doorbell
      title: Ring Doorbell Low Battery
      data:
        push:
          sound:
            name: default
  mode: single
- id: '1629255888600'
  alias: 'Climate: Upstairs Precool Evening'
  description: ''
  trigger:
  - platform: time
    at: '19:15:00'
  condition:
  - condition: state
    entity_id: sensor.season
    state: Summer
  - condition: or
    conditions:
    - condition: state
      entity_id: group.all_devices
      state: home
    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'on'
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: Precool
    target:
      entity_id:
      - climate.ecobee_upstairs
  mode: single
- id: '1635830339816'
  alias: 'Notify: AC Running with Doors Open'
  description: Alert if the Downstairs AC kicks on while a door is open.
  trigger:
  - platform: state
    entity_id: climate.downstairs
    attribute: hvac_action
    to: cooling
  condition:
  - condition: state
    entity_id: binary_sensor.all_doors
    state: 'on'
  action:
  - service: notify.mobile_app_rcom
    data:
      title: AC Running - Door Open
      message: The AC is running. Please close all doors.
      data:
        push:
          sound:
            name: default
  mode: single
- id: '1636696671218'
  alias: 'Auto On: Pool Pump'
  description: Pool Pump Schedule On
  trigger:
  - platform: state
    entity_id: calendar.pool_4_hours
    to: 'on'
  - platform: state
    entity_id: calendar.pool_6_hours
    to: 'on'
  - platform: state
    entity_id: calendar.pool_8_hours
    to: 'on'
  - platform: state
    entity_id: calendar.pool_10_hours_day
    to: 'on'
  - platform: state
    entity_id: calendar.pool_10_hours_night
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.pool_maintenance
    state: 'off'
  action:
  - service: switch.turn_on
    target:
      entity_id: switch.pool_pump
  mode: single
- id: '1639772871688'
  alias: 'Watch Dog: Pool Pump'
  description: This checks to ensure pool pump is not running too long.
  trigger:
  - platform: time
    at: '14:55:00'
  condition:
  - condition: state
    entity_id: switch.pool_pump
    state: 'on'
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.pool_pump
  mode: single
- id: '1640634316387'
  alias: 'Watch Dog: Sleeping'
  description: This watches for the bedtime timer to start and automatically turns
    on input boolean sleeping, if not on
  trigger:
  - platform: state
    entity_id: timer.bedtime
    to: active
  condition:
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  action:
  - service: input_boolean.turn_on
    target:
      entity_id: input_boolean.sleeping
  mode: single
- id: '1641367177504'
  alias: 'Watch Dog: Master Bedroom LED Strip'
  description: 'turn it off in the morning '
  trigger:
  - platform: state
    entity_id: light.bedframe_light
    to: 'on'
    for:
      hours: 0
      minutes: 3
      seconds: 0
  condition:
  - condition: sun
    after: sunrise
  action:
  - service: light.turn_off
    data:
      transition: 10
    target:
      entity_id: light.bedframe_light
  mode: single
- id: '1641444082447'
  alias: 'Auto Off: Master Bedroom Lights'
  description: automatically turn off the lights if left on
  trigger:
  - platform: state
    entity_id: binary_sensor.master_bedroom_presence
    to: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    from: 'on'
  condition:
  - condition: state
    entity_id: group.master_bedroom_lights
    state: 'on'
  action:
  - service: light.turn_off
    target:
      area_id: c422351f189a42449abb2a5bf0152863
  mode: single
- id: '1643067473001'
  alias: 'Auto Off: Pool Pump'
  description: Pool Pump Schedule Off
  trigger:
  - platform: state
    entity_id: calendar.pool_4_hours
    to: 'off'
  - platform: state
    entity_id: calendar.pool_6_hours
    to: 'off'
  - platform: state
    entity_id: calendar.pool_8_hours
    to: 'off'
  - platform: state
    entity_id: calendar.pool_10_hours_day
    to: 'off'
  - platform: state
    entity_id: calendar.pool_10_hours_night
    to: 'off'
  condition:
  - condition: state
    entity_id: switch.pool_pump
    state: 'on'
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.pool_pump
  mode: single
- id: '1643870105040'
  alias: 'Auto On: Pool Pump if Freezing'
  description: Run the pool pump if temperatures drop to freezing
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.weatherflow_is_freezing
    to: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: freezing
  - platform: state
    entity_id:
    - binary_sensor.weatherflow_is_freezing
    to: 'off'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: not_freezing
    from: 'on'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: freezing
      - condition: state
        entity_id: switch.pool_pump
        state: 'off'
      sequence:
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.pool_pump
    - conditions:
      - condition: trigger
        id: not_freezing
      - condition: state
        entity_id: switch.pool_pump
        state: 'on'
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.pool_pump
  mode: single
- id: '1643870501069'
  alias: 'Auto Off: Pool Pump Freeze Warning End'
  description: Turn off the pool pump once temps return to normal
  trigger:
  - platform: state
    entity_id: binary_sensor.freeze_warning
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: state
    entity_id: switch.pool_pump
    state: 'on'
  - condition: time
    before: 06:00:00
    after: 00:00:00
  action:
  - service: switch.turn_off
    target:
      entity_id: switch.pool_pump
    data: {}
  mode: single
- id: '1645479236226'
  alias: 'Watch Dog: Exterior Lights'
  description: Turn off the exterior lights if they are turned on during the day.
  trigger:
  - platform: state
    entity_id: group.exterior_lights
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: state
    entity_id: group.porch_lights
    to: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  condition:
  - condition: time
    after: 08:00:00
    before: '17:00:00'
  action:
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: group.exterior_lights
  mode: single
- id: '1645480372200'
  alias: 'Auto Off: Peak Hours Lighting'
  description: Turn off some lights during peak hours
  trigger:
  - platform: state
    entity_id:
    - input_boolean.peak_hours
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: group.interior_lights
    state: 'on'
  action:
  - service: homeassistant.turn_off
    data: {}
    target:
      entity_id: group.interior_lights
  mode: single
- id: '1648765194908'
  alias: 'Notify: Safe Bottom Door'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.safe_bottom_door_state
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: notify.mobile_app_rcom
    data:
      message: Lower Safe Door Opened!
      title: Safe Opened!
  mode: single
- id: '1649133344773'
  alias: 'Climate: Precool Automation Control'
  description: Enables or disables precool automation based on month.
  trigger:
  - platform: state
    entity_id: sensor.date
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: binary_sensor.climate_precool
        state: 'on'
      sequence:
      - service: automation.turn_on
        data: {}
        target:
          entity_id:
          - automation.climate_precool_downstairs
          - automation.climate_precool_upstairs
    default:
    - service: automation.turn_off
      data: {}
      target:
        entity_id:
        - automation.climate_precool_downstairs
        - automation.climate_precool_upstairs
  mode: single
- id: '1650746129837'
  alias: 'Notify: Sun Elevation Testing'
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sun.sun
    attribute: elevation
    below: '-10'
  condition: []
  action:
  - service: notify.mobile_app_rcom
    data:
      message: The sun elevation is under -10. Test IR Illuminator
      title: Sun Elevation
  mode: single
- id: '1650824122961'
  alias: 'Hue Remote: Living Room'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.hue_remote_living_room_action
    id: hue_remote_on_press
    to: on_press
  - platform: state
    entity_id:
    - sensor.hue_remote_living_room_action
    id: hue_remote_off_press
    to: off_press
  - platform: state
    entity_id:
    - sensor.hue_remote_living_room_action
    id: hue_remote_on_hold
    to: on_hold
  - platform: state
    entity_id:
    - sensor.hue_remote_living_room_action
    id: hue_remote_off_hold
    to: off_hold_release
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id:
    - sensor.hue_remote_living_room_action
    id: hue_remote_up_press
    to: up_press
  - platform: state
    entity_id:
    - sensor.hue_remote_living_room_action
    id: hue_remote_up_hold
    to: up_hold
  - platform: state
    entity_id:
    - sensor.hue_remote_living_room_action
    id: hue_remote_down_press
    to: down_press
  - platform: state
    entity_id:
    - sensor.hue_remote_living_room_action
    id: hue_remote_down_hold
    to: down_hold
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: hue_remote_on_press
      sequence:
      - service: script.scene_living_room_default
        data: {}
    - conditions:
      - condition: trigger
        id: hue_remote_off_press
      sequence:
      - service: light.turn_off
        data: {}
        target:
          area_id: e404ae11317c4432a90e1c144fea2e63
          entity_id: light.entryway
    - conditions:
      - condition: trigger
        id: hue_remote_on_hold
      sequence:
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.counter_living_room_button_press
      - service: scene.turn_on
        target:
          entity_id: scene.daybreak
        metadata: {}
    - conditions:
      - condition: trigger
        id: hue_remote_off_hold
      - condition: time
        before: 00:00:00
        after: '21:59:00'
      sequence:
      - service: notify.alexa_media_living_room_echo
        data:
          message: Have a great night.
          data:
            type: tts
          target: media_player.living_room_echo
      - service: timer.start
        data: {}
        target:
          entity_id: timer.bedtime
    - conditions:
      - condition: trigger
        id: hue_remote_up_press
      sequence:
      - service: script.brighten_living_room_ceiling
        data: {}
      - service: script.brighten_living_room_lamp
        data: {}
      - service: script.brighten_entryway_lights
        data: {}
    - conditions:
      - condition: trigger
        id: hue_remote_down_press
      sequence:
      - service: script.dim_living_room_test
        data: {}
      - service: script.dim_living_room_ceiling
        data: {}
      - service: script.dim_living_room_ceiling
        data: {}
      - service: script.dim_entryway_lights
        data: {}
    - conditions:
      - condition: trigger
        id: hue_remote_down_hold
      sequence:
      - service: script.movie_time
        data: {}
    - conditions:
      - condition: trigger
        id: hue_remote_up_hold
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.daybreak
        metadata: {}
    default: []
  mode: single
- id: '1651806554724'
  alias: 'Climate: Downstairs Precool Evening'
  description: ''
  trigger:
  - platform: time
    at: '18:00:00'
  condition:
  - condition: state
    entity_id: sensor.season
    state: Summer
  - condition: or
    conditions:
    - condition: state
      entity_id: group.all_devices
      state: home
    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
    before: 00:00:00
    after: 00:00:00
  action:
  - service: climate.set_preset_mode
    data:
      preset_mode: Precool
    target:
      entity_id: climate.ecobee_downstairs
  mode: single
- id: '1652625668660'
  alias: 'Auto Off: Guest Room Lights'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.guest_room_occupancy
    to: 'off'
    for:
      hours: 0
      minutes: 5
      seconds: 0
  condition:
  - condition: device
    type: is_on
    device_id: 8185273699b17bef766f90d6189c4dee
    entity_id: light.guest_room_lights
    domain: light
  action:
  - type: turn_off
    device_id: 8185273699b17bef766f90d6189c4dee
    entity_id: light.guest_room_lights
    domain: light
  - device_id: db4c46aff2f47a69663704ae9709b152
    domain: fan
    entity_id: fan.guest_room_fan
    type: turn_off
  mode: single
- id: '1654227289547'
  alias: 'Notify: Guest Room Balcony Door Opened'
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 5765a82aff1038088d06791dee6837e5
    entity_id: binary_sensor.guest_room_balcony_door_state
    domain: binary_sensor
  condition: []
  action:
  - service: notify.mobile_app_rcom
    data:
      message: Guest Room Balcony Door Opened!
      title: Guest Room Balcony
  mode: single
- id: '1656275812750'
  alias: Turn on sleep mode when light turns on
  description: ''
  trigger:
  - platform: state
    entity_id:
    - light.master_bedside_lamp_rick
    to: 'on'
  condition:
  - condition: time
    before: 00:00:00
    after: '21:00:00'
  - condition: state
    entity_id: input_boolean.sleeping
    state: 'off'
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.sleeping
  mode: single
- id: '1658971028660'
  alias: 'Hue Remote: Master Bathroom'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.hue_remote_master_bathroom_action
    id: hue_remote_on_press
    to: on_press
  - platform: state
    entity_id:
    - sensor.hue_remote_master_bathroom_action
    id: hue_remote_off_press
    to: off_press
  - platform: state
    entity_id:
    - sensor.hue_remote_master_bathroom_action
    id: hue_remote_on_hold
    to: on_hold
  - platform: state
    entity_id:
    - sensor.hue_remote_master_bathroom_action
    id: hue_remote_off_hold
    to: off_hold_release
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id:
    - sensor.hue_remote_master_bathroom_action
    id: hue_remote_up_press
    to: up_press
  - platform: state
    entity_id:
    - sensor.hue_remote_master_bathroom_action
    id: hue_remote_up_hold
    to: up_hold
  - platform: state
    entity_id:
    - sensor.hue_remote_master_bathroom_action
    id: hue_remote_down_press
    to: down_press
  - platform: state
    entity_id:
    - sensor.hue_remote_master_bathroom_action
    id: hue_remote_down_hold
    to: down_hold
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: hue_remote_on_press
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.master_bathroom_morning
    - conditions:
      - condition: trigger
        id: hue_remote_off_press
      sequence:
      - service: light.turn_off
        data:
          transition: 2
        target:
          area_id: 69a3968c0130497e862157a750090907
    - conditions:
      - condition: trigger
        id: hue_remote_on_hold
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.master_bathroom_bright
        metadata: {}
    - conditions:
      - condition: trigger
        id: hue_remote_off_hold
      sequence:
      - service: notify.alexa_media_master_bathroom_dot
        data:
          message: Goodnight!
          target: media_player.master_bathroom_dot
          data:
            type: tts
      - service: timer.start
        data: {}
        target:
          entity_id: timer.bedtime
    - conditions:
      - condition: trigger
        id: hue_remote_up_press
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.master_bathroom_ceiling
            state: 'off'
          sequence:
          - service: light.turn_on
            data:
              brightness: 180
            target:
              entity_id: light.master_bathroom_ceiling
        default:
        - service: script.brighten_master_bathroom_ceiling
          data: {}
    - conditions:
      - condition: trigger
        id: hue_remote_up_hold
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          brightness: 255
        target:
          area_id: 69a3968c0130497e862157a750090907
    - conditions:
      - condition: trigger
        id: hue_remote_down_press
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.master_bathroom_ceiling
            state: 'off'
          sequence:
          - service: light.turn_on
            data:
              transition: 3
              brightness_pct: 25
            target:
              entity_id: light.master_bathroom_ceiling
          - choose:
            - conditions:
              - condition: state
                entity_id: light.master_bathroom_vanity
                state: 'on'
              sequence:
              - service: script.dim_master_bathroom_vanity
                data: {}
            default: []
        default:
        - service: script.dim_master_bathroom_ceiling
          data: {}
    - conditions:
      - condition: trigger
        id: hue_remote_down_hold
      sequence:
      - service: light.turn_off
        data:
          transition: 10
        target:
          area_id: 69a3968c0130497e862157a750090907
    default: []
  mode: single
- id: '1659116297062'
  alias: 'Bedside Switch: Megs'
  description: ''
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Megs/action
    payload: single_right
    id: single_right
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Megs/action
    payload: single_left
    id: single_left
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Megs/action
    payload: double_right
    id: double_right
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Megs/action
    payload: double_left
    id: double_left
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Megs/action
    payload: hold_right
    id: hold_right
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Megs/action
    payload: hold_left
    id: hold_left
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Megs/action
    payload: single_both
    id: single_both
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: single_right
      sequence:
      - type: toggle
        device_id: a11381bf23938d722f74b5f1e8f5e3d4
        entity_id: light.master_bedside_lamp_rick
        domain: light
    - conditions:
      - condition: trigger
        id: single_left
      sequence:
      - type: toggle
        device_id: 28d49f7f23b083e1e96afa32af54711e
        entity_id: light.master_bedside_lamp_megs
        domain: light
    - conditions:
      - condition: trigger
        id: double_right
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.master_bedroom_fan
    - conditions:
      - condition: trigger
        id: double_left
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.master_bedroom_fan
    - conditions:
      - condition: trigger
        id: hold_right
      sequence:
      - service: light.turn_on
        data:
          transition: 5
          color_temp: 342
          brightness: 255
        target:
          entity_id: light.master_bedside_lamps
    - conditions:
      - condition: trigger
        id: hold_left
      sequence:
      - service: light.turn_on
        data:
          transition: 3
          color_temp: 375
          brightness_pct: 20
        target:
          entity_id: light.master_bedside_lamps
    - conditions:
      - condition: trigger
        id: single_both
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: light.master_bedside_lamps
            state: 'on'
          sequence:
          - service: light.turn_off
            data: {}
            target:
              entity_id: light.master_bedside_lamps
        default:
        - service: light.turn_on
          data: {}
          target:
            entity_id: light.master_bedside_lamps
    default: []
  mode: single
- id: '1659147374881'
  alias: 'Bedside Switch: Rick'
  description: ''
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Rick/action
    payload: single_right
    id: single_right
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Rick/action
    payload: single_left
    id: single_left
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Rick/action
    payload: double_right
    id: double_right
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Rick/action
    payload: double_left
    id: double_left
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Rick/action
    payload: hold_right
    id: hold_right
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Rick/action
    payload: hold_left
    id: hold_left
  - platform: mqtt
    topic: zigbee2mqtt/Master Bedside Switch Rick/action
    payload: single_both
    id: single_both
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: single_right
      sequence:
      - type: toggle
        device_id: 28d49f7f23b083e1e96afa32af54711e
        entity_id: light.master_bedside_lamp_megs
        domain: light
    - conditions:
      - condition: trigger
        id: single_left
      sequence:
      - type: toggle
        device_id: a11381bf23938d722f74b5f1e8f5e3d4
        entity_id: light.master_bedside_lamp_rick
        domain: light
    - conditions:
      - condition: trigger
        id: double_right
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.master_bedroom_fan
    - conditions:
      - condition: trigger
        id: double_left
      sequence:
      - service: switch.turn_off
        data: {}
        target:
          entity_id: switch.master_bedroom_fan
    - conditions:
      - condition: trigger
        id: hold_right
      sequence:
      - service: light.turn_on
        data:
          transition: 5
          color_temp: 342
          brightness: 255
        target:
          entity_id: light.master_bedside_lamps
    - conditions:
      - condition: trigger
        id: hold_left
      sequence:
      - service: light.turn_on
        data:
          transition: 3
          color_temp: 375
          brightness_pct: 20
        target:
          entity_id: light.master_bedside_lamps
    - conditions:
      - condition: trigger
        id: single_both
      sequence:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.bedtime
    default: []
  mode: single
- id: '1659152320169'
  alias: 'Hue Remote: Living Room Counter'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 3b5d102784be447d571e93638db7fc67
    type: action
    subtype: on_press
    discovery_id: 0x001788011033d61f action_on_press
  condition: []
  action:
  - service: counter.increment
    data: {}
    target:
      entity_id: counter.counter_living_room_button_press
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - condition: numeric_state
    entity_id: counter.counter_living_room_button_press
    above: '0'
  - service: counter.reset
    data: {}
    target:
      entity_id: counter.counter_living_room_button_press
  mode: restart
- id: '1659153174240'
  alias: 'Hue Remote: Living Room Multi-Press Action'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - counter.counter_living_room_button_press
    id: 2_press
    to: '2'
    for:
      hours: 0
      minutes: 0
      seconds: 2
  - platform: state
    entity_id:
    - counter.counter_living_room_button_press
    for:
      hours: 0
      minutes: 0
      seconds: 2
    to: '3'
    id: 3_press
  - platform: numeric_state
    entity_id: counter.counter_living_room_button_press
    id: reset_counter
    for:
      hours: 0
      minutes: 0
      seconds: 2
    above: '3'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 2_press
      sequence:
      - service: scene.turn_on
        data:
          transition: 3
        target:
          entity_id: scene.cozy
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.counter_living_room_button_press
    - conditions:
      - condition: trigger
        id: 3_press
      sequence:
      - service: scene.turn_on
        data:
          transition: 2
        target:
          entity_id: scene.daybreak
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.counter_living_room_button_press
    - conditions:
      - condition: trigger
        id: reset_counter
      sequence:
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.counter_living_room_button_press
    default: []
  mode: single
- id: '1659917055651'
  alias: 'Auto On: Laundry Room Lights'
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: 1ee8c1f24bf815c201cba012d9cc84cd
    entity_id: binary_sensor.laundry_room_motion
    domain: binary_sensor
  condition: []
  action:
  - service: light.turn_on
    data:
      transition: 2
      brightness_pct: 100
    target:
      area_id: 12555a99046855490103cd6d3193ee22
  - wait_for_trigger:
    - type: no_motion
      platform: device
      device_id: 1ee8c1f24bf815c201cba012d9cc84cd
      entity_id: binary_sensor.laundry_room_motion
      domain: binary_sensor
      for:
        hours: 0
        minutes: 0
        seconds: 45
  - condition: state
    entity_id: light.laundry_room
    state: 'on'
  - service: light.turn_off
    data: {}
    target:
      area_id: 12555a99046855490103cd6d3193ee22
  mode: restart
- id: '1659995064470'
  alias: 'Dropdown: Nursery Wall LED Strip'
  description: ''
  trigger:
  - platform: state
    entity_id: input_select.nursery_wall_color
    to: Blue
    id: blue
  - platform: state
    entity_id:
    - input_select.nursery_wall_color
    to: Crystal
    id: crystal
  - platform: state
    entity_id:
    - input_select.nursery_wall_color
    to: Cyan
    id: cyan
  - platform: state
    entity_id:
    - input_select.nursery_wall_color
    to: Green
    id: green
  - platform: state
    entity_id:
    - input_select.nursery_wall_color
    to: Pink
    id: pink
  - platform: state
    entity_id:
    - input_select.nursery_wall_color
    to: Red
    id: red
  - platform: state
    entity_id:
    - input_select.nursery_wall_color
    to: Violet
    id: violet
  - platform: state
    entity_id:
    - input_select.nursery_wall_color
    to: Yellow
    id: yellow
  - platform: state
    entity_id:
    - input_select.nursery_wall_color
    to: White
    id: white
  - platform: state
    entity_id:
    - input_select.nursery_wall_color
    to: 'Off'
    id: 'off'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: blue
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          rgb_color:
          - 0
          - 0
          - 255
          brightness_pct: 100
        target:
          entity_id: light.nursery_wall_light
    - conditions:
      - condition: trigger
        id: crystal
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          rgb_color:
          - 0
          - 55
          - 55
          brightness_pct: 70
        target:
          entity_id: light.nursery_wall_light
    - conditions:
      - condition: trigger
        id: cyan
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          rgb_color:
          - 0
          - 255
          - 255
          brightness_pct: 100
        target:
          entity_id: light.nursery_wall_light
    - conditions:
      - condition: trigger
        id: green
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          rgb_color:
          - 0
          - 255
          - 0
          brightness_pct: 100
        target:
          entity_id: light.nursery_wall_light
    - conditions:
      - condition: trigger
        id: pink
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          rgb_color:
          - 255
          - 0
          - 255
          brightness_pct: 100
        target:
          entity_id: light.nursery_wall_light
    - conditions:
      - condition: trigger
        id: red
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          rgb_color:
          - 255
          - 0
          - 0
          brightness_pct: 100
        target:
          entity_id: light.nursery_wall_light
    - conditions:
      - condition: trigger
        id: violet
      sequence:
      - service: light.turn_on
        data:
          rgb_color:
          - 100
          - 0
          - 255
          brightness_pct: 100
        target:
          entity_id: light.nursery_wall_light
    - conditions:
      - condition: trigger
        id: yellow
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          rgb_color:
          - 255
          - 255
          - 0
          brightness_pct: 100
        target:
          entity_id: light.nursery_wall_light
    - conditions:
      - condition: trigger
        id: white
      sequence:
      - service: light.turn_on
        data:
          transition: 2
          color_temp: 311
          brightness_pct: 100
        target:
          entity_id: light.nursery_wall_light
    - conditions:
      - condition: trigger
        id: 'off'
      sequence:
      - type: turn_off
        device_id: 9b73fc070aca70a2aea303dd8651ee34
        entity_id: light.nursery_wall_light
        domain: light
    default: []
  - delay:
      hours: 0
      minutes: 0
      seconds: 3
      milliseconds: 0
  - service: input_select.select_option
    data_template:
      entity_id: '{{ trigger.to_state.entity_id }}'
      option: Select an option...
  mode: single
- id: '1660085239729'
  alias: 'Button: Kids Room Smart Button'
  description: ''
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Nursery/action
    payload: single
    id: single
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Nursery/action
    payload: double
    id: double
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Nursery/action
    payload: triple
    id: triple
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Nursery/action
    payload: quadruple
    id: quadruple
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Nursery/action
    payload: hold
    id: hold
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Nursery/action
    payload: many
    id: many
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: single
      sequence:
      - service: light.toggle
        data: {}
        target:
          entity_id: light.nursery_light
    - conditions:
      - condition: trigger
        id: double
      sequence:
      - service: homeassistant.turn_off
        data: {}
        target:
          area_id: ade76688dbb34b8d84635f8458b99cda
    - conditions:
      - condition: trigger
        id: triple
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id:
          - light.nursery_light
          - light.nursery_wall_light
    - conditions:
      - condition: trigger
        id: quadruple
      sequence:
      - service: light.turn_on
        data:
          effect: Random
          brightness_pct: 25
        target:
          entity_id: light.nursery_wall_light
    default: []
  mode: single
- id: '1660085416524'
  alias: 'Button: Master Bedroom Smart Button'
  description: ''
  trigger:
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Master Bedroom/action
    payload: single
    id: single
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: double
    id: double
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: triple
    id: triple
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: quadruple
    id: quadruple
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: hold
    id: hold
  - platform: mqtt
    topic: zigbee2mqtt/Smart Button Office/action
    payload: many
    id: many
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: single
      sequence:
      - service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id: light.bedframe_light
    - conditions:
      - condition: trigger
        id: double
      - condition: time
        before: 00:00:00
        after: '21:30:00'
      sequence:
      - service: timer.start
        data: {}
        target:
          entity_id: timer.bedtime
    - conditions:
      - condition: trigger
        id: triple
      sequence:
      - service: timer.cancel
        data: {}
        target:
          entity_id: timer.bedtime
    - conditions:
      - condition: trigger
        id: quadruple
      sequence:
      - service: script.bedtime
        data: {}
    default: []
  mode: single
- id: '1660526414304'
  alias: 'Arrival: Disarm Blink Cameras'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - group.all_devices
    to: home
    from: not_home
  condition:
  - condition: state
    entity_id: alarm_control_panel.blink_saguaro_estates
    state: armed
  action:
  - service: alarm_control_panel.alarm_disarm
    data: {}
    target:
      entity_id: alarm_control_panel.blink_saguaro_estates
  mode: single
- id: '1662409933772'
  alias: 'Notify: North Gate Open'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.north_gate_state
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: input_boolean.north_gate_shunt
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: time
        before: '17:00:00'
        weekday:
        - thu
        after: 06:00:00
      sequence:
      - service: notify.mobile_app_rcom
        data:
          message: The gate was opened!
          title: North Gate
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 1
      - service: notify.alexa_media_office_dot
        data:
          message: Attention! The landscapers are here. Please secure the dogs!
          title: Landscaping
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.north_gate_shunt
    default:
    - condition: state
      entity_id: input_boolean.north_gate_shunt
      state: 'off'
    - repeat:
        until:
        - condition: state
          entity_id: binary_sensor.north_gate_state
          state: 'off'
          for:
            hours: 0
            minutes: 0
            seconds: 3
        sequence:
        - service: notify.mobile_app_rcom
          data:
            message: The gate is open!
            title: North Gate
            data:
              push:
                sound:
                  name: default
                  critical: 1
                  volume: 1
        - delay:
            hours: 0
            minutes: 0
            seconds: 45
            milliseconds: 0
  mode: single
- id: '1662410031085'
  alias: 'Notify: North Gate Closed'
  description: ''
  trigger:
  - type: not_opened
    platform: device
    device_id: 5bac223422c821c9f294f72b7ce2e71e
    entity_id: binary_sensor.north_gate_state
    domain: binary_sensor
    for:
      hours: 0
      minutes: 0
      seconds: 10
  condition: []
  action:
  - service: notify.mobile_app_rcom
    data:
      message: The Gate is now closed. Thank you!
      title: North Gate
  mode: single
- id: '1665251087123'
  alias: 'Rearm: North Gate'
  description: Rearm the N. Gate sensor if shunted for one hour.
  trigger:
  - platform: time
    at: '20:00:00'
  - platform: state
    entity_id:
    - binary_sensor.north_gate_state
    to: 'off'
    for:
      hours: 0
      minutes: 10
      seconds: 0
  - platform: homeassistant
    event: start
  condition:
  - condition: state
    entity_id: input_boolean.north_gate_shunt
    state: 'on'
  action:
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id: input_boolean.north_gate_shunt
  - service: notify.mobile_app_rcom
    data:
      message: The gate sensor has been rearmed.
      title: North Gate
  mode: single
- id: '1665890271088'
  alias: 'Hue Remote: Wine Room'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - sensor.hue_remote_wine_room_action
    id: hue_remote_on_press
    to: on_press
  - platform: state
    entity_id:
    - sensor.hue_remote_wine_room_action
    id: hue_remote_off_press
    to: off_press
  - platform: state
    entity_id:
    - sensor.hue_remote_wine_room_action
    id: hue_remote_on_hold
    to: on_hold
  - platform: state
    entity_id:
    - sensor.hue_remote_wine_room_action
    id: hue_remote_off_hold
    to: off_hold_release
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id:
    - sensor.hue_remote_wine_room_action
    id: hue_remote_up_press
    to: up_press
  - platform: state
    entity_id:
    - sensor.hue_remote_wine_room_action
    id: hue_remote_up_hold
    to: up_hold
  - platform: state
    entity_id:
    - sensor.hue_remote_wine_room_action
    id: hue_remote_down_press
    to: down_press
  - platform: state
    entity_id:
    - sensor.hue_remote_wine_room_action
    id: hue_remote_down_hold
    to: down_hold
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: hue_remote_on_press
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.lounge
    - conditions:
      - condition: trigger
        id: hue_remote_off_press
      sequence:
      - service: light.turn_off
        data: {}
        target:
          entity_id:
          - light.wine_room_ceiling
          - light.bar_strip_light
          - light.lounge_light
      - condition: state
        entity_id: binary_sensor.bar_motion
        state: 'on'
      - wait_for_trigger:
        - platform: state
          entity_id:
          - binary_sensor.bar_motion
          to: 'off'
          for:
            hours: 0
            minutes: 1
            seconds: 0
        timeout:
          hours: 0
          minutes: 2
          seconds: 0
          milliseconds: 0
      - service: light.turn_off
        data:
          transition: 5
        target:
          entity_id: light.wine_room_lamp
    - conditions:
      - condition: trigger
        id: hue_remote_on_hold
      sequence:
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.counter_wine_room_button_press
      - service: scene.turn_on
        target:
          entity_id: scene.bar_bright
        metadata: {}
    - conditions:
      - condition: trigger
        id: hue_remote_off_hold
      - condition: time
        before: 00:00:00
        after: '21:59:00'
      sequence:
      - service: notify.alexa_media_bar_echo_show
        data:
          message: Goodnight, I hope you sleep well.
      - service: timer.start
        data: {}
        target:
          entity_id: timer.bedtime
    - conditions:
      - condition: trigger
        id: hue_remote_up_press
      sequence:
      - service: script.brighten_wine_room
        data: {}
    - conditions:
      - condition: trigger
        id: hue_remote_down_press
      sequence:
      - service: script.dim_bar_strip_light
        data: {}
    - conditions:
      - condition: trigger
        id: hue_remote_down_hold
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.wine_room_movie
    - conditions:
      - condition: trigger
        id: hue_remote_up_hold
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.bar_bright
        metadata: {}
    default: []
  mode: single
- id: '1665891053299'
  alias: 'Hue Remote: Wine Room Counter'
  description: ''
  trigger:
  - platform: device
    domain: mqtt
    device_id: 81788be2b272906e05ccc6576479892c
    type: action
    subtype: on_press
    discovery_id: 0x0017880104ee90a7 action_on_press
  condition: []
  action:
  - service: counter.increment
    data: {}
    target:
      entity_id:
      - counter.counter_wine_room_button_press
  - delay:
      hours: 0
      minutes: 0
      seconds: 10
      milliseconds: 0
  - condition: numeric_state
    entity_id: counter.counter_wine_room_button_press
    above: '0'
  - service: counter.reset
    data: {}
    target:
      entity_id:
      - counter.counter_wine_room_button_press
  mode: restart
- id: '1665891420567'
  alias: 'Hue Remote: Wine Room Multi-Press Action'
  description: ''
  trigger:
  - platform: state
    entity_id:
    - counter.counter_wine_room_button_press
    id: 2_press
    to: '2'
    for:
      hours: 0
      minutes: 0
      seconds: 2
  - platform: state
    entity_id:
    - counter.counter_wine_room_button_press
    for:
      hours: 0
      minutes: 0
      seconds: 2
    to: '3'
    id: 3_press
  - platform: numeric_state
    entity_id: counter.counter_wine_room_button_press
    id: reset_counter
    for:
      hours: 0
      minutes: 0
      seconds: 2
    above: '3'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 2_press
      sequence:
      - service: scene.turn_on
        data:
          transition: 1
        target:
          entity_id:
          - scene.wine_room_minty
      - delay:
          hours: 0
          minutes: 0
          seconds: 2
          milliseconds: 0
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.counter_living_room_button_press
    - conditions:
      - condition: trigger
        id: 3_press
      sequence:
      - service: scene.turn_on
        data:
          transition: 2
        target:
          entity_id: scene.bar_bright
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.counter_living_room_button_press
    - conditions:
      - condition: trigger
        id: reset_counter
      sequence:
      - service: counter.reset
        data: {}
        target:
          entity_id: counter.counter_living_room_button_press
    default: []
  mode: single
- id: '1668491414887'
  alias: 'Auto On: Christmas Lights'
  description: ''
  trigger:
  - platform: time
    at: '22:00:00'
    id: 10pm
  - platform: time
    at: '23:00:00'
    id: 11pm
  - platform: time
    at: '17:35:00'
    id: 535pm
  - platform: time
    at: 08:00:00
    id: 0800
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: 535pm
      - condition: state
        entity_id: calendar.seasonal_christmas
        state: 'on'
      sequence:
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id: group.outside_christmas_lights
    - conditions:
      - condition: trigger
        id: 10pm
      - condition: time
        before: 00:00:00
        weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
        after: 00:00:00
      - condition: state
        entity_id: group.outside_christmas_lights
        state: 'on'
      sequence:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id:
          - group.outside_christmas_lights
    - conditions:
      - condition: trigger
        id: 11pm
      - condition: time
        before: 00:00:00
        weekday:
        - fri
        - sat
        after: 00:00:00
      - condition: state
        entity_id: group.outside_christmas_lights
        state: 'on'
      sequence:
      - service: homeassistant.turn_off
        data: {}
        target:
          entity_id: group.outside_christmas_lights
    - conditions:
      - condition: trigger
        id: 0800
      - condition: or
        conditions:
        - condition: state
          entity_id: group.all_devices
          state: home
        - condition: state
          entity_id: input_boolean.visitor_mode
          state: 'on'
      - condition: state
        entity_id: calendar.seasonal_christmas
        state: 'on'
      sequence:
      - service: homeassistant.turn_on
        data: {}
        target:
          entity_id: group.inside_christmas_lights
    default: []
  mode: single

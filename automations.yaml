#automation:
#####################################################################
### Pool Light Controls
#####################################################################

### Reset the Pool Light selection when switched off
- id: 'pool_light_menu_reset'
  alias: Pool Light Menu Reset
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: switch.pool_light
      to: 'off'
      for:
        seconds: 15

  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.pool_scene
        option: Select an option...

    - service: input_select.select_option
      data:
        entity_id: input_select.pool_color
        option: Select an option...


### Pool Scene Selection
- id: 'pool_scene'
  alias: Pool Scene
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.pool_scene

  action:
    - service: script.turn_on
      data_template:
        entity_id: >-
          {% if is_state('input_select.pool_scene', 'Cycle') %}
            script.pool_cycle
          {% elif is_state('input_select.pool_scene', 'Party') %}
            script.pool_party
          {% elif is_state('input_select.pool_scene', 'Romance') %}
            script.pool_romance
          {% elif is_state('input_select.pool_scene', 'Caribbean') %}
            script.pool_caribbean
          {% elif is_state('input_select.pool_scene', 'Patriotic') %}
            script.pool_patriotic
          {% elif is_state('input_select.pool_scene', 'Sunset') %}
            script.pool_sunset
          {% elif is_state('input_select.pool_scene', 'Royal') %}
            script.pool_royal
          {% else %}
            unknown
          {% endif %}

    # Reset the Pool Color input_select
    - service: input_select.select_option
      data:
        entity_id: input_select.pool_color
        option: Select an option...

### commenting this out for now - testing the state change reset above...
#      - delay:
#          seconds: 10
#
#      # Reset the Input Select to "Select an option..."
#      - service: input_select.select_option
#        data_template:
#          entity_id: "{{ trigger.to_state.entity_id }}"
#          option: Select an option...


### Pool Color Selection
- id: 'pool_color'
  alias: Pool Color
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.pool_color

  action:
    - service: script.turn_on
      data_template:
        entity_id: >-
          {% if is_state('input_select.pool_color', 'Blue') %}
            script.pool_blue
          {% elif is_state('input_select.pool_color', 'Green') %}
            script.pool_green
          {% elif is_state('input_select.pool_color', 'Red') %}
            script.pool_red
          {% elif is_state('input_select.pool_color', 'White') %}
            script.pool_white
          {% elif is_state('input_select.pool_color', 'Magenta') %}
            script.pool_magenta
          {% else %}
            unknown
          {% endif %}

    # Reset the Pool Scene input_select
    - service: input_select.select_option
      data:
        entity_id: input_select.pool_scene
        option: Select an option...


#      - delay:
#          seconds: 10
#
#      # Reset the Input Select to "Select an option..."
#      - service: input_select.select_option
#        data_template:
#          entity_id: "{{ trigger.to_state.entity_id }}"
#          option: Select an option...


#####################################################################
### Porch Lights Automation
#####################################################################

### Turn on the porch lights at sunset
- id: 'porch_lights_on'
  alias: Porch Lights On
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunset
      offset: '00:10:00'

  action:
    - service: homeassistant.turn_on
      entity_id: group.porch_lights


### Turn off the porch lights
- id: 'porch_lights_off'
  alias: Porch Lights Off
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunrise
      offset: '-00:15:00'

  action:
    - service: homeassistant.turn_off
      entity_id: group.porch_lights


#####################################################################
### Set BBQ Temp Thresholds
#####################################################################

### Grill too hot
- id: 'bbq_alert_high'
  alias: BBQ Grill Alarm High Temp
  initial_state: 'on'
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.grill_temperature

  condition:
    - condition: state
      entity_id: binary_sensor.bbq_grill_high
      state: 'on'

    - condition: state
      entity_id: input_boolean.bbq_alert_high
      state: 'on'

  action:
    - service: notify.mobile_app_rip8plus
      data:
        title: "Grill Temp"
        message: "The grill is {{ states('sensor.grill_temperature') }} degrees. That's too hot!"
        data:
          push:
            thread-id: "bbq"
            sound:
              name: "descent.caf"
          apns_headers:
            'apns-collapse-id': 'bbq_high'

    - delay:
        seconds: 10


### Grill too cold
- id: 'bbq_alert_low'
  alias: BBQ Grill Alarm Low Temp
  initial_state: 'on'
  mode: single
  trigger:
    - platform: state
      entity_id: sensor.grill_temperature

  condition:
    - condition: state
      entity_id: binary_sensor.bbq_grill_low
      state: 'on'

    - condition: state
      entity_id: input_boolean.bbq_alert_low
      state: 'on'

  action:
    - service: notify.mobile_app_rip8plus
      data:
        title: "Grill Temp"
        message: "The grill is {{ states('sensor.grill_temperature') }} degrees. That's too low!"
        data:
          push:
            thread-id: "bbq"
            sound:
              name: default
          apns_headers:
            'apns-collapse-id': 'bbq_low'

    - delay:
        seconds: 10



### Food target temperature reached
- id: 'bbq_food_ready'
  alias: BBQ Food Target Temp
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.bbq_food_ready
      to: 'on'

  condition:
    - condition: state
      entity_id: input_boolean.bbq_alert_food
      state: 'on'

  action:
    - service: notify.mobile_app_rip8plus
      data:
        title: "Food Target Temp"
        message: "Food is at {{ states('sensor.food_temperature') }} degrees. Go check it!"
        data:
          push:
            thread-id: "bbq"
            sound:
              name: default
          apns_headers:
            'apns-collapse-id': 'bbq_food'




### reference; to do a custom notify:
### {% if states('sensor.grill_temperature') >= states('input_number.bbq_high_temp') %} "OMGLOLBBQ" {% endif %}
#      - service: script.do alexa announce thing here


#####################################################################
### Fountain Automation - this controls the fountains by the pool
#####################################################################

### Turn on the fountains at sunrise
# disabled
- id: 'fountains_on'
  alias: Fountains On
  initial_state: 'off'
  trigger:
    - platform: sun
      event: sunrise
      offset: '01:30:00'

    - platform: state
      entity_id: group.all_devices
      from: 'not_home'
      to: 'home'

  condition:
    - condition: numeric_state
      entity_id: sensor.dark_sky_wind_speed
      below: 10

    - condition: state
      entity_id: input_boolean.rain
      state: 'off'

    - condition: sun
      before: sunset

    - condition: state
      entity_id: group.all_devices
      state: 'home'

  action:
    - service: switch.turn_on
      data:
        entity_id: switch.fountains_switch


### Turn off the fountains at sunset
- id: 'fountains_off'
  alias: Fountains Off
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunset
      offset: '00:05:00'

    - platform: state
      entity_id: input_boolean.rain
      from: 'off'
      to: 'on'
      for:
        minutes: 5

  condition:
    - condition: state
      entity_id: switch.fountains_switch
      state: 'on'

  action:
    - service: switch.turn_off
      data:
        entity_id: switch.fountains_switch


#####################################################################
### Ring Motion (front door) Camera Control
#####################################################################
- id: 'ring_doorbell_motion'
  alias: Ring Doorbell Motion Triggered
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.front_door_motion
      from: 'off'
      to: 'on'

  action:
    - service: shell_command.driveway_ptz_preset_3
    - delay:
        seconds: 60

    - service: shell_command.driveway_ptz_preset_2


#####################################################################
### Mailbox Camera Control
#####################################################################

## if the mailbox door is opened, do ptz pattern tour, then park
- id: 'mailbox_opened'
  alias: Mailbox Door Opened
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: binary_sensor.mailbox_door
      to: 'on'

#    condition:
#      - condition: sun
#        after: sunset

  action:
    - service: script.mailbox_alert

    - service: shell_command.driveway_ptz_preset_4
    - delay:
        seconds: 2

    - service: shell_command.driveway_ptz_preset_5
    - delay:
        seconds: 7
    
    - service: shell_command.driveway_ptz_preset_6
    - delay:
        seconds: 6

    - service: shell_command.driveway_ptz_preset_3
    - delay:
        seconds: 7

    - service: shell_command.driveway_ptz_preset_2


## Mailbox Door Closed - return to parked ptz preset
- id: 'mailbox_closed'
  alias: Mailbox Door Closed
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: binary_sensor.mailbox_door
      to: 'off'
      for:
        seconds: 10

  action:
    - service: shell_command.driveway_ptz_preset_2


## Mailbox Door Held Open - notify me
- id: 'mailbox_held_open'
  alias: Mailbox Door Held Open
  initial_state: 'off'
  trigger:
    - platform: state
      entity_id: binary_sensor.mailbox_door
      to: 'off'
      for:
        minutes: 3

  action:
    - service: notify.mobile_app_rip8plus
      data:
        title: "Mailbox"
        message: "Mailbox Door Held Open"
        data:
          push:
            thread-id: "mailbox"
            sound:
              name: default


####################################################################
## Downstairs Bathroom Lights
####################################################################

### Set Presence Detection to ON
- id: 'downstairs_bath_presence'
  alias: Downstairs Bathroom Presence Detected
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_downstairs_bath
      to: 'on'

  mode: restart
  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.downstairs_bath_presence


### Turn on the bathroom lights
- id: 'downstairs_bath_lights_on'
  alias: Downstairs Bathroom Lights On
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_downstairs_bath
      to: 'on'

    - platform: state
      entity_id: sensor.bathroom_door_state
      to: 'Open'

  condition:
    - condition: or
      conditions:
        - condition: time
          after: '17:00:00'
          before: '08:30:00'
        
        - condition: state
          entity_id: input_boolean.rain
          state: 'on'

    - condition: state
      entity_id: switch.downstairs_bathroom_light
      state: 'off'

  action:
    - service: switch.turn_on
      data:
        entity_id: switch.downstairs_bathroom_light


### Set Presence Detection to OFF
- id: 'downstairs_bath_vacant'
  alias: Downstairs Bathroom Vacant
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.downstairs_bath_presence
      to: 'off'
      for:
        minutes: 2

    - platform: state
      entity_id: switch.downstairs_bathroom_light
      to: 'off'

  condition:
    - condition: state
      entity_id: input_boolean.downstairs_bath_presence
      state: 'on'

  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.downstairs_bath_presence


### Turn off the downstairs bathroom lights
- id: 'downstairs_bath_lights_off'
  alias: Downstairs Bathroom Lights Off
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.downstairs_bath_presence
      to: 'off'

  condition:
    - condition: state
      entity_id: switch.downstairs_bathroom_light
      state: 'on'

  action:
    - service: switch.turn_off
      data:
        entity_id: switch.downstairs_bathroom_light


#####################################################################
### Game Room Lights
#####################################################################

### Trigger the game room lights on motion
- id: 'game_room_lights_on'
  alias: Game Room Lights On
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_game_room
      to: 'on'

  condition:
    - condition: or
      conditions:
        - condition: time
          after: '16:30:00'
          before: '08:00:00'
        
        - condition: state
          entity_id: input_boolean.rain
          state: 'on'

  action:
    - service: light.turn_on
      data:
        entity_id: light.billiards
        brightness: 185
        transition: 5


### Turn off the game room lights when no motion
- id: 'game_room_lights_off'
  alias: Game Room Lights Off
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_game_room
      to: 'off'
      for:
        minutes: 7

  condition:
    - condition: state
      entity_id: group.game_room_lights
      state: 'on'

  action:
    - service: homeassistant.turn_off
      entity_id: group.game_room_lights


#####################################################################
### This automation protects the kid's car from over-charging
#####################################################################
- id: 'car_charger_off'
  alias: Car Charger Off
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: switch.switch_four
      to: 'on'
      for:
        hours: 8

  condition:
    - condition: state
      entity_id: switch.switch_four
      state: 'on'

  action:
    - service: switch.turn_off
      entity_id: switch.switch_four


#####################################################################
### Kegerator Power Outlet (cut power at peak usage times)
#####################################################################

### Kegerator On
- id: 'kegerator_on'
  alias: Kegerator On
  initial_state: 'on'
  trigger:
    - platform: time
      at: '18:00:00'

  action:
    - service: switch.turn_on
      entity_id: switch.kegerator


### Kegerator Off
- id: 'kegerator_off'
  alias: Kegerator Off
  initial_state: 'on'
  trigger:
    - platform: time
      at: '15:00:00'

  action:
    - service: switch.turn_off
      entity_id: switch.kegerator
      

#####################################################################
### Kegerator Door Held Open Alarm
#####################################################################
- id: 'kegerator_held_open'
  alias: Kegerator Door Held Open
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.keg_door_held_open
      to: 'on'

  action:
    - service: notify.alexa_media
      data:
        data:
          type: announce
        target:
          - media_player.kitchen
          - media_player.living_room
        message: "Attention, Please close the Kegerator door!"


    - service: notify.mobile_app_rip8plus
      data:
        title: "Kegerator Door Alarm!"
        message: "The Kegerator door is held open!"
        data:
          push:
            sound:
              name: default


### Kegerator Door Restoral
- id: 'kegerator_door_restored'
  alias: Kegerator Door Restored
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: binary_sensor.keg_door_held_open
      from: 'on'
      to: 'off'

  action:
    - service: media_player.volume_set
      entity_id: media_player.kitchen
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"

    - service: notify.mobile_app_rip8plus
      data:
        title: "Kegerator Restored"
        message: "Thanks for closing the door."
        data:
          push:
            sound:
              name: default


#####################################################################
### Kitchen Nightlight (Xiamomi Gateway Light)
#####################################################################

### Nightlight On
- id: 'kitchen_night_light_on'
  alias: Kitchen Nightlight On
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunset
      offset: '00:10:00'

  condition:
    - condition: or
      conditions:
        - condition: state
          entity_id: group.all_devices
          state: 'home'

        - condition: state
          entity_id: input_boolean.visitor_mode
          state: 'on'

  action:
    - service: light.turn_on
      data:
        entity_id: light.kitchen_night_light
        brightness: 125
        hs_color: [225,15]


### Nightlight Off
- id: 'kitchen_night_light_off'
  alias: Kitchen Nightlight Off
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunrise
      offset: '00:10:00'

#      - platform: state
#        entity_id: input_boolean.after_hours
#        to: 'off'

  condition:
    - condition: state
      entity_id: light.kitchen_night_light
      state: 'on'

  action:
    - service: light.turn_off
      data:
        entity_id: light.kitchen_night_light


### Turn on the kitchen_night_light via kitchen light if its off
- id: 'kitchen_night_light_on_lights_off'
  alias: Kitchen Nightlight On if Lights Off
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: light.kitchen_lights
      to: 'off'

  condition:
    - condition: state
      entity_id: light.kitchen_night_light
      state: 'off'

    - condition: sun
      after: sunset

  action:
    - service: light.turn_on
      data:
        entity_id: light.kitchen_night_light
        brightness: 125
        hs_color: [225,15]


#####################################################################
### Kitchen Roller Shades
#####################################################################

### Raise the kitchen shade
- id: 'kitchen_shades_up'
  alias: Kitchen Shade Up
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunrise
      offset: '-00:15:00'

  action:
    - service: cover.open_cover
      entity_id: cover.kitchen_roller_shade_level

### Lower the kitchen shade
- id: 'kitchen_shades_down'
  alias: Kitchen Shade Down
  initial_state: 'on'
  trigger:
    - platform: time
      at: '19:30:00'

  action:
    - service: cover.stop_cover
      entity_id: cover.kitchen_roller_shade_level


#####################################################################
### Kitchen and Dining Room Lights
#####################################################################

### Turn on the pantry light when door opens
- id: 'pantry_light_on'
  alias: Pantry Light On
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.pantry_door_contact
      from: 'off'
      to: 'on'

  action:
    - service: light.turn_on
      data:
        entity_id: light.pantry


### Turn off the pantry light when door is closed
- id: 'pantry_light_off'
  alias: Pantry Light Off
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.pantry_door_contact
      from: 'on'
      to: 'off'

  action:
    - service: light.turn_off
      data:
        entity_id: light.pantry


####################################################################
## Laundry Room Lights
####################################################################

### Set Presence Detection to ON
- id: 'laundry_room_presence'
  alias: Laundry Room Presence Detected
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_laundry_room
      to: 'on'

  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.laundry_room_presence


### Set Presence Detection to OFF
- id: 'laundry_room_vacant'
  alias: Laundry Room Vacant
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_laundry_room
      to: 'off'
      for:
        seconds: 30

  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.laundry_room_presence


### Turn on the laundry room lights when presence is detected
- id: 'laundry_room_lights_on'
  alias: Laundry Room Lights On
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.laundry_room_presence
      to: 'on'

  condition:
    - condition: state
      entity_id: light.laundry_room
      state: 'off'

  action:
    - service: light.turn_on
      data:
        entity_id: light.laundry_room


### Turn off the laundry room lights
- id: 'laundry_room_lights_off'
  alias: Laundry Room Lights Off
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.laundry_room_presence
      to: 'off'

  condition:
    - condition: state
      entity_id: light.laundry_room
      state: 'on'

  action:
    - service: light.turn_off
      data:
        entity_id: light.laundry_room


#####################################################################
### Living Room Fan Controls
#####################################################################

### Living Room Ceiling Fan
- id: 'living_room_fan_speed_select'
  alias: Living Room Ceiling Fan Speed Select
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.living_room_fan_speed

  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != 'Select an option...' }}"

  action:
    ### Turn the corresponding switch on to send the fan speed command
    - service: switch.turn_on
      entity_id: switch.living_room_fan

    - delay:
        seconds: 2

    - service: switch.turn_on
      data_template:
        entity_id: "switch.living_room_fan_{{ trigger.to_state.state|lower|replace(' ', '_') }}"

    ### Reset the Input Selection to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...


### Default Living Room Ceiling Fan to High
- id: 'living_room_fan_default_speed'
  alias: Living Room Ceiling Fan Default Speed
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: switch.living_room_fan
      from: 'off'
      to: 'on'

  action:
    ### Turn the corresponding switch on to send the fan speed command
    - service: input_select.select_option
      data:
        entity_id: input_select.living_room_fan_speed
        option: High


#####################################################################
### Living Room Lamp Automation
#####################################################################

### Always turn on the living room lamp at sunset
- id: 'living_room_lamp_on'
  alias: Living Room Lamp On
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunset
      offset: '-00:20:00'

  condition: # condition added so this doesn't trigger if lights are lowered for watching tv later in the evening
    - condition: time
      before: '20:00:00'

  action:
    - service: light.turn_on
      data:
        entity_id: light.living_room_lamp
        brightness: 255
        transition: 60


### Turn off the living room lamp if we leave during the day
- id: 'living_room_lamp_away'
  alias: Living Room Lamp Away
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.away_mode

  condition:
    - condition: state
      entity_id: sun.sun
      state: 'above_horizon'

    - condition: state
      entity_id: light.living_room_lamp
      state: 'on'

  action:
    - service: light.turn_off
      entity_id: light.living_room_lamp


#####################################################################
### Automations for Living Room TV input select
#####################################################################

### Living Room TV Input Select
- id: 'living_room_tv_input'
  alias: Living Room TV Select Input
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.living_room_tv_input

  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != 'Select an option...' }}"

  action:
    - service: switch.turn_on
      data_template:
        entity_id: "switch.{{ trigger.to_state.state|lower }}"

# Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...


#####################################################################
### Automations for Onkyo Amp
#####################################################################

### Living Room Onkyo Input Select
- id: 'living_room_amp_input'
  alias: Living Room Amp Input Select
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.onkyo_amp_input

  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != 'Select an option...' }}"

  action:
    - service: switch.turn_on
      data_template:
        entity_id: "switch.amp_input_{{ trigger.to_state.state|lower }}"

# Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...


#####################################################################
### Automation Humidor Light
#####################################################################

- id: 'humidor_low'
  alias: Humidor Low
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.humidor_low
      to: 'on'

  action:
    - service: light.turn_on
      entity_id: light.sn1_led
      data:
        brightness: 255
        color_name: "red"

- id: 'humidor_ok'
  alias: Humidor OK
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.humidor_low
      to: 'off'

  action:
    - service: light.turn_on
      entity_id: light.sn1_led
      data:
        brightness: 255
        color_name: "green"


#####################################################################
### Master Bathroom Lights Automation
#####################################################################

### Trigger the Master Bathroom (bath) lights on motion
- id: 'master_bathroom_lights_on'
  alias: Master Bathroom Lights On
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.master_bedroom_presence
      to: 'on'

  condition:
    - condition: or
      conditions:
        - condition: time
          after: '17:00:00'
          before: '08:45:00'
        
        - condition: state
          entity_id: input_boolean.rain
          state: 'on'

    - condition: numeric_state
      entity_id: sensor.illumination_master_bedroom
      below: 45

    - condition: state
      entity_id: input_boolean.sleeping
      state: 'off'

  action:
  - service: hue.hue_activate_scene
    data:
      group_name: "Master Bathroom"
      scene_name: "Morning"


### Turn off the Master Bathroom lights
- id: 'master_bathroom_lights_off'
  alias: Master Bathroom Lights Off after motion
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.motion_master_bedroom
      to: 'off'
      for:
        minutes: 30

  condition:
    - condition: state
      entity_id: light.master_bathroom_ceiling
      state: 'on'

  action:
    - service: light.turn_off
      entity_id: light.master_bathroom_ceiling


#####################################################################
### Master Bathroom - mini fridge automations for baby bottles
#####################################################################

### mini fridge OFF schedule
- id: 'mini_fridge_off'
  alias: Mini Fridge OFF
  initial_state: 'on'
  trigger:
    - platform: time
      at: '11:15:00'

  condition:
    - condition: state
      entity_id: switch.mini_fridge
      state: 'on'

  action:
    - service: switch.turn_off
      entity_id: switch.mini_fridge


#####################################################################
### Master Bathroom Roller Shades
#####################################################################

### master bath shade schedule weekdays
- id: 'master_bath_shade_up_weekday'
  alias: Master Bath Shade Up Weekday
  initial_state: 'off'
  trigger:
    - platform: time
      at: '09:00:00'

  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri

  action:
    - service: cover.open_cover
      entity_id: cover.master_bath_roller_shades_level


### master bath shade schedule weekends
- id: 'master_bath_shade_up_weekend'
  alias: Master Bath Shade Up Weekend
  initial_state: 'off'
  trigger:
    - platform: time
      at: '12:00:00'

  condition:
    - condition: time
      weekday:
        - sat
        - sun

  action:
    - service: cover.open_cover
      entity_id: cover.master_bath_roller_shades_level


### master bath shade lowered schedule
- id: 'master_bath_shade_down'
  alias: Master Bath Shade Down
  initial_state: 'off'
  trigger:
    - platform: sun
      event: sunset
      offset: '00:10:00'

  action:
    - service: cover.close_cover
      entity_id: cover.master_bath_roller_shades_level


#####################################################################
### Master Bedroom Bedside Lamp Switches
#####################################################################

#################################################
### Bedside Lamp Rick's Switches
#################################################

### Rick's Bedside Button Left Toggles Rick's Lamp
- id: 'ricks_left_toggle'
  alias: Ricks Left Toggles Ricks Lamp
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_left_rick
      click_type: single

  action:
    - service: light.toggle
      data:
        entity_id: light.master_bedside_lamp_rick


### Rick's Bedside Button Right Toggles Meg's Lamp
- id: 'ricks_right_toggle'
  alias: Ricks Right Toggles Megs Lamp
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_right_rick
      click_type: single

  action:
    - service: light.toggle
      data:
        entity_id: light.master_bedside_lamp_megs


### Rick's Bedside Button Both Toggles Both Lamps
- id: 'ricks_both_toggle'
  alias: Ricks Both Toggles Both Lamps
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_both_rick
      click_type: both

  action: # this is a smarter toggle since it checks the state of the hue light group first and controls both lights
    - service_template: >-
        {% if is_state('light.master_bedside_lamps', 'off') %}
          homeassistant.turn_on
        {% else %}
          homeassistant.turn_off
        {% endif %}
      data:
        entity_id: light.master_bedside_lamps


### Rick's Bedside Button Left Double-Click Turns on the fan
- id: 'ricks_left_double_click'
  alias: Ricks Left Double Turns On Fan
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_left_rick
      click_type: double

  action:
    - service: switch.turn_on
      entity_id: switch.master_bedroom_fan


### Rick's Bedside Button Right Double-Click Turns off the fan
- id: 'ricks_right_double_click'
  alias: Ricks Right Double Turns Off Fan
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_right_rick
      click_type: double

  action:
    - service: switch.turn_off
      entity_id: switch.master_bedroom_fan


# Rick's Bedside Button Left Hold - Dim
- id: 'ricks_left_hold'
  alias: Ricks Left Hold Dim
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_left_rick
      click_type: long


  action:
    - service: hue.hue_activate_scene
      data:
        group_name: "Master Bedside Lamps"
        scene_name: "Dimmed"


# Rick's Bedside Button Right Hold - Bright
- id: 'ricks_right_hold'
  alias: Ricks Right Hold Bright
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_right_rick
      click_type: long

  action:
    - service: hue.hue_activate_scene
      data:
        group_name: "Master Bedside Lamps"
        scene_name: "Bright"


#################################################
### Bedside Lamp Meg's Switches
#################################################

### Meg's Bedside Button Left Toggles Meg's Lamp
- id: 'megs_left_toggle'
  alias: Megs Left Toggles Megs Lamp
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_left_megs
      click_type: single

  action:
    - service: light.toggle
      data:
        entity_id: light.master_bedside_lamp_megs


### Meg's Bedside Button Right Toggles Rick's Lamp
- id: 'megs_right_toggle'
  alias: Megs Right Toggles Ricks Lamp
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_right_megs
      click_type: single

  action:
    - service: light.toggle
      data:
        entity_id: light.master_bedside_lamp_rick


### Meg's Bedside Button Both Toggles Both Lamps
- id: 'megs_both_toggle'
  alias: Megs Both Toggles Both Lamps
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_both_megs
      click_type: both

  action: # this is a smarter toggle since it checks the state of the hue light group first and controls both lights
    - service_template: >-
        {% if is_state('light.master_bedside_lamps', 'off') %}
          homeassistant.turn_on
        {% else %}
          homeassistant.turn_off
        {% endif %}
      data:
        entity_id: light.master_bedside_lamps


### Megs's Bedside Button Left Double-Click Turns on the fan
- id: 'megs_left_double_click'
  alias: Megs Left Double Turns On Fan
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_left_megs
      click_type: double

  action:
    - service: switch.turn_on
      entity_id: switch.master_bedroom_fan


### Megs's Bedside Button Right Double-Click Turns off the fan
- id: 'megs_right_double_click'
  alias: Megs Right Double Turns Off Fan
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_left_megs
      click_type: double

  action:
    - service: switch.turn_off
      entity_id: switch.master_bedroom_fan


# Meg's Bedside Button Left Hold - Dim
- id: 'megs_left_hold'
  alias: Megs Left Hold Dim
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_left_megs
      click_type: long


  action:
    - service: hue.hue_activate_scene
      data:
        group_name: "Master Bedside Lamps"
        scene_name: "Dimmed"


# Meg's Bedside Button Right Hold - Bright
- id: 'megs_right_hold'
  alias: Megs Right Hold Bright
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.master_bedside_right_megs
      click_type: long


  action:
    - service: hue.hue_activate_scene
      data:
        group_name: "Master Bedside Lamps"
        scene_name: "Bright"


#####################################################################
### Master Bedroom Ceiling Fan Automation
### Automatically select the best speed based on temperature
### Speed is set via sensor based on the room temperature
### Related Components:
###   - sensor.master_bedroom_fan_control
###   - input_select.master_bedroom_fan
###
### Note: this automation is still beta and under active testing
###
#####################################################################
# Turn on the master bedroom fan if it's off (conditional)
#####################################################################
- id: 'master_bedroom_fan_on'
  alias: Master Bedroom Fan On
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.master_bedroom_presence
      to: 'on'

  condition:
    - condition: state
      entity_id: switch.master_bedroom_fan
      state: 'off'

    - condition: template
      value_template: "{{ states('sensor.master_bedroom_fan_speed') != 'Off' }}"

  action:
    - service: switch.turn_on
      entity_id: switch.master_bedroom_fan


#####################################################################
# Set master bedroom fan speed automatically
#####################################################################
- id: 'master_bedroom_fan_auto'
  alias: Master Bedroom Fan Auto
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: '/15'

  condition:
    - condition: state
      entity_id: switch.master_bedroom_fan
      state: 'on'

    - condition: state
      entity_id: input_boolean.master_fan_hold
      state: 'off'

  action:
    - service: input_select.select_option
      data_template:
        entity_id: input_select.master_bedroom_fan_speed
        option: "{{ states('sensor.master_bedroom_fan_speed') }}"

### log event for troubleshooting:
#      - service: logbook.log
#        data_template:
#          name: "Master Bedroom Fan Speed"
#          message: "changed to {{ states('sensor.master_bedroom_fan_speed') }}."


#####################################################################
# Set master bedroom fan speed manually via the UI
#####################################################################
- id: 'master_bedroom_fan_speed'
  alias: Master Bedroom Fan Speed Select
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.master_bedroom_fan_speed

  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != 'Select an option...' }}"

    - condition: template
      value_template: "{{ trigger.to_state.state != 'Off' }}"

  action:
    # Reset fan switch states
    - service: homeassistant.turn_off
      entity_id: group.master_bedroom_fan

    - delay:
        seconds: 1

    # Set the fan speed
    - service: switch.turn_on
      data_template:
        entity_id: "switch.master_bedroom_fan_{{ trigger.to_state.state|lower|replace(' ', '_') }}"

    # Set the Input Selection to current option
    - service: input_select.select_option
      data_template:
        entity_id: input_select.master_bedroom_fan_speed
        option: "{{ states.trigger.to_state.state }}"


#####################################################################
# Turn off the master bedroom fan if 'Off' is selected
#####################################################################
- id: 'master_bedroom_fan_off_selected'
  alias: Master Bedroom Fan Off Selected
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.master_bedroom_fan_speed

  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state == 'Off' }}"

    - condition: state
      entity_id: switch.master_bedroom_fan
      state: 'on'

  action:
    - service: switch.turn_off
      entity_id: switch.master_bedroom_fan

#      # Reset fan switch states
#      - service: homeassistant.turn_off
#        entity_id: group.master_bedroom_fan
#
#      - delay:
#          seconds: 1
#
#      ### Reset the Input Selection to "Select an option..."
#      - service: input_select.select_option
#        data_template:
#          entity_id: "{{ trigger.to_state.entity_id }}"
#          option: Select an option...


#####################################################################
# Turn off the master bedroom fan if room is vacant (15 min delay; tune this)
#####################################################################
- id: 'master_bedroom_fan_off_triggered'
  alias: Master Bedroom Fan Off Triggered
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.master_bedroom_presence
      to: 'off'
      for:
        minutes: 15

  condition:
    - condition: state
      entity_id: switch.master_bedroom_fan
      state: 'on'

    - condition: state
      entity_id: input_boolean.sleeping
      state: 'off'

  action:
    - service: switch.turn_off
      entity_id: switch.master_bedroom_fan

#      # Reset fan switch states
#      - service: homeassistant.turn_off
#        entity_id: group.master_bedroom_fan
#
#      - delay:
#          seconds: 1
#
#      ### Reset the Input Selection to "Select an option..."
#      - service: input_select.select_option
#        data_template:
#          entity_id: "{{ trigger.to_state.entity_id }}"
#          option: Select an option...


#####################################################################
# Reset fan speed switch states if fan is turned off
#####################################################################
- id: 'master_bedroom_fan_reset_speed'
  alias: Master Bedroom Fan Reset Speed
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: switch.master_bedroom_fan
      to: 'off'

  action:
    # Reset fan switch states
    - service: homeassistant.turn_off
      entity_id: group.master_bedroom_fan

    - delay:
        seconds: 1

    # Reset the Input Selection to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...


#####################################################################
### Controls for the Master Bedroom LED strip lights 
#####################################################################

### Turn off the lights when OFF is selected
- id: 'bedframe_select_off'
  alias: Under Bed Select Off
  initial_state: 'on' 
  trigger:
    - platform: state
      entity_id: input_select.mbr_under_bed_color
      to: "Off"

    - platform: state
      entity_id: input_select.mbr_under_bed_effect
      to: "Off"

  action:
    - service: light.turn_off
      entity_id: light.bedframe_light

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Reset input selection when light is turned off
- id: 'bedframe_reset_off'
  alias: Under Bed Reset Off
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: light.bedframe_light
      from: 'on'
      to: 'off'

  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.mbr_under_bed_color
        option: Select an option...

    - service: input_select.select_option
      data:
        entity_id: input_select.mbr_under_bed_effect
        option: Select an option...


#####################################################################
### Default to Crystal if turned on with no selection
- id: 'bedframe_default_crystal'
  alias: Under Bed Default Crystal
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: light.bedframe_light
      from: 'off'
      to: 'on'

  condition:
    condition: state
    entity_id: input_select.mbr_under_bed_color
    state: "Select an option..."

  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.mbr_under_bed_color
        option: "Crystal"

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Under Bed Select Blue
- id: 'bedframe_select_blue'
  alias: Under Bed Blue
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.mbr_under_bed_color
    to: "Blue"

  action:
    - service: light.turn_on
      data:
        entity_id: light.bedframe_light
        brightness: 255
        rgb_color: [0,0,255]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Under Bed Select Cyan
- id: 'bedframe_select_cyan'
  alias: Under Bed Cyan
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.mbr_under_bed_color
    to: "Cyan"

  action:
    - service: light.turn_on
      data:
        entity_id: light.bedframe_light
        brightness: 255
        rgb_color: [0,255,255]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Under Bed Select Crystal
- id: 'bedframe_select_crystal'
  alias: Under Bed Crystal
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.mbr_under_bed_color
    to: "Crystal"

  action:
    - service: light.turn_on
      data:
        entity_id: light.bedframe_light
        brightness: 70
        rgb_color: [0,55,55]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Under Bed Select Green
- id: 'bedframe_select_green'
  alias: Under Bed Green
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.mbr_under_bed_color
    to: "Green"

  action:
    - service: light.turn_on
      data:
        entity_id: light.bedframe_light
        brightness: 255
        rgb_color: [0,225,0]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Under Bed Select Pink
- id: 'bedframe_select_pink'
  alias: Under Bed Pink
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.mbr_under_bed_color
    to: "Pink"

  action:
    - service: light.turn_on
      data:
        entity_id: light.bedframe_light
        brightness: 255
        rgb_color: [255,0,255]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Under Bed Select Red
- id: 'bedframe_select_red'
  alias: Under Bed Red
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.mbr_under_bed_color
    to: "Red"

  action:
    - service: light.turn_on
      data:
        entity_id: light.bedframe_light
        brightness: 255
        rgb_color: [255,0,0]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Under Bed Select Violet
- id: 'bedframe_select_violet'
  alias: Under Bed Violet
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.mbr_under_bed_color
    to: "Violet"

  action:
    - service: light.turn_on
      data:
        entity_id: light.bedframe_light
        brightness: 255
        rgb_color: [125,0,255]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Under Bed Select Yellow
- id: 'bedframe_select_yellow'
  alias: Under Bed Yellow
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.mbr_under_bed_color
    to: "Yellow"

  action:
    - service: light.turn_on
      data:
        entity_id: light.bedframe_light
        brightness: 255
        rgb_color: [255,255,0]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...


#####################################################################
### Master Bedroom Automatic Nightlight
#####################################################################

- id: 'master_bedroom_nightlight'
  alias: Master Bedroom Nightlight
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - binary_sensor.motion_master_bedroom
    to: 'on'
  mode: restart

  condition:
        - condition: time
          after: '21:00:00'
          before: '06:00:00'

#          - condition: state
#            entity_id: binary_sensor.motion_master_bedroom
#            state: 'off'

  action:
    - service: script.turn_on
      entity_id: script.nightlight


#####################################################################
### Nursery Ceiling Fan Automations
#####################################################################

### Turn on the nursery fan if it's warm
- id: 'nursery_fan_on'
  alias: Nursery Fan On
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: binary_sensor.nursery_presence
      to: 'on'

  condition:
    - condition: state
      entity_id: fan.nursery_fan
      state: 'off'

    - condition: template
      value_template: "{{ states('sensor.nursery_fan_speed') != 'off' }}"

  action:
    ## may be able to simplify and remove this first one...test.
    - service: fan.turn_on
      entity_id: fan.nursery_fan

    - service: fan.set_speed
      entity_id: fan.nursery_fan
      data_template:
        speed: "{{ states('sensor.nursery_fan_speed') }}"


### Set Nursery Fan Speed Automatically
- id: 'nursery_fan_auto'
  alias: Nursery Fan Auto Speed Select
  initial_state: 'on'
   
  trigger:
    - platform: time_pattern
      minutes: '/10'

  condition:
    - condition: state
      entity_id: input_boolean.nursery_fan_hold
      state: 'off'

    - condition: or
      conditions:
        - condition: state
          entity_id: binary_sensor.nursery_presence
          state: 'on'

        - condition: time
          after: '19:30:00'
          before: '08:30:00'

  action:
    - service: fan.set_speed
      entity_id: fan.nursery_fan
      data_template:
        speed: "{{ states('sensor.nursery_fan_speed') }}"

#      - service: logbook.log
#        data_template:
#          name: "Nursery Fan Speed"
#          message: "changed to {{ states('sensor.nursery_fan_speed') }}."


#####################################################################
### Nursery Humidifier Automation
#####################################################################

### Turn off the humidifier
- id: 'nursery_humidifier_off'
  alias: Nursery Humidifier Off
  initial_state: 'on'
   
  trigger:
    platform: time
    at: '08:00:00'

  condition:
    - condition: state
      entity_id: switch.switch_five
      state: 'on'

  action:
    - service: switch.turn_off
      entity_id: switch.switch_five


#####################################################################
### Nursery Presence Detection 2.0
#####################################################################

### assume the nursery is vacant after 45 min of inactivity
- id: 'nursery_vacant'
  alias: Nursery Vacant
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: binary_sensor.nursery_presence
      to: 'off'
      for:
        minutes: 5

  condition:
    - condition: time
      after: '07:00:00'
      before: '19:00:00'

  action:
    - service: fan.turn_off
      entity_id: fan.nursery_fan

    - service: homeassistant.turn_off
      entity_id: group.nursery_lights

    - service: switch.turn_off
      entity_id: switch.switch_one


#####################################################################
### Nursery Wall Light Automations
#####################################################################

### Turn off the wall light when OFF is selected
- id: 'nursery_wall_select_off'
  alias: Nursery Wall Select Off
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: input_select.nursery_wall_color
      to: "Off"

    - platform: state
      entity_id: input_select.nursery_wall_effect
      to: "Off"
   
     ## not supported in tasmota
#      - platform: state
#        entity_id: input_select.nursery_wall_strobe
#        to: "Off"

  action:
    - service: light.turn_off
      entity_id: light.nursery_wall_light

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...


  #####################################################################
  ### Reset input selection when lamp is turned off
- id: 'nursery_wall_reset_off'
  alias: Nursery Wall Reset Off
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: light.nursery_wall_light
      from: 'on'
      to: 'off'

  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.nursery_wall_color
        option: Select an option...

    - service: input_select.select_option
      data:
        entity_id: input_select.nursery_wall_effect
        option: Select an option...

#      - service: input_select.select_option
#        data:
#          entity_id: input_select.nursery_wall_strobe
#          option: Select an option...


  #####################################################################
  ### Nursery Wall Select Blue
- id: 'nursery_wall_blue'
  alias: Nursery Wall Blue
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_color
    to: "Blue"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        brightness: 255
        rgb_color: [0,0,255]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Nursery Wall Select Cyan
- id: 'nursery_wall_cyan'
  alias: Nursery Wall Cyan
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_color
    to: "Cyan"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        brightness: 255
        rgb_color: [0,255,255]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Nursery Wall Select Crystal
- id: 'nursery_wall_crystal'
  alias: Nursery Wall Crystal
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_color
    to: "Crystal"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        rgb_color: [0,55,55]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Nursery Wall Select Green
- id: 'nursery_wall_green'
  alias: Nursery Wall Green
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_color
    to: "Green"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        brightness: 255
        rgb_color: [0,225,0]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Nursery Wall Select Pink
- id: 'nursery_wall_pink'
  alias: Nursery Wall Pink
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_color
    to: "Pink"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        brightness: 255
        rgb_color: [255,0,255]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Nursery Wall Select Red
- id: 'nursery_wall_red'
  alias: Nursery Wall Red
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_color
    to: "Red"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        brightness: 255
        rgb_color: [255,0,0]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Nursery Wall Select Violet
- id: 'nursery_wall_violet'
  alias: Nursery Wall Violet
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_color
    to: "Violet"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        brightness: 255
        rgb_color: [125,0,255]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Nursery Wall Select Yellow
- id: 'nursery_wall_yellow'
  alias: Nursery Wall Yellow
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_color
    to: "Yellow"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        brightness: 255
        rgb_color: [255,255,0]

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Nursery Wall Effects -  Color Loop
- id: 'nursery_wall_loop'
  alias: Nursery Wall Color Loop
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_effect
    to: "Color Loop"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        effect: colorloop

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Nursery Wall Effects -  Color Jump
- id: 'nursery_wall_color_jump'
  alias: Nursery Wall Color Jump
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_effect
    to: "Color Jump"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        effect: colorjump

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...

#####################################################################
### Nursery Wall Effects -  Random
- id: 'nursery_wall_random'
  alias: Nursery Wall Random
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: input_select.nursery_wall_effect
    to: "Random"

  action:
    - service: light.turn_on
      data:
        entity_id: light.nursery_wall_light
        effect: random

    # Reset the Input Select to "Select an option..."
    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...


#####################################################################
### Schedule the baby wipe warmers
#####################################################################

### downstairs wipe warmer schedule ON
- id: 'downstairs_wipe_warmer_on'
  alias: Downstairs Wipe Warmer On
  initial_state: 'on'
   
  trigger:
    - platform: time
      at: '07:25:00'

    - platform: template
      value_template: "{{ states('sensor.living_room_temperature') <= '77' }}"

    - platform: state
      entity_id: group.all_devices
      from: 'not_home'
      to: 'home'
      for:
        minutes: 5

  condition:
    - condition: state
      entity_id: sensor.season
      state: 'Winter'

    - condition: state
      entity_id: group.all_devices
      state: 'home'

    - condition: template
      value_template: "{{ states('sensor.living_room_temperature') < '77.5' }}"

    - condition: time
      before: '21:05:00'
      after: '07:20:00'

    - condition: state
      entity_id: switch.switch_three
      state: 'off'

  action:
    - service: switch.turn_on
      entity_id: switch.switch_three


### downstairs wipe warmer schedule OFF
- id: 'downstairs_wipe_warmer_off'
  alias: Downstairs Wipe Warmer Off
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: script.bedtime
      from: 'off'
      to: 'on'

    - platform: template
      value_template: "{{ states('sensor.living_room_temperature') > '78' }}"

    - platform: time
      at: '21:05:59'

  condition:
    - condition: state
      entity_id: switch.switch_three
      state: 'on'

  action:
    - service: switch.turn_off
      entity_id: switch.switch_three

- id: 'upstairs_wipe_warmer_on'
  alias: Upstairs Wipe Warmer On
  initial_state: 'on'
   
  trigger:
    - platform: time
      at: '20:00:00'

    - platform: template
      value_template: "{{ states('sensor.nursery_temperature') <= '77' }}"

    - platform: state
      entity_id: script.nap_time
      to: 'on'

    - platform: state
      entity_id: group.all_devices
      from: 'not_home'
      to: 'home'
      for:
        minutes: 5

  condition:
    - condition: state
      entity_id: sensor.season
      state: 'Winter'

    - condition: state
      entity_id: group.all_devices
      state: 'home'

    - condition: template
      value_template: "{{ states('sensor.nursery_temperature') < '77.5' }}"

    - condition: state
      entity_id: switch.switch_one
      state: 'off'

  action:
    - service: switch.turn_on
      entity_id: switch.switch_one


### upstairs wipe warmer schedule OFF
- id: 'upstairs_wipe_warmer_off'
  alias: Upstairs Wipe Warmer Off
  initial_state: 'on'
   
  trigger:
    - platform: time
      at: '09:00:59'

    - platform: template
      value_template: "{{ states('sensor.nursery_temperature') >= '78' }}"

  condition:
    - condition: state
      entity_id: switch.switch_one
      state: 'on'

  action:
    - service: switch.turn_off
      entity_id: switch.switch_one


#####################################################################
### Automatically reset Alexa's volume when she goes idle
#####################################################################

### Living Room
- id: 'alexa_volume_reset_living_room'
  alias: Reset Alexa Volume Living Room
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.living_room
      to: 'idle'
      for:
        minutes: 2

  action:
    - service: media_player.volume_set
      entity_id: media_player.living_room
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"


### Game Room
- id: 'alexa_volume_reset_game_room'
  alias: Reset Alexa Volume Game Room
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.game_room
      to: 'idle'
      for:
        minutes: 2

  action:
    - service: media_player.volume_set
      entity_id: media_player.game_room
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"


### Nursery
- id: 'alexa_volume_reset_nursery'
  alias: Reset Alexa Volume Nursery
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.nursery
      to: 'idle'
      for:
        minutes: 1

  action:
    - service: media_player.volume_set
      entity_id: media_player.nursery
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"


### Wine Room
- id: 'alexa_volume_reset_wine_room'
  alias: Reset Alexa Volume Wine Room
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.wine_room
      to: 'idle'
      for:
        minutes: 1

  action:
    - service: media_player.volume_set
      entity_id: media_player.wine_room
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"


### Kitchen
- id: 'alexa_volume_reset_kitchen'
  alias: Reset Alexa Volume Kitchen
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.kitchen
      to: 'idle'
      for:
        minutes: 1

  action:
    - service: media_player.volume_set
      entity_id: media_player.kitchen
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"


### Master Bathroom
- id: 'alexa_volume_reset_master_bath_room'
  alias: Reset Alexa Volume Master Bathroom
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.master_bathroom
      to: 'idle'
      for:
        minutes: 1

  action:
    - service: media_player.volume_set
      entity_id: media_player.master_bathroom
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"


### Master Bedrrom
- id: 'alexa_volume_reset_master_bedroom'
  alias: Reset Alexa Volume Master Bedroom
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.master_bedroom
      to: 'idle'
      for:
        minutes: 1

  action:
    - service: media_player.volume_set
      entity_id: media_player.master_bedroom
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"


#####################################################################
### Automations for AppleTV
#####################################################################

### Set Lighting script when media is playing on Apple TV
- id: 'apple_tv_script_select'
  alias: AppleTV script Set
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: media_player.apple_tv
      to: 'playing'

    - platform: state
      entity_id: media_player.apple_tv
      to: 'paused'

    - platform: state
      entity_id: media_player.apple_tv
      to: 'stopped'

  condition: 
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'

    - condition: state
      entity_id: input_boolean.dinner_time
      state: 'off'

    - condition: state
      entity_id: input_boolean.sleeping
      state: 'off'

  action:
    - service: script.turn_on
      data_template:
        entity_id: >-
          {% if trigger.to_state.state == "playing" or trigger.to_state.state == "resumed" %}
            script.movie_time
          {% elif trigger.to_state.state == "paused" or trigger.to_state.state == "stopped" %}
            script.movie_paused
          {% elif trigger.to_state.state == "idle" and now().strftime('%H%M')|int > 2000 %}
            script.tv_time
          {% else %}
            script.evening
          {% endif %}


#####################################################################
# Set DirecTV Channel
#####################################################################

- id: 'directv_channel_select'
  alias: "DirecTV Channel Selection"
  description: "Change the channel based on selection."
  trigger:
    - platform: state
      entity_id: input_select.directv_channel

  condition:
    - condition: template
      value_template: "{{ trigger.to_state.state != 'Select an option...' }}"
      
  action:
    - service: script.turn_on
      data_template:
        entity_id: "script.directv_media_living_room_{{ trigger.to_state.state|lower|replace(' ', '_') }}"

    - service: input_select.select_option
      data_template:
        entity_id: "{{ trigger.to_state.entity_id }}"
        option: Select an option...  
        #input_select.directv_channel


#####################################################################
### Set Climate to Resume when we return home
#####################################################################

###################################
### On Peak Resume
###################################
- id: 'climate_resume_on_peak'
  alias: Climate Resume On Peak
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.all_devices
    from: 'not_home'
    to: 'home'
    for:
      minutes: 2

  condition:
    - condition: state
      entity_id: input_boolean.peak_hours
      state: 'on'

    - condition: template
      value_template: "{{ states.climate.downstairs.attributes.current_temperature >= 79 }}"

  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.downstairs
        preset_mode: 'Home'

    - service: climate.set_preset_mode
      data:
        entity_id: climate.upstairs
        preset_mode: 'Home'

    - delay:
        minutes: 60

    - service: ecobee.resume_program
      data:
        entity_id: climate.downstairs
        resume_all: 'true'

    - service: ecobee.resume_program
      data:
        entity_id: climate.upstairs
        resume_all: 'true'


###################################
### Off Peak Resume
###################################
- id: 'climate_resume_off_peak'
  alias: Climate Resume Off Peak
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.all_devices
    from: 'not_home'
    to: 'home'
    for:
      minutes: 2

  condition:
    - condition: state
      entity_id: input_boolean.peak_hours
      state: 'off'

  action:
    - service: ecobee.resume_program
      data:
        entity_id: climate.downstairs
        resume_all: 'true'

    - service: ecobee.resume_program
      data:
        entity_id: climate.upstairs
        resume_all: 'true'


#####################################################################
### Set Climate to Sleep Mode at bedtime
#####################################################################

- id: 'climate_sleep_mode'
  alias: Climate Sleep Mode
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: script.bedtime
      from: 'off'
      to: 'on'

    - platform: state
      entity_id: input_boolean.after_hours
      from: 'off'
      to: 'on'

  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.downstairs
        preset_mode: 'Sleep'

    - service: climate.set_preset_mode
      data:
        entity_id: climate.upstairs
        preset_mode: 'Sleep'


#####################################################################
### Set Climate to Away Mode if Door held open too long
#####################################################################

- id: 'climate_door_held_open'
  alias: Climate Away Door Held Open
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.door_held_open
      to: 'on'
      for:
        minutes: 2

  condition:
    - condition: state
      entity_id: binary_sensor.hvac_running
      state: 'on'
      
  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.downstairs
        preset_mode: 'Eco'

    - service: climate.set_preset_mode
      data:
        entity_id: climate.upstairs
        preset_mode: 'Eco'

    - service: script.tts_door_held_open


#####################################################################
### Set Climate to Resume when Door Held Open Restores
#####################################################################
- id: 'climate_resume_door_restored'
  alias: Climate Resume Door Restore
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.door_held_open
      to: 'off'
      for:
        minutes: 1

  condition:
    - condition: state
      entity_id: binary_sensor.hvac_running
      state: 'on'

  action:
    - service: ecobee.resume_program
      data:
        entity_id: climate.upstairs
        resume_all: 'true'

    - service: ecobee.resume_program
      data:
        entity_id: climate.downstairs
        resume_all: 'true'


#####################################################################
### Set min fan time for Summer
#####################################################################
- id: 'climate_hvac_fan_summer'
  alias: Set HVAC fan runtime summer
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.season
      to: 'Summer'

  action:
    - service: climate.ecobee_set_fan_min_on_time
      data:
        entity_id: climate.downstairs
        fan_min_on_time: '15'

    - service: climate.ecobee_set_fan_min_on_time
      data:
        entity_id: climate.upstairs
        fan_min_on_time: '30'


#####################################################################
### Set min fan time for Winter
#####################################################################
- id: 'climate_hvac_fan_winter'
  alias: Set HVAC fan runtime winter
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.season
      to: 'Winter'

    - platform: state
      entity_id: sensor.season
      to: 'Awesome'

  action:
    - service: climate.ecobee_set_fan_min_on_time
      data:
        entity_id: climate.downstairs
        fan_min_on_time: '5'

    - service: climate.ecobee_set_fan_min_on_time
      data:
        entity_id: climate.upstairs
        fan_min_on_time: '5'


#####################################################################
### Set Away Mode when weather is Awesome
#####################################################################
- id: 'climate_eco_awesome'
  alias: Set Eco Mode if weather is nice
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.season
      to: 'Awesome'

  condition:
    - condition: template
      value_template: "{{ states.climate.downstairs.attributes.current_temperature <= 80 }}"

    - condition: template
      value_template: "{{ states.climate.upstairs.attributes.current_temperature <= 82 }}"

  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.downstairs
        preset_mode: 'Eco'

    - service: climate.set_preset_mode
      data:
        entity_id: climate.upstairs
        preset_mode: 'Eco'


#####################################################################
### Precool for Summer heat - only needed if you live in the desert
#####################################################################

#######################################
### Precool Downstairs
#######################################
- id: 'climate_precool_downstairs'
  alias: Climate Precool Downstairs
  initial_state: 'off' #disabled
  trigger:
    - platform: time
      at: '14:00:00'

  condition:
    - condition: state
      entity_id: sensor.season
      state: 'Summer'

    - condition: or
      conditions:
        - condition: state
          entity_id: group.all_devices
          state: 'home'

        - condition: state
          entity_id: input_boolean.visitor_mode
          state: 'on'

    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri

    - condition: template
      value_template: "{{ state_attr('climate.downstairs','preset_mode') != 'Away' }}"

  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.downstairs
        preset_mode: 'Precool'


#######################################
### Precool Upstairs
#######################################
- id: 'climate_precool_upstairs'
  alias: Climate Precool Upstairs
  initial_state: 'off' #disabled
  trigger:
    - platform: time
      at: '14:00:00'

  condition:
    - condition: state
      entity_id: sensor.season
      state: 'Summer'

    - condition: or
      conditions:
        - condition: state
          entity_id: group.all_devices
          state: 'home'

        - condition: state
          entity_id: input_boolean.visitor_mode
          state: 'on'

    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri

    - condition: template
      value_template: "{{ state_attr('climate.upstairs','preset_mode') != 'Away' }}"

  action:
    - service: climate.set_preset_mode
      data:
        entity_id: climate.upstairs
        preset_mode: 'Precool'


#####################################################################
### Accent Lights
#####################################################################

### Turn on the accent_lights at sunset
- id: 'accent_lights_on'
  alias: Accent Lights On
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunset
      offset: '-00:05:00'

  action:
    - service: homeassistant.turn_on
      entity_id: group.accent_lights


#####################################################################
### Set the Evening Scene at sunset
#####################################################################
- id: 'evening_scene_schedule'
  alias: Evening Scene Schedule
  initial_state: 'on'
  trigger:
    - platform: sun
      event: sunset
      offset: '-00:10:00'

  condition: # condition added so this doesn't trigger if lights are lowered for watching tv later in the evening
    - condition: time
      before: '20:00:00'

    - condition: template
      value_template: "{{ states('media_player.apple_tv') != 'playing' }}"

    - condition: or
      conditions:
        - condition: state
          entity_id: group.all_devices
          state: 'home'

        - condition: state
          entity_id: input_boolean.visitor_mode
          state: 'on'

  action:
    - service: script.turn_on
      entity_id: script.evening


#####################################################################
### Turn off the lights in the morning once sun is up high enough
#####################################################################
- id: 'living_room_lights_off_morning'
  alias: Living Room Off Morning
  initial_state: 'off'
  trigger:
    - platform: numeric_state
      entity_id: sun.sun
      value_template: '{{ state.attributes.elevation }}'
      above: 12

  condition:
    - condition: state
      entity_id: group.interior_lights
      state: 'on'

    - condition: time
      before: '09:00:00'

    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'

    - condition: state
      entity_id: input_boolean.holiday
      state: 'off'

  action:
    - service: timer.start
      entity_id: timer.sun_up

    - service: notify.mobile_app_rip8plus
      data:
        title: "Suns Up"
        message: "Lights off in 15 min..."
        data:
          push:
            sound:
              name: default


#####################################################################
### Weather-based Lighting Automations
#####################################################################

### Turn on some lights if it is cloudy
- id: 'living_room_lights_on_cloudy'
  alias: Living Room On Cloudy
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.rain
      from: 'off'
      to: 'on'

    - platform: template
      value_template: >-
        {% if is_state('sensor.dark_sky_summary', 'Rain') %}
          'true'
        {% elif is_state('sensor.dark_sky_summary', 'Thunderstorm') %}
          'true'
        {% elif is_state('sensor.dark_sky_summary', 'Showers') %}
          'true'
        {% elif is_state('sensor.dark_sky_summary', 'Drizzle') %}
          'true'
        {% elif is_state('sensor.dark_sky_summary', 'Mostly Cloudy') %}
          'true'
        {% else %}
          'false'
        {% endif %}


    - platform: numeric_state
      entity_id: sensor.dark_sky_precip_intensity
      above: 1

  condition:
    - condition: time
      after: '08:00:00'
      before: '17:00:00'

    - condition: state
      entity_id: group.all_devices
      state: 'home'

    - condition: numeric_state
      entity_id: sensor.dark_sky_cloud_coverage
      above: 69

    - condition: numeric_state
      entity_id: sensor.illumination_front_entry
      below: 125

    - condition: template
      value_template: "{{ states.media_player.apple_tv.state != 'playing' }}"

  action:
    - service: script.turn_on
      entity_id: script.cloudy


### Turn off lights after rain has stopped
- id: 'living_room_lights_off_cloudy'
  alias: Living Room Off Cloudy
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id: sensor.dark_sky_precip_intensity
      below: 1

    - platform: state
      entity_id: input_boolean.rain
      from: 'on'
      to: 'off'

    - platform: numeric_state
      entity_id: sensor.illumination_front_entry
      above: 25

  condition:
    - condition: state
      entity_id: group.living_room
      state: 'on'

    - condition: numeric_state
      entity_id: sensor.illumination_front_entry
      above: 25

    - condition: time
      before: '17:00:00'

  action:
    - service: homeassistant.turn_off
      entity_id: group.living_room_lights

    - service: homeassistant.turn_off
      entity_id: group.entry_lights


#####################################################################
### Reset any disabled automations (away) upon returning home 
#####################################################################

### Return automations to normal upon arrival
- id: 'enable_automations_on_arrival'
  alias: Enable Automations On Arrival
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: group.all_devices
      from: 'not_home'
      to: 'home'
      for:
        minutes: 5

  action: 
    - service: automation.turn_on
      entity_id: automation.evening_scene_schedule


#####################################################################
### Turn on some lights if we arrive home after sundown
#####################################################################
- id: 'lights_on_arrival'
  alias: On Arrival Turn On Lights
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: group.all_devices
    from: 'not_home'
    to: 'home'

  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'

    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'off'

  action:
    - service: notify.mobile_app_rip8plus
      data:
        title: "Welcome Home"
        message: "Turning on some lights"
        data:
          push:
            sound: "US-EN-Alexa-Welcome-Home.wav"

    - service: script.turn_on
      entity_id: script.bright

    - service: homeassistant.turn_on
      entity_id: group.accent_lights

    - delay:
        minutes: 5

    - service: script.turn_on
      entity_id: script.evening


#####################################################################
### Away Mode Control for Device Trackers
#####################################################################

### Start Away Mode Countdown
- id: 'away_mode_countdown'
  alias: Away Mode Countdown
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: group.all_devices
      from: 'home'
      to: 'not_home'
      for:
        minutes: 5

  condition:
    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'off'

  action:
    - service: timer.start
      entity_id: timer.away_mode

    - service: notify.mobile_app_rip8plus
      data:
        title: "Away Detected"
        message: "Counting down..."
        data:
          push:
            category: "away_override"
            thread-id: "away-notification"
            sound:
              name: default


### Turn on Away Mode when the timer finishes
- id: 'away_mode_on'
  alias: Away Mode On
  initial_state: 'on'
   
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.away_mode

  action:
    - service: script.away


### Cancel Away Mode if we have to run home real quick
- id: 'away_mode_cancel'
  alias: Away Mode Cancel
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: group.all_devices
      from: 'not_home'
      to: 'home'

  condition:
    - condition: template
      value_template: "{{ states('timer.away_mode') != 'idle'}}"

  action:
    - service: timer.cancel
      entity_id: timer.away_mode

    - service: notify.mobile_app_rip8plus
      data:
        title: "Away Mode Canceled"
        message: "Away mode canceled."


#####################################################################
### Control Visitor Mode for dog sitter
### Related Automations: automation_away_mode.yaml
#####################################################################

### Turn on visitor_mode if door is unlocked by Dog Sitter
- id: 'visitor_mode_via_code'
  alias: Turn On Visitor Mode via Code
  initial_state: 'on'
   
  trigger:
    - platform: template
      value_template: "{{ states('sensor.lock_south_door_status') == 'Unlocked by Dog Sitter' }}"

  condition:
    - condition: state
      entity_id: group.all_devices
      state: 'not_home'

    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'off'

  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.visitor_mode


### Turn off Visitor Mode when we return home
- id: 'visitor_mode_cancel'
  alias: Cancel Visitor Mode
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: group.all_devices
      from: 'not_home'
      to: 'home'
      for:
        minutes: 7

  condition:
    - condition: state
      entity_id: input_boolean.visitor_mode
      state: 'on'

  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.visitor_mode


### Start Away Mode countdown if visitor_mode is turned off and we are not home
### Useful if our house sitter leaves for an extended time and we manually turn off visitor_mode (add automation if you can identify lock from outside)
- id: 'visitor_mode_away'
  alias: Visitor Away
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: input_boolean.visitor_mode
      to: 'off'
      for:
        minutes: 5

  condition:
    - condition: state
      entity_id: group.all_devices
      state: 'not_home'

  action:
    - service: timer.start
      entity_id: timer.away_mode


#####################################################################
### Handle Away Mode Automations
#####################################################################
### Disable climate away mode automation when visitor_mode is turned on
- id: 'visitor_mode_cancel_away'
  alias: Disable away_mode when visitor_mode is on
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: input_boolean.visitor_mode
      to: 'on'

  action:
    - service: automation.turn_off
      entity_id: automation.away_mode_countdown

    - service: automation.turn_off
      entity_id: automation.away_mode_on


### Enable climate away mode automation when visitor_mode is turned off
- id: 'visitor_mode_off_away_mode_on'
  alias: Enable away_mode when visitor_mode is off
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: input_boolean.visitor_mode
      to: 'off'

  action:
    - service: automation.turn_off
      entity_id: automation.away_mode_countdown

    - service: automation.turn_on
      entity_id: automation.away_mode_on


#####################################################################
### After Hours Automation
#####################################################################

### Turn off things left on after_hours
- id: 'after_hours_shutdown'
  alias: After Hours Shutdown
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.after_hours
      to: 'on'

  condition:
    - condition: state
      entity_id: input_boolean.party_mode
      state: 'off'

  action:
    - service: homeassistant.turn_off
      entity_id:
        - fan.patio_fan
        - group.exterior_lights
        - group.interior_lights
        - switch.fountains_switch
        - switch.outdoor_speakers


#####################################################################
### Initiate Morning Sequence based on Alarm Clock (replace time based
#####################################################################
- id: 'alarm_clock_weekday'
  alias: Wake Up (weekday)
  initial_state: 'on'
  trigger:
    - platform: time_pattern
      minutes: /1
      seconds: 0

  condition:
    - condition: state
      entity_id: input_boolean.alarm_clock_weekday
      state: 'on'

    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri

    - condition: template
      value_template: "{{ states('sensor.time') == states('sensor.alarm_clock_time_minus_offset') }}"

  action:
    - service: script.morning_sequence

## test action
#      - service: notify.mobile_app_rip8plus
#        data:
#          title: "Wake Test"
#          message: "Success!"


- id: 'alarm_clock_weekend'
  alias: Wake Up (weekend)
  trigger:
    - platform: time_pattern
      minutes: /1
      seconds: 0
  condition:
    - condition: state
      entity_id: input_boolean.alarm_clock_weekend
      state: 'on'
    - condition: time
      weekday:
      - sat
      - sun
    - condition: template
      value_template: "{{ states('sensor.time') == states('sensor.alarm_clock_time_minus_offset') }}"

  action:
    - service: script.morning_sequence
    

## explore this service call format and standardize on one method...      
#      - data: {}
#        service: script.morning_sequence


#####################################################################
### Automations for Christmas Lights
#####################################################################

### Turn on the christmas lights after porch
- id: 'christmas_lights_on'
  alias: Christmas Lights On
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: switch.front_porch_lights_switch
      to: 'on'
      
  action:
    - service: homeassistant.turn_on
      entity_id: group.christmas_lights


### Turn off the Christmas Lights - Weekdays
- id: 'christmas_lights_off_weekday'
  alias: Christmas Lights Off Weekdays
  initial_state: 'on'
  trigger:
    platform: time
    at: '00:00:00'

  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri

    - condition: state
      entity_id: group.christmas_lights
      state: 'on'

  action:
# outdoor Christmas lights
    - service: homeassistant.turn_off
      entity_id: group.christmas_lights


### Turn off the Christmas Lights - Weekends
- id: 'christmas_lights_off_weekend'
  alias: Christmas Lights Off Weekends
  initial_state: 'on'
  trigger:
    platform: time
    at: '01:30:00'

  condition:
    - condition: time
      weekday:
        - sat
        - sun

    - condition: state
      entity_id: group.christmas_lights
      state: 'on'

  action:
    - service: homeassistant.turn_off
      entity_id: group.christmas_lights


#####################################################################
### Amazon Dasher event handler automations
#####################################################################

### Begin bedtime countdown when Dasher Wellness is pressed
- id: 'dasher_bedtime_timer'
  alias: Dasher Bedtime Timer
  initial_state: 'on'
  trigger:
    platform: event
    event_type: timer_bedtime

  action:
    - service: timer.start
      entity_id: timer.bedtime


### Turn on Master Bedroom Night Time scene when Laundress Dash button is pressed
- id: 'dasher_night_time'
  alias: Dasher Night Time
  initial_state: 'on'
  trigger:
    platform: event
    event_type: script_night_time

  action:
    - service: script.turn_on
      entity_id: script.master_bedroom_night_time


### Turn on the Baby Playlist in the Nursery when Puracy Dash button is pressed
- id: 'dasher_baby_playlist'
  alias: Dasher Baby Playlist
  initial_state: 'on'
  trigger:
    platform: event
    event_type: script_baby_playlist

  action:
    - service: script.turn_on
      entity_id: script.baby_playlist


### Test script when Dude Dash button is pressed
- id: 'dasher_test'
  alias: Dasher Test
  initial_state: 'on'
  trigger:
    platform: event
    event_type: script_test

  action:
    - service: script.turn_on
      entity_id: script.script_test


################################################
## Automation - wait for z-wave network
################################################
- id: 'homekit_start'
  alias: "Start HomeKit"
  trigger:
    - platform: event
      event_type: zwave.network_ready

  action:
#      - delay: 00:05
    - service: homekit.start


#####################################################################
### Automation - After Hours
#####################################################################
- id: 'after_hours_on'
  alias: After Hours On
  initial_state: 'on'
   
  trigger:
    - platform: time
      at: '01:30:00'

  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.after_hours

- id: 'after_hours_off'
  alias: After Hours Off
  initial_state: 'on'
   
  trigger:
    - platform: time
      at: '05:00:00'

  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.after_hours


#####################################################################
### Automation - Peak Hours
#####################################################################
- id: 'peak_hours_on'
  alias: Peak Hours On
  initial_state: 'on'
   
  trigger:
    - platform: time
      at: '15:00:00'

  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri

    - condition: state
      entity_id: input_boolean.holiday
      state: 'off'

  action:
    - service: input_boolean.turn_on
      data:
        entity_id: input_boolean.peak_hours

- id: 'peak_hours_off'
  alias: Peak Hours Off
  initial_state: 'on'
   
  trigger:
    - platform: time
      at: '18:00:00'

    - platform: state
      entity_id: input_boolean.holiday
      from: 'off'
      to: 'on'

  condition:
    - condition: state
      entity_id: input_boolean.peak_hours
      state: 'on'

  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.peak_hours


#####################################################################
### Automation - Sleeping
#####################################################################
- id: 'sleeping_off_weekday'
  alias: Sleeping Off Weekday
  initial_state: 'on'
   
  trigger:
    - platform: time
      at: '10:30:00'

  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri

  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.sleeping

- id: 'sleeping_off_weekend'
  alias: Sleeping Off Weekend
  initial_state: 'on'
   
  trigger:
    - platform: time
      at: '11:45:00'

  condition:
    - condition: time
      weekday:
        - sat
        - sun

  action:
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.sleeping


#####################################################################
### Alexa TTS: this allows text input to be spoken by selected echos
#####################################################################

## Announce what is typed as input
- id: 'alexa_tts'
  alias: Alexa TTS
  trigger:
    platform: state
    entity_id: input_select.alexa
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: >
          {% if is_state('input_select.alexa', 'Living Room') %}
            media_player.living_room
          {% elif is_state('input_select.alexa', 'Master Bedroom') %}
            media_player.master_bedroom
          {% elif is_state('input_select.alexa', 'Master Bathroom') %}
            media_player.master_bathroom
          {% elif is_state('input_select.alexa', 'Kitchen') %}
            media_player.kitchen
          {% elif is_state('input_select.alexa', 'Wine Room') %}
            media_player.wine_room
          {% elif is_state('input_select.alexa', 'Game Room') %}
            media_player.game_room
          {% elif is_state('input_select.alexa', 'Nursery') %}
            media_player.nursery
          {% elif is_state('input_select.alexa', 'Office') %}
            media_player.office
          {% elif is_state('input_select.alexa', 'None') %}
            false
          {% endif %}
        volume_level: '{{ states.input_number.alexa_volume.state | float /10 }}'
    - service: notify.alexa_media
      data_template:
        target: >
          {% if is_state('input_select.alexa', 'Living Room') %}
            media_player.living_room
          {% elif is_state('input_select.alexa', 'Master Bedroom') %}
            media_player.master_bedroom
          {% elif is_state('input_select.alexa', 'Master Bathroom') %}
            media_player.master_bathroom
          {% elif is_state('input_select.alexa', 'Kitchen') %}
            media_player.kitchen
          {% elif is_state('input_select.alexa', 'Wine Room') %}
            media_player.wine_room
          {% elif is_state('input_select.alexa', 'Game Room') %}
            media_player.game_room
          {% elif is_state('input_select.alexa', 'Nursery') %}
            media_player.nursery
          {% elif is_state('input_select.alexa', 'Office') %}
            media_player.office
          {% elif is_state('input_select.alexa', 'None') %}
            false
          {% endif %}
        message: "{{  states('input_text.alexa_tts') }}"
        data:
          type: tts

#      - delay: '00:00:02'

    - service: input_select.select_option
      data:
        entity_id: input_select.alexa
        option: None


#####################################################################
### ALEXA: Announce arrival when proximity is below 5 miles
#####################################################################
- id: 'alexa_announce_rick'
  alias: Announce Rick On Arrival
  initial_state: 'off' #disabled
  trigger:
    - platform: numeric_state
      entity_id: proximity.rick
      below: 5

  condition:
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'

    - condition: state
      entity_id: input_boolean.holiday
      state: 'off'

    - condition: time
      before: '19:00:00'
      after: '14:00:00'

#      - condition: state
#        entity_id: person.rick
#        state: 'not_home'

  action:
    - service: media_player.volume_set
      entity_id: media_player.living_room
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"

    - service: notify.alexa_media_living_room
      data:
        message: "Good news, Rick is less than 10 minutes away and will be home soon."
        data:
          type: announce


#####################################################################
### Control TTS Announcements
#####################################################################

### Turn on announcements
- id: 'alexa_announcements_on'
  alias: Announcements ON
  initial_state: 'on'
  trigger:
    - platform: time
      at: '08:00:00'

  condition:
    - condition: state
      entity_id: input_boolean.announce
      state: 'off'

  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.announce


### Turn off announcements
- id: 'alexa_announcements_off'
  alias: Announcements OFF
  initial_state: 'on'
  trigger:
    - platform: time
      at: '21:30:00'

  condition:
    - condition: state
      entity_id: input_boolean.announce
      state: 'on'

  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.announce


### Control announcements at startup
- id: 'alexa_announcements_startup'
  alias: Announcement Startup
  initial_state: 'on'
  trigger:
    - platform: homeassistant
      event: start

  condition:
    - condition: time
      after: '08:00:00'
      before: '21:30:00'

  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.announce


#####################################################################
### Automations to notify us when conditions change to save energy
### 
### 
### Related Components:
###   - automation_ecobee_downstairs.yaml
###   - automation_ecobee_upstairs.yaml
###   - script.tts_warm_weather.yaml
###

#####################################################################
### Reminder to Close Doors and Windows
#####################################################################
- id: 'notify_warm_weather'
  alias: Reminder Close Doors When Weather is Warm
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id: sensor.dark_sky_temperature
      above: 84.5

  condition:
    - condition: state
      entity_id: binary_sensor.door_held_open
      state: 'on'

    - condition: state
      entity_id: group.all_devices
      state: 'home'

  action:
    - service: script.tts_warm_weather


#####################################################################
### Notify if awesome weather
#####################################################################
- id: 'notify_awesome_weather'
  alias: Notify if Awesome Weather
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.season
      to: 'Awesome'

  condition:
    - condition: time
      after: '08:00:00'
      before: '22:00:00'

  action:
    - service: notify.mobile_app_rip8plus
      data:
        title: "Awesome Weather"
        message: "It's {{ states('sensor.dark_sky_temperature')|round }} degrees outside. Time to open up the house!"
        data:
          push:
            sound:
              name: default


####################################################################
## Notify - action: Cancel / Pause Away Mode
####################################################################
- id: 'notify_ios_cancel_away'
  alias: iOS Cancel Away
  initial_state: 'on'
   
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: CANCEL_AWAY

  action:
    service: timer.cancel
    entity_id: timer.away_mode

- id: 'notify_ios_pause_away'
  alias: iOS Pause Away
  initial_state: 'on'
   
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: PAUSE_AWAY

  action:
    service: timer.pause
    entity_id: timer.away_mode

- id: 'notify_ios_visitor_mode'
  alias: iOS Visitor Mode
  initial_state: 'on'
   
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: VISITOR

  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.visitor_mode

    - service: timer.cancel
      entity_id: timer.away_mode


####################################################################
## Notify on system restart
####################################################################

## Send notification after home assistant has restarted
- id: 'notify_ha_startup'
  alias: Startup Notification
  initial_state: 'on'
   
  trigger:
    platform: homeassistant
    event: start

  action:
  - service: notify.pushbullet
    data:
      title: "Home Assistant Startup"
      target: "device/Chrome"
      message: "Home Assistant is up and running."

  - service: notify.mobile_app_rip8plus
    data:
      title: "Home Assistant Startup"
      message: "Home Assistant is up and running."
      data:
        push:
          sound:
            name: default


####################################################################
## Automations for Notify events and
## "Watchdog" Automations - notify us when we are away of events
####################################################################

#### While we are away ...
## Notify if master bedroom lights turned on
- id: 'notify_watchdog_master_bedroom'
  alias: Notify if away and bedroom lights turn on
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: group.master_bedroom_lights
      to: 'on'

  condition:
    - condition: state
      entity_id: group.all_devices
      state: 'not_home'

  action:
    - service: notify.mobile_app_rip8plus
      data:
        title: "Home Assistant Alert"
        message: "Master Bedroom Lights On"
        data:
          push:
            sound:
              name: default


## Notify if an exterior door is opened
- id: 'notify_watchdog_door_opened'
  alias: Notify if away and door is opened
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: sensor.front_door_state, sensor.south_door_state, sensor.kitchen_door_state, sensor.bathroom_door_state, sensor.office_door_state
      from: 'Closed'
      to: 'Open'

  condition:
    - condition: state
      entity_id: group.all_devices
      state: 'not_home'

  action:
    - service: notify.mobile_app_rip8plus
      data:
        title: "Exterior Door Opened"
        message: "Someone opened the {{ trigger.to_state.attributes.friendly_name }}."
        data:
          push:
            sound:
              name: default


#####################################################################
### Workaround for Door Open events not logging properly 
#####################################################################
- id: 'event_door_open'
  alias: Record Door Open Events
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id:
        - sensor.front_door_access_control
        - sensor.south_door_access_control
        - sensor.office_door_access_control
        - sensor.bathroom_door_access_control
        - sensor.kitchen_door_access_control
      to: '22'

  action:
    - service: logbook.log
      data_template:
        name: "{{ trigger.to_state.attributes.friendly_name }}"
        message: " changed to open."


#####################################################################
### Downstairs HVAC Leak Detector Alarm
#####################################################################
- id: 'notify_leak_downstairs_hvac'
  alias: Downstairs AC Leak Detector Alarm
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: sensor.downstairs_ac_leak_detector
      to: 'Leak Detected!'

  action:
    - service: climate.set_hvac_mode
      data:
        entity_id: climate.downstairs
        operation_mode: 'off'

    - service: notify.mobile_app_rip8plus
      data:
        title: "Leak Detected"
        message: "HVAC overflow detected - AC turned off!"
        data:
          push:
            sound:
              name: default


#####################################################################
### Locks - Automations
#####################################################################

### Unlock door when Megs arrives
- id: 'unlock_south_door_megs_arrival'
  alias: South Door Unlock On Arrival
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: person.megs
      from: 'not_home'
      to: 'home'

  condition:
    - condition: template
      value_template: "{{ is_state('lock.south_entry_locked', 'locked') or false }}"
# "{{(states.device_tracker.mip8.attributes|default({})).source_type|default('unknown') }}"

  action:
    - service: script.unlock_megs


### notify if unlocked by code
- id: 'notify_unlock_south_door'
  alias: South Door Unlock By User
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: sensor.south_entry_alarm_type
    to: '19'

  action:
    - service: notify.mobile_app_rip8plus
      data:
        title: "Door Unlocked"
        message: "South Door {{ states('sensor.lock_south_door_status') }}"
        data:
          push:
            sound:
              name: default

    - service: notify.mobile_app_mip8
      data:
        title: "Door Unlocked"
        message: "South Door {{ states('sensor.lock_south_door_status') }}"
        data:
          push:
            sound:
              name: default


#####################################################################
### Announce via Alexa when someone presses the Ring Doorbell
#####################################################################

### Doorbell
- id: 'notify_ring_doorbell_pressed'
  alias: Doorbell Pressed
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.ring_front_door_ding
      to: 'on'

  action:
    - service: media_player.volume_set
      entity_id: media_player.living_room
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"

#      - service: media_player.volume_set
#        data:
#          entity_id: media_player.living_room
#          volume_level: .5

    - service: notify.alexa_media_living_room
      data:
        message: "You've got a visitor at the front door."
        data:
          type: announce



### disabled due to low WAF - saved for reference.
### optionally, ring the xiaomi light/gateway 
#      - service: xiaomi_aqara.play_ringtone
#        data:
#          gw_mac: 7811dcb7da52
#          ringtone_id: 10
#          ringtone_vol: 20

#      - service: light.turn_on
#        data:
#          entity_id: light.kitchen_night_light
#          brightness: 255
#          hs_color: [360,100]
#
#      - delay: '00:03:00'
#
#      - service: light.turn_off
#        data:
#          entity_id: light.kitchen_night_light


#####################################################################
### Xiaomi smart button automations
#####################################################################

#####################################################################
### Living Room Smart Button
#####################################################################

### Living Room Smart Button Single Press
- id: 'button_living_room_single_press'
  alias: Living Room Smart Button Single Press
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.smart_button_living_room
      click_type: single

  action:
    - service: timer.start
      entity_id: timer.bedtime

    - service: media_player.volume_set
      entity_id: media_player.living_room
      data_template:
        volume_level: "{{ states('sensor.alexa_volume') }}"

    - service: notify.alexa_media
      data:
        target: media_player.living_room
        message: "Goodnight. See you in the morning."
        data:
          type: tts

### Living Room Smart Button Double Press
- id: 'button_living_room_double_press'
  alias: Living Room Smart Button Double Press
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.smart_button_living_room
      click_type: double

  action:
    - service: timer.cancel
      entity_id: timer.bedtime


#####################################################################
### Master Bedroom Smart Button
#####################################################################

### Master Bedroom Smart Button Single Press
- id: 'button_master_bedroom_single_press'
  alias: Master Bedroom Smart Button Single Press
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.smart_button_master_bedroom
      click_type: single

  action:
    - service: script.turn_on
      entity_id: script.nightlight

### Master Bedroom Smart Button Double Press
- id: 'button_master_bedroom_double_press'
  alias: Master Bedroom Smart Button Double Press
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.smart_button_master_bedroom
      click_type: double

  action:
    - service: timer.start
      entity_id: timer.bedtime


### Master Bedroom Smart Button Long Press
- id: 'button_master_bedroom_long_press'
  alias: Master Bedroom Smart Button Long Press
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.smart_button_master_bedroom
      click_type: long_click_press

  action:
    - service: timer.cancel
      entity_id: timer.bedtime




#####################################################################
### Office Smart Button
#####################################################################

### Office Smart Button Single Press
- id: 'button_office_single_press'
  alias: Office Smart Button Single Press
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.smart_button_office
      click_type: single

  action:
    - service: script.turn_on
      entity_id: script.master_bedroom_night_time

### Office Smart Button Double Press
- id: 'button_office_double_press'
  alias: Office Smart Button Double Press
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.smart_button_office
      click_type: double

  action:
    - service: timer.start
      entity_id: timer.bedtime

### Office Smart Button Long Press
- id: 'button_office_long_press'
  alias: Office Smart Button Long Press
  initial_state: 'on'
  trigger:
    platform: event
    event_type: xiaomi_aqara.click
    event_data:
      entity_id: binary_sensor.smart_button_office
      click_type: long_click_press

  action:
    - service: timer.cancel
      entity_id: timer.bedtime


#####################################################################
#  Automation - Save Master Bedroom Fan Speed State to MQTT
#####################################################################
- id: 'state_master_bedroom_fan_speed'
  alias: Master Bedroom Fan Speed State Save
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: switch.master_bedroom_fan, switch.master_bedroom_fan_1, switch.master_bedroom_fan_2, switch.master_bedroom_fan_3, switch.master_bedroom_fan_4, switch.master_bedroom_fan_5, switch.master_bedroom_fan_6, switch.master_bedroom_fan_7, switch.master_bedroom_fan_8, switch.master_bedroom_fan_9, switch.master_bedroom_fan_10, switch.master_bedroom_fan_11, switch.master_bedroom_fan_12

  action:
    service: mqtt.publish
    data_template:
      topic: "/home/mbrfanspeed/{{ trigger.entity_id.split('.')[1] }}"
      retain: true
      qos: 1
      payload: '{{ trigger.to_state.state }}'


#####################################################################
#  RF Switch Automation - Saves Switch State to MQTT
#####################################################################
- id: 'state_rf_switch'
  alias: RF Switches State Save
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: switch.switch_one, switch.switch_two, switch.switch_three, switch.switch_four, switch.switch_five

  action:
    service: mqtt.publish
    data_template:
      topic: "/home/rfswitches/{{ trigger.entity_id.split('.')[1] }}"
      retain: true
      qos: 1
      payload: '{{ trigger.to_state.state }}'


#####################################################################
# Startup event - restores states of dropdowns, and RF Switches...etc
#####################################################################
- id: 'state_rf_switch_restore'
  alias: RF Switch State Restore
  initial_state: 'on'
   
  trigger:
    platform: homeassistant
    event: start

  action:
    - delay:
        minutes: 1
    - service_template: >
        {%- if states('sensor.rf_switch_one') | lower == "on" -%}
            homeassistant.turn_on
        {%- else -%}
            homeassistant.turn_off
        {%- endif -%}    
      entity_id: switch.switch_one
    - service_template: >
        {%- if states('sensor.rf_switch_two') | lower == "on" -%}
            homeassistant.turn_on
        {%- else  -%}
            homeassistant.turn_off
        {%- endif -%}    
      entity_id: switch.switch_two
    - service_template: >
        {%- if states('sensor.rf_switch_three') | lower == "on" -%}
            homeassistant.turn_on
        {%- else  -%}
            homeassistant.turn_off
        {%- endif -%}    
      entity_id: switch.switch_three
    - service_template: >
        {%- if states('sensor.rf_switch_four') | lower == "on" -%}
            homeassistant.turn_on
        {%- else  -%}
            homeassistant.turn_off
        {%- endif -%}    
      entity_id: switch.switch_four
    - service_template: >
        {%- if states('sensor.rf_switch_five') | lower == "on" -%}
            homeassistant.turn_on
        {%- else  -%}
            homeassistant.turn_off
        {%- endif -%}
      data:
        entity_id: switch.switch_five


#####################################################################
#  Automation - Saves Switch State to MQTT
#####################################################################
- id: 'state_sonoff_switch'
  alias: Sonoff Switches State Save
  initial_state: 'on'
   
  trigger:
    platform: state
    entity_id: switch.staircase_lamp, switch.wine_room_lamp

  action:
    service: mqtt.publish
    data_template:
      topic: "/home/sonoffs/{{ trigger.entity_id.split('.')[1] }}"
      retain: true
      qos: 1
      payload: '{{ trigger.to_state.state }}'


#####################################################################
# Startup event - restores states of Sonoff Switches
#####################################################################
- id: 'state_sonoff_switch_restore'
  alias: Sonoff Switch State Restore
  initial_state: 'on'
   
  trigger:
    platform: homeassistant
    event: start

  action:
    - delay:
        minutes: 1
    - service_template: >
        {%- if states('sensor.staircase_lamp') | lower == "on" -%}
            homeassistant.turn_on
        {%- else -%}
            homeassistant.turn_off
        {%- endif -%}    
      entity_id: switch.staircase_lamp

    - service_template: >
        {%- if states('sensor.wine_room_lamp') | lower == "on" -%}
            homeassistant.turn_on
        {%- else  -%}
            homeassistant.turn_off
        {%- endif -%}    
      entity_id: switch.wine_room_lamp


#####################################################################
### Automation for my timers
#####################################################################

### Bedtime Timer Finish
- id: 'timer_bedtime_finish'
  alias: Bedtime Timer Finish
  initial_state: 'on'
   
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.bedtime

  action:
    - service: script.bedtime


### Bedtime Timer Reset
- id: 'timer_bedtime_reset'
  alias: Bedtime Timer Reset
  initial_state: 'on'
   
  trigger:
    - platform: state
      entity_id: binary_sensor.front_entry_fibaro_multisensor
      to: 'on'

  condition:
    - condition: template
      value_template: "{{ states('timer.bedtime') != 'idle'}}"

  action:
    - service: timer.cancel
      entity_id: timer.bedtime

    - delay:
        seconds: 60
  ### reset the timer after short delay
    - service: timer.start
      entity_id: timer.bedtime


### Sun Up Timer Finish
- id: 'timer_sun_up_finish'
  alias: Sun Up Timer Finish
  initial_state: 'on'
   
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.sun_up

  action:
    - service: script.sun_up


#####################################################################
### Rain Sensor
#####################################################################
- id: 'weather_rain_sensor'
  alias: rain sensor
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: weather.downstairs

  action:
    - service_template: >-
        {% if is_state('sensor.dark_sky_summary', 'Rain') %}
          homeassistant.turn_on
        {% elif is_state('sensor.dark_sky_summary', 'Light Rain') %}
          homeassistant.turn_on
        {% elif is_state('sensor.dark_sky_summary', 'Thunderstorm') %}
          homeassistant.turn_on
        {% elif is_state('sensor.dark_sky_summary', 'Showers') %}
          homeassistant.turn_on
        {% elif is_state('sensor.dark_sky_summary', 'Drizzle') %}
          homeassistant.turn_on
        {% else %}
          homeassistant.turn_off
        {% endif %}
      data:
        entity_id: input_boolean.rain
        

###################################################################
### Aeotec zwave Minimote #1: zwave.living_room_minimote
#####
###    short                       long
###  1 script.evening    script.bright
###  2 script.movie_time            script.dim
###  3 kitchen_lights on 50%       kitchen_lights on 100%
###  4 kitchen_lights off          script.bedtime
###################################################################
- id: 'minimote_1_b1_short'
  alias: Minimote 1 Button 1 Short
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.living_room_minimote
        scene_id: 1

  action:
    - service: script.turn_on
      entity_id: script.evening

###
- id: 'minimote_1_b1_long'
  alias: Minimote 1 Button 1 Long
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.living_room_minimote
        scene_id: 2

  action:
    - service: script.turn_on
      entity_id: script.bright

###
- id: 'minimote_1_b2_short'
  alias: Minimote 1 Button 2 Short
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.living_room_minimote
        scene_id: 3

  action:
    - service: script.turn_on
      entity_id: script.movie_time

    - service: light.turn_off
      entity_id: light.kitchen_lights

###
- id: 'minimote_1_b2_long'
  alias: Minimote 1 Button 2 Long
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.living_room_minimote
        scene_id: 4

  action:
    - service: script.turn_on
      entity_id: script.dim

###
- id: 'minimote_1_b3_short'
  alias: Minimote 1 Button 3 Short
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.living_room_minimote
        scene_id: 5

  action:
    - service: light.turn_on
      data:
        entity_id: light.kitchen_lights
        transition: 5
        brightness: 150

###
- id: 'minimote_1_b3_long'
  alias: Minimote 1 Button 3 Long
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.living_room_minimote
        scene_id: 6

  action:
    - service: light.turn_on
      data:
        entity_id: light.kitchen_lights
        transition: 5
        brightness: 255

###
- id: 'minimote_1_b4_short'
  alias: Minimote 1 Button 4 Short
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.living_room_minimote
        scene_id: 7

  action:
    - service: light.turn_off
      data:
        entity_id: light.kitchen_lights

###
- id: 'minimote_1_b4_long'
  alias: Minimote 1 Button 4 Long
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.living_room_minimote
        scene_id: 8

  action:
    - service: script.bedtime


###################################################################
### Aeotec zwave Minimote #3: zwave.master_bedroom_minimote
#####
###    short                       long
###  1 mbr dim                    mbr bright
###  2 bath dim
###  3 
###  4 
###################################################################
- id: 'minimote_3_b1_short'
  alias: Minimote 3 Button 1 Short
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.master_bedroom_minimote
        scene_id: 1

  action:
    - service: light.turn_on
      data:
        entity_id: light.bedframe_light

    - service: hue.hue_activate_scene
      data:
        group_name: "Master Bathroom"
        scene_name: "Morning"

    - service: light.turn_on
      data:
        entity_id: light.foyer_lights
        brightness: 50

###
- id: 'minimote_3_b1_long'
  alias: Minimote 3 Button 1 Long
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.master_bedroom_minimote
        scene_id: 2

  action:
    - service: light.turn_off
      data:
        entity_id: light.master_bedroom_chandelier

    - service: light.turn_off
      data:
        entity_id: light.bedframe_light

###
- id: 'minimote_3_b2_short'
  alias: Minimote 3 Button 2 Short
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.master_bedroom_minimote
        scene_id: 3

  action:
    - service: script.mbr_night_light

###
- id: 'minimote_3_b2_long'
  alias: Minimote 3 Button 2 Long
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.master_bedroom_minimote
        scene_id: 4

  action:
    - service: script.bedtime

###
- id: 'minimote_3_b3_short'
  alias: Minimote 3 Button 3 Short
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.master_bedroom_minimote
        scene_id: 5

  action:
    - service: switch.turn_on
      data:
        entity_id: switch.master_bedroom_fan

###
- id: 'minimote_3_b3_long'
  alias: Minimote 3 Button 3 Long
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.master_bedroom_minimote
        scene_id: 6

# set fan speed to 2
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.master_bedroom_fan_speed
        option: 2

###
- id: 'minimote_3_b4_short'
  alias: Minimote 3 Button 4 Short
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.master_bedroom_minimote
        scene_id: 7

  action:
    - service: switch.turn_off
      data:
        entity_id: switch.master_bedroom_fan

###
- id: 'minimote_3_b4_long'
  alias: Minimote 3 Button 4 Long
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: zwave.scene_activated
      event_data:
        entity_id: zwave.master_bedroom_minimote
        scene_id: 8

  action:
    - service: script.turn_on
      data:
        entity_id: script.morning


### Aeotec zwave Minimote #3: aeotec_dsa03202_Minimote_31

#####################################################################
### LAB - TESTING - BETA
#####################################################################

### Test iOS
- id: 'test_ios_notifications'
  alias: Test notifications
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_boolean.state_change
#        from: 'off'
#        to: 'on'

  action:
#    # WORKING (109.6): Test alexa_media announce - multiple echo devices
#      - service: notify.alexa_media
#        data:
#          data:
#            type: announce
#          target:
##            - media_player.kitchen
#            - media_player.office
#            - media_player.living_room
#          message: "Attention, This is only a test"

#    # WORKING (109.6): Test alexa_media announce - single echo device
#      - service: notify.alexa_media
#        data_template:
#          target: media_player.office
#          message: "The {{ trigger.to_state.attributes.friendly_name }} has triggered."
#          data:
#            type: announce

  # WORKING (109.6): Test iOS Notification
    - service: notify.mobile_app_rip8plus
      data:
        title: "Testing"
        message: "iOS Test Notification Successful!"
        data:
          push:
            thread-id: "test"
            sound:
              name: default
          apns_headers:
            'apns-collapse-id': 'test'


  # WORKING (109.6): Actionable Notification
    - service: script.activate_alexa_actionable_notification
      data_template:
        text: 'I see that the office desk lamp is off, would you like it on?'
        event_id: 'actionable_notification_test'
        alexa_device: 'media_player.office'

#  - id: 'test_alexa_actionable_notifications'
#     alias: Alexa Actionable Notification Test
#    initial_state: 'on'
#    trigger:
#      platform: event
#      event_type: alexa_actionable_notification
#      event_data:
#        event_id: actionable_notification_test
#        event_response: ResponseYes
#        
#    action:
#      - service: light.turn_on
#        entity_id: light.office_desk_lamp

#  - id: 'test_action_desk_lamp'
#    alias: test action desk light
#    initial_state: 'on'
#     
#    trigger:
#      platform: event
#      event_type: ios.notification_action_fired
#      event_data:
#        actionName: TEST_ACTION
#
#    action:
#      service: light.turn_on
#      entity_id: light.office_desk_lamp


#  ### Test Away Mode Trigger
#  - id: 'test_away_trigger'
#    alias: Test Away Mode
#    initial_state: 'on'
#     
#    trigger:
#      - platform: state
#        entity_id: input_boolean.state_change
#        from: 'off'
#        to: 'on'

#    condition:
#      - condition: state
#        entity_id: input_boolean.condition_3
#        state: 'on'
#
#      - condition: or
#        conditions:
#          - condition: state
#            entity_id: input_boolean.condition_4
#            state: 'on'
#
#          - condition: state
#            entity_id: input_boolean.condition_5
#            state: 'on'
#
#      - condition: or
#        conditions:
#          - condition: state
#            entity_id: input_boolean.condition_1
#            state: 'on'
#
#          - condition: state
#            entity_id: input_boolean.condition_2
#            state: 'on'

#    action:
#      - service: homeassistant.turn_on
#        entity_id: input_boolean.state_change


#  ### Test Condition 1
#  - id: 'test_condition_1'
#    alias: Test Input Boolean Condition 1
#    initial_state: 'on'
#     
#    trigger:
#      - platform: state
#        entity_id: input_boolean.state_change
#        from: 'off'
#        to: 'on'
#
#    condition:
#      - condition: state
#        entity_id: input_boolean.condition_3
#        state: 'on'
#
#      - condition: or
#        conditions:
#          - condition: state
#            entity_id: input_boolean.condition_4
#            state: 'on'
#
#          - condition: state
#            entity_id: input_boolean.condition_5
#            state: 'on'
#
#      - condition: or
#        conditions:
#          - condition: state
#            entity_id: input_boolean.condition_1
#            state: 'on'
#
#          - condition: state
#            entity_id: input_boolean.condition_2
#            state: 'on'
#
#    action:
#      - service: input_select.select_option
#        data:
#          entity_id: input_select.rgb_light
#          option: "Red"
#
#

#  ### TEST --- Turn off the lights in the morning once sun is up high enough
#  - id: 'test_script_living_room_morning'
#    alias: Test Living Room Off Morning
#    initial_state: 'on'
#    trigger:
#      - platform: numeric_state
#        entity_id: sun.sun
#        value_template: '{{ state.attributes.elevation }}'
#        above: 9
#        for:
#          minutes: 5
#
#    action:
#      - service: notify.mobile_app_rip8plus
#        data:
#          title: "Sun Up Trigger OK"
#          message: "Sun is {{ states.sun.sun.attributes.elevation }} at {{ states.sensor.floorplan_time.state }}"



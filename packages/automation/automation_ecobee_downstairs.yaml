#####################################################################
### Downstairs Climate-related automations
#####################################################################
automation:
  ### Set Climate on away
  - alias: Climate Downstairs Away Mode
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.away_mode

      - platform: state
        entity_id: group.door_sensors
        from: 'closed'
        to: 'open'
        for:
          minutes: 10

    condition:
      - condition: state
        entity_id: input_boolean.visitor_mode
        state: 'off'

    action:
      - service: climate.set_away_mode
        data:
          entity_id: climate.downstairs
          away_mode: 'on'


  ### Sleep Mode On
  - alias: Climate Downstairs Sleep Schedule
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: script.bedtime
        from: 'off'
        to: 'on'

    condition:
      - condition: template
        value_template: "{{ states.climate.downstairs.attributes.hold_mode != 'sleep' }}"

    action:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: 'sleep'


  ### Set Temperature upon return
  - alias: Climate Downstairs Resume
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: group.all_devices
      from: 'not_home'
      to: 'home'
      for:
        minutes: 2

    action:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: 'home'

      - delay:
          minutes: 30

      - service: climate.ecobee_resume_program
        data:
          entity_id: climate.downstairs
          resume_all: 'true'


  ### Doors Left Open
  - alias: Climate Downstairs Door Left Open
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_boolean.door_held_open
        to: 'on'
        for:
          minutes: 2

    condition:
      - condition: template
        value_template: "{{ states.climate.downstairs.attributes.hold_mode != 'away' }}"

    action:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: 'away'

      - service: media_player.volume_set
        data:
          entity_id: media_player.living_room
          volume_level: .6

      - service: media_player.alexa_tts
        data_template:
          entity_id: media_player.living_room
          message: "I've detected a door held open for too long so I'm turning off the AC to save energy."

      - service: notify.notify
        data:
          title: "Door Held Open"
          message: "A door's been open too long - Away mode activated downstairs"

      - delay: '00:00:10'

      - service: media_player.volume_set
        data:
          entity_id: media_player.living_room
          volume_level: .4


  ### Set min fan time for Summer
  - alias: Set fan timer summer
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.season
        to: 'Summer'

    action:
      - service: climate.ecobee_set_fan_min_on_time
        data:
          entity_id: climate.downstairs
          fan_min_on_time: '15'


  ### Set min fan time for Winter
  - alias: Set fan timer winter
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.season
        to: 'Winter'

      - platform: state
        entity_id: sensor.season
        to: 'Awesome'

    action:
      - service: climate.ecobee_set_fan_min_on_time
        data:
          entity_id: climate.downstairs
          fan_min_on_time: '5'


  ### Set away mode when weather is awesome
  - alias: Climate Downstairs Away if Awesome Weather
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.season
        to: 'Awesome'

    condition:
      - condition: template
        value_template: "{{ states.climate.downstairs.attributes.current_temperature <= 80 }}"

    action:
      - service: climate.set_away_mode
        data:
          entity_id: climate.downstairs
          away_mode: 'on'


  ### Notify if awesome weather
  - alias: Notify if Awesome Weather
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.season
        to: 'Awesome'

    condition:
      - condition: time
        after: '08:00:00'
        before: '21:00:00'

    action:
      - service: notify.ios_i8plus
        data:
          title: "Awesome Weather"
          message: "It's {{ states.sensor.dark_sky_temperature.state|round }} degrees outside. Time to open up the house!"


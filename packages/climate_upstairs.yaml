############################################################################
#    @package          :     climate_upstairs
#    @description      :     climate_upstairs, and associated automations, scenes, etc.
############################################################################
homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################
    package.node_anchors:
      customize: &customize
        package: 'climate_upstairs'

      contained: &contained
        <<: *customize
        haaska_hidden: true
        homebridge_hidden: true

      exposed: &exposed
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

      hidden: &hidden
        <<: *contained
        hidden: true


    ################################################
    ## Script
    ################################################
    script.ecobee_us_home:
      friendly_name: "Ecobee Upstairs Home"
      entity_picture: /local/ecobee.png

    script.ecobee_us_away:
      <<: *contained
      friendly_name: "Ecobee Upstairs Away"
      entity_picture: /local/ecobee.png

    script.ecobee_us_sleep:
      <<: *contained
      friendly_name: "Ecobee Upstairs Sleep"
      entity_picture: /local/ecobee.png

    script.ecobee_us_resume:
      <<: *contained
      friendly_name: "Ecobee Upstairs Resume"
      entity_picture: /local/ecobee.png


    ################################################
    ## Sensor
    ################################################
    climate.upstairs:
      <<: *contained
      friendly_name: "Upstairs Thermostat"
      icon: mdi:thermostat

    sensor.us_avg_temp:
      <<: *contained
      icon: mdi:chart-areaspline

    sensor.us_climate_current_temp:
      <<: *contained
      icon: mdi:thermometer

    sensor.us_fan_state:
      <<: *contained
      icon: mdi:fan

    sensor.upstairs_humidity:
      <<: *contained
      icon: mdi:water-percent

    sensor.us_climate_mode:
      <<: *contained
      icon: mdi:thermostat

    sensor.us_climate_hold:
      <<: *contained
      icon: mdi:thermostat

    sensor.us_climate_away:
      <<: *contained
      icon: mdi:thermostat

    sensor.us_climate_target_low:
      <<: *contained
      icon: mdi:thermometer

    sensor.us_climate_target_high:
      <<: *contained
      icon: mdi:thermometer


#####################################################################
### Group
#####################################################################
group:
  Upstairs Climate:
    entities:
      - climate.upstairs
      - sensor.us_avg_temp
      - sensor.upstairs_temperature
      - sensor.nursery_temperature
      - sensor.guest_room_temperature
      - sensor.upstairs_humidity

  Upstairs Ecobee:
    control: hidden
    entities:
      - sensor.us_climate_mode
      - sensor.us_climate_hold
      - sensor.us_climate_away
      - sensor.us_fan_state
      - script.ecobee_us_home
      - script.ecobee_us_away
      - script.ecobee_us_sleep
      - script.ecobee_us_resume


#####################################################################
### Sensor
#####################################################################
sensor:
  - platform: template
    sensors:
      us_avg_temp:
        friendly_name: "Upstairs Average Temperature"
        unit_of_measurement: "째F"
        value_template: >-
          {{ ((float(states.sensor.upstairs_temperature.state) + float(states.sensor.nursery_temperature.state) + float(states.sensor.guest_room_temperature.state)) / 3) | round(1) }}
        entity_id: sensor.time


  - platform: template
    sensors:
      us_climate_current_temp:
        friendly_name: "Upstairs AC Temperature"
        unit_of_measurement: "째F"
        value_template: "{{ (states.climate.upstairs.attributes|default({})).current_temperature|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      us_climate_hold:
        friendly_name: "Manual Override"
        value_template: "{{ (states.climate.upstairs.attributes|default({})).hold_mode|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      us_climate_away:
        friendly_name: "Away Mode"
        value_template: "{{ (states.climate.upstairs.attributes|default({})).away_mode|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      us_climate_mode:
        friendly_name: "Active Schedule"
        value_template: "{{ (states.climate.upstairs.attributes|default({})).climate_mode|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      us_climate_target_high:
        friendly_name: "Upstairs AC Setpoint"
        unit_of_measurement: "째F"
        value_template: "{{ (states.climate.upstairs.attributes|default({})).target_temp_high|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      us_climate_target_low:
        friendly_name: "Upstairs Heat Setpoint"
        unit_of_measurement: "째F"
        value_template: "{{ (states.climate.upstairs.attributes|default({})).target_temp_low|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      us_fan_state:
        friendly_name: "Fan State"
        value_template: "{{ (states.climate.upstairs.attributes|default({})).fan|default('unknown') }}"
        entity_id: sensor.time


#####################################################################
### Script
#####################################################################
script:
  ecobee_us_home:
    sequence:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.upstairs
          hold_mode: 'home'

  ecobee_us_away:
    sequence:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.upstairs
          hold_mode: 'away'

  ecobee_us_sleep:
    sequence:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.upstairs
          hold_mode: 'sleep'

  ecobee_us_resume:
    sequence:
      - service: climate.ecobee_resume_program
        data:
          entity_id: climate.upstairs
          resume_all: 'true'


#####################################################################
### Automation
#####################################################################
automation:
  ### Set Climate on away
  - alias: Climate Upstairs Away Mode
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.away_mode

    condition:
      - condition: state
        entity_id: input_boolean.visitor_mode
        state: 'off'

    action:
      - service: climate.set_away_mode
        data:
          entity_id: climate.upstairs
          away_mode: 'on'


  ### Sleep Mode On
  - alias: Climate Upstairs Sleep Schedule
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: script.bedtime
        from: 'off'
        to: 'on'

      - platform: state
        entity_id: input_boolean.after_hours
        from: 'off'
        to: 'on'

    condition:
      - condition: template
        value_template: "{{ states.climate.upstairs.attributes.hold_mode != 'sleep' }}"

    action:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.upstairs
          hold_mode: 'sleep'


  ### Set Temperature upon return
  - alias: Climate Upstairs Resume
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: group.all_devices
      from: 'not_home'
      to: 'home'
      for:
        minutes: 2

    action:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.upstairs
          hold_mode: 'home'

      - delay:
          minutes: 30

      - service: climate.ecobee_resume_program
        data:
          entity_id: climate.upstairs
          resume_all: 'true'


  ### Doors Left Open
  - alias: Climate Upstairs Door Left Open
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: group.door_sensors
        to: 'open'
        for:
          minutes: 7

    condition:
      - condition: template
        value_template: "{{ states.climate.upstairs.attributes.hold_mode != 'away' }}"

    action:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.upstairs
          hold_mode: 'away'


  ### Set min fan time for Summer
  - alias: Set fan timer summer
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.season
        to: 'Summer'

    action:
      - service: climate.ecobee_set_fan_min_on_time
        data:
          entity_id: climate.upstairs
          fan_min_on_time: '30'


  ### Set min fan time for Winter
  - alias: Set fan timer winter
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.season
        to: 'Winter'

      - platform: state
        entity_id: sensor.season
        to: 'Awesome'

    action:
      - service: climate.ecobee_set_fan_min_on_time
        data:
          entity_id: climate.upstairs
          fan_min_on_time: '5'


#  ### Set away mode when weather is awesome
#  - alias: Climate Upstairs Away if Awesome Weather
#    initial_state: 'on'
#    trigger:
#      - platform: state
#        entity_id: sensor.season
#        to: 'Awesome'
#        for:
#          minutes: 30
#
#    condition:
#      - condition: template
#        value_template: "{{ states.climate.upstairs.attributes.hold_mode != 'away' }}"
#
#    action:
#      - service: climate.set_away_mode
#        data:
#          entity_id: climate.upstairs
#          away_mode: 'on'


#  ### Climate Resume
#  - alias: Climate Upstairs Resume
#    initial_state: 'on'
#    trigger:
#      - platform: time
#        at: '02:00:00'
#
#      - platform: time
#        at: '18:02:00'
#
#      - platform: time
#        at: '22:05:00'
#
#    condition:
#      - condition: state
#        entity_id: group.door_sensors
#        state: 'closed'
#
#      - condition: template
#        value_template: "{{ states.sensor.season.state != 'Awesome' }}"
#
#      - condition: or
#        conditions:
#          - condition: state
#            entity_id: group.all_devices
#            state: 'home'
#          
#          - condition: state
#            entity_id: input_boolean.visitor_mode
#            state: 'on'
#
#    action:
#      - service: climate.ecobee_resume_program
#        data:
#          entity_id: climate.upstairs
#          resume_all: 'true'


#  ### Home Mode Weekdays
#  - alias: Climate Upstairs Home Schedule Weekdays
#    initial_state: 'on'
#    trigger:
#      - platform: time
#        at: '18:00:00'
#
#    condition:
#      - condition: time
#        weekday:
#          - mon
#          - tue
#          - wed
#          - thu
#          - fri
#
#      - condition: or
#        conditions:
#          - condition: state
#            entity_id: group.all_devices
#            state: 'home'
#
#          - condition: state
#            entity_id: input_boolean.visitor_mode
#            state: 'on'
#
#    action:
#      - service: climate.set_hold_mode
#        data:
#          entity_id: climate.upstairs
#          hold_mode: 'home'


#  ### Home Mode Weekends
#  - alias: Climate Upstairs Home Schedule Weekends
#    initial_state: 'on'
#    trigger:
#      - platform: time
#        at: '17:00:00'
#
#    condition:
#      - condition: time
#        weekday:
#          - sat
#          - sun
#
#      - condition: or
#        conditions:
#          - condition: state
#            entity_id: group.all_devices
#            state: 'home'
#
#          - condition: state
#            entity_id: input_boolean.visitor_mode
#            state: 'on'
#
#    action:
#      - service: climate.set_hold_mode
#        data:
#          entity_id: climate.upstairs
#          hold_mode: 'home'

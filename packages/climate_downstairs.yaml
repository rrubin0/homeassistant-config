############################################################################
#    @package          :     climate_downstairs
#    @description      :     climate_downstairs, and associated automations, scenes, etc.
############################################################################
homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################
    package.node_anchors:
      customize: &customize
        package: 'climate_downstairs'

      contained: &contained
        <<: *customize
        haaska_hidden: true
        homebridge_hidden: true

      exposed: &exposed
        <<: *customize
        haaska_hidden: false
        homebridge_hidden: false

      hidden: &hidden
        <<: *contained
        hidden: true


    ################################################
    ## Script
    ################################################
    script.ecobee_ds_home:
      friendly_name: "Ecobee Downstairs Home"
      entity_picture: /local/ecobee.png

    script.ecobee_ds_away:
      <<: *contained
      friendly_name: "Ecobee Downstairs Away"
      entity_picture: /local/ecobee.png

    script.ecobee_ds_sleep:
      <<: *contained
      friendly_name: "Ecobee Downstairs Sleep"
      entity_picture: /local/ecobee.png

    script.ecobee_ds_normal:
      friendly_name: "Ecobee Downstairs Normal"
      entity_picture: /local/ecobee.png

    script.ecobee_ds_resume:
      <<: *contained
      friendly_name: "Ecobee Downstairs Resume"
      entity_picture: /local/ecobee.png


    ################################################
    ## Sensor
    ################################################
    climate.downstairs:
      <<: *contained
      friendly_name: "Downstairs Thermostat"
      icon: mdi:thermostat

    sensor.ds_avg_temp:
      <<: *contained
      icon: mdi:chart-areaspline

    sensor.ds_climate_current_temp:
      <<: *contained
      icon: mdi:thermometer

    sensor.ds_fan_state:
      <<: *contained
      icon: mdi:fan

    sensor.downstairs_humidity:
      <<: *contained
      icon: mdi:water-percent

    sensor.ds_climate_mode:
      <<: *contained
      icon: mdi:thermostat

    sensor.ds_climate_hold:
      <<: *contained
      icon: mdi:thermostat

    sensor.ds_climate_away:
      <<: *contained
      icon: mdi:thermostat

    sensor.ds_climate_target_low:
      <<: *contained
      icon: mdi:thermometer

    sensor.ds_climate_target_high:
      <<: *contained
      icon: mdi:thermometer

    sensor.front_entry_fibaro_multisensor_temperature:
      <<: *contained
      friendly_name: "Front Entry Temperature"
      icon: mdi:thermometer

    sensor.broadlink_sensor_temperature:
      <<: *contained
      friendly_name: "Stairway Temperature"
      icon: mdi:thermometer


#####################################################################
### Sensor
#####################################################################
sensor:
  - platform: template
    sensors:
      ds_avg_temp:
        friendly_name: "Downstairs Average Temperature"
        unit_of_measurement: "째F"
        value_template: >-
          {{ ((float(states.sensor.downstairs_temperature.state) + float(states.sensor.living_room_temperature.state) + float(states.sensor.entryway_temperature.state) + float(states.sensor.office_temperature.state) + float(states.sensor.front_entry_fibaro_multisensor_temperature.state) + float(states.sensor.broadlink_sensor_temperature.state)) / 6) | round(1) }}
        entity_id: sensor.time


  - platform: template
    sensors:
      ds_climate_current_temp:
        friendly_name: "Downstairs AC Temperature"
        unit_of_measurement: "째F"
        value_template: "{{ (states.climate.downstairs.attributes|default({})).current_temperature|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      ds_climate_hold:
        friendly_name: "Manual Override"
        value_template: "{{ (states.climate.downstairs.attributes|default({})).hold_mode|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      ds_climate_away:
        friendly_name: "Away Mode"
        value_template: "{{ (states.climate.downstairs.attributes|default({})).away_mode|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      ds_climate_mode:
        friendly_name: "Active Schedule"
        value_template: "{{ (states.climate.downstairs.attributes|default({})).climate_mode|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      ds_climate_target_high:
        friendly_name: "Downstairs AC Setpoint"
        unit_of_measurement: "째F"
        value_template: "{{ (states.climate.downstairs.attributes|default({})).target_temp_high|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      ds_climate_target_low:
        friendly_name: "Downstairs Heat Setpoint"
        unit_of_measurement: "째F"
        value_template: "{{ (states.climate.downstairs.attributes|default({})).target_temp_low|default('unknown') }}"
        entity_id: sensor.time

  - platform: template
    sensors:
      ds_fan_state:
        friendly_name: "Fan State"
        value_template: "{{ (states.climate.downstairs.attributes|default({})).fan|default('unknown') }}"
        entity_id: sensor.time


  ################################################
  ## Sensor - Broadlink RM 2 Pro
  ################################################
  - platform: broadlink
    host: !secret broadlink_ip
    mac: !secret broadlink_mac
    monitored_conditions:
      - 'temperature'


#####################################################################
### Script
#####################################################################
script:
  ecobee_ds_home:
    sequence:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: 'home'

  ecobee_ds_away:
    sequence:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: 'away'

  ecobee_ds_sleep:
    sequence:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: 'sleep'

  ecobee_ds_normal:
    sequence:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: smart1'

  ecobee_ds_resume:
    sequence:
      - service: climate.ecobee_resume_program
        data:
          entity_id: climate.downstairs
          resume_all: 'true'


#####################################################################
### Automation
#####################################################################
automation:
  ### Set Climate on away
  - alias: Climate Downstairs Away Mode
    initial_state: 'on'
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.away_mode

      - platform: state
        entity_id: group.door_sensors
        from: 'closed'
        to: 'open'
        for:
          minutes: 10

    condition:
      - condition: state
        entity_id: input_boolean.visitor_mode
        state: 'off'

    action:
      - service: climate.set_away_mode
        data:
          entity_id: climate.downstairs
          away_mode: 'on'


  ### Sleep Mode On
  - alias: Climate Downstairs Sleep Schedule
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: script.bedtime
        from: 'off'
        to: 'on'

    condition:
      - condition: template
        value_template: "{{ states.climate.downstairs.attributes.hold_mode != 'sleep' }}"

    action:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: 'sleep'


  ### Set Temperature upon return
  - alias: Climate Downstairs Resume
    initial_state: 'on'
    trigger:
      platform: state
      entity_id: group.all_devices
      from: 'not_home'
      to: 'home'
      for:
        minutes: 2

    action:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: 'home'

      - delay:
          minutes: 30

      - service: climate.ecobee_resume_program
        data:
          entity_id: climate.downstairs
          resume_all: 'true'


  ### Doors Left Open
  - alias: Climate Downstairs Door Left Open
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: group.door_sensors
        to: 'open'
        for:
          minutes: 7

    condition:
      - condition: template
        value_template: "{{ states.climate.downstairs.attributes.hold_mode != 'away' }}"

    action:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: 'away'


  ### Set min fan time for Summer
  - alias: Set fan timer summer
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.season
        to: 'Summer'

    action:
      - service: climate.ecobee_set_fan_min_on_time
        data:
          entity_id: climate.downstairs
          fan_min_on_time: '15'


  ### Set min fan time for Winter
  - alias: Set fan timer winter
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.season
        to: 'Winter'

      - platform: state
        entity_id: sensor.season
        to: 'Awesome'

    action:
      - service: climate.ecobee_set_fan_min_on_time
        data:
          entity_id: climate.downstairs
          fan_min_on_time: '5'


  ### Set away mode when weather is awesome
  - alias: Climate Downstairs Away if Awesome Weather
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: sensor.season
        to: 'Awesome'

    condition:
      - condition: template
        value_template: "{{ states.climate.downstairs.attributes.hold_mode != 'away' }}"

      - condition: time
        after: '08:00:00'

    action:
      - service: climate.set_hold_mode
        data:
          entity_id: climate.downstairs
          hold_mode: 'away'

      - service: notify.ios_i8plus
        data:
          title: "Awesome Weather"
          message: "It's {{ states.sensor.yweather_temperature.state }} degrees outside. Time to open up the house!"

